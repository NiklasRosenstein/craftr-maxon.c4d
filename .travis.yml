language: cpp
os:
- osx
- linux

addons:
  apt:
    sources:
      - deadsnakes
      - ubuntu-toolchain-r-test
    packages:
      - python3.4
      - gcc-5
      - g++-5

env:
  # These versions require a version of XCode that is no longer
  # supported by Travis CI.
  - C4DVERSION=12.032 XCODE_VERSION=5.0-10.08-2013.09.18
  - C4DVERSION=13.051 XCODE_VERSION=5.0-10.08-2013.09.18
  - C4DVERSION=14.041 XCODE_VERSION=5.0-10.08-2013.09.18
  # These fixed versions compile with LLVM 6+ (so, including 7.3).
  - C4DVERSION=12.032-llvm6fix XCODE_VERSION=xcode6.4-10.10-2015.06.30.dmg
  - C4DVERSION=13.051-llvm6fix XCODE_VERSION=xcode6.4-10.10-2015.06.30.dmg
  - C4DVERSION=14.041-llvm6fix XCODE_VERSION=xcode6.4-10.10-2015.06.30.dmg
  # These we can compile with XCode 7.3.
  - C4DVERSION=15.064 XCODE_VERSION=xcode7.3.1-10.11-2016.05.04.dmg
  - C4DVERSION=16.021 XCODE_VERSION=xcode7.3.1-10.11-2016.05.04.dmg
  - C4DVERSION=16.050 XCODE_VERSION=xcode7.3.1-10.11-2016.05.04.dmg
  - C4DVERSION=17.048 XCODE_VERSION=xcode7.3.1-10.11-2016.05.04.dmg
  - C4DVERSION=18.030 XCODE_VERSION=xcode7.3.1-10.11-2016.05.04.dmg
  - C4DVERSION=18.041 XCODE_VERSION=xcode7.3.1-10.11-2016.05.04.dmg

install:
  - mkdir .tmp
  - export PATH=$PATH:$PWD/.tmp
  - .ci/tools/get-ninja v1.7.2 .tmp

  # OSX: Install Python 3 with Homebrew.
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install python3; fi

  # Choose the Python version differently on Linux and OSX.
  - if [ "$TRAVIS_OS_NAME" == "osx" ];
    then PYTHON=python3; PIP=pip3;
    else PYTHON=python3.4; PIP=pip3.4; fi

  # Install Pip into that Python version.
  - curl -s https://bootstrap.pypa.io/get-pip.py | sudo $PYTHON

  # -------------------------------------------------------------------------

  # Linux: Use the newer version of GCC that we installed with addons:apt:packages
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      export CC=gcc-5;
      export CXX=g++-5;
      PIPUSERINSTALL=--user;
      NODEPYGLOBALINSTALL=-g;
    fi

  # -------------------------------------------------------------------------

  # Install Node.py.
  - $PIP install $PIPUSERINSTALL git+https://github.com/nodepy/nodepy.git@develop
  - nodepy --version
  - nodepy https://nodepy.org/install-pm develop $NODEPYGLOBALINSTALL
  - nodepy-pm --version
  - export PATH="$(nodepy-pm bin):$PATH"

  # -------------------------------------------------------------------------

  # Apparently we need this on OSX because otherwise we can run into the error:
  #     /Users/travis/build.sh: line 109: shell_session_update: command not found
  # See travis-ci#6307
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then rvm get stable; fi

  # Install XCode command-line tools.
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && [ ! -z "$XCODE_VERSION" ]; then
      set -e;
      nodepy-pm install git+https://github.com/NiklasRosenstein/osxt.git;
      URL=https://public.niklasrosenstein.com/software/xcode-cltools/xcode${XCODE_VERSION}.dmg;
      echo "Downloading \"$URL\" ...";
      mkdir _temp;
      curl -sSfL $URL -o "_temp/xcode$XCODE_VERSION.dmg";
      sudo osxt xcode install "_temp/xcode$XCODE_VERSION.dmg" xcode5;
      export CC=$PWD/xcode5/usr/bin/clang;
      export CXX=$PWD/xcode5/usr/bin/clang++;
    fi

  # Install Craftr.
  - nodepy-pm install git+https://github.com/craftr-build/craftr.git@master
  - craftr --version

  # self install.
  - nodepy-pm install


script:
  - craftr --configure --options maxon.c4d.version=$C4DVERSION
  - craftr --build
