/* Auto-generated using r20enums.py */
#pragma once
#if API_VERSION >= 20000

// enum class BITMAP_UPDATEREGION from "c4d_basebitmap.h" line 114
#define BITMAP_UPDATEREGION_X1 (BITMAP_UPDATEREGION::X1)
#define BITMAP_UPDATEREGION_Y1 (BITMAP_UPDATEREGION::Y1)
#define BITMAP_UPDATEREGION_X2 (BITMAP_UPDATEREGION::X2)
#define BITMAP_UPDATEREGION_Y2 (BITMAP_UPDATEREGION::Y2)
#define BITMAP_UPDATEREGION_TYPE (BITMAP_UPDATEREGION::TYPE)
#define BITMAP_UPDATEREGION_COLOR (BITMAP_UPDATEREGION::COLOR)
#define BITMAP_UPDATEREGION_PREPARE (BITMAP_UPDATEREGION::PREPARE)

// enum class OITMODE from "c4d_basedraw.h" line 125
#define OITMODE_OFF (OITMODE::OFF)
#define OITMODE_FIRST (OITMODE::FIRST)
#define OITMODE_MIDDLE (OITMODE::MIDDLE)
#define OITMODE_LAST (OITMODE::LAST)

// enum class MDDIRTY from "c4d_baseeffectordata.h" line 85
#define MDDIRTY_NONE (MDDIRTY::NONE)
#define MDDIRTY_0 (MDDIRTY::NONE)
#define MDDIRTY_ALL (MDDIRTY::ALL)
#define MDDIRTY_ARRAYCOUNT (MDDIRTY::ARRAYCOUNT)
#define MDDIRTY_COUNT (MDDIRTY::COUNT)
#define MDDIRTY_DATA (MDDIRTY::DATA)

// enum class MD_TYPE from "c4d_baseeffectordata.h" line 100
#define MD_TYPE_MD_NONE (MD_TYPE::MD_NONE)
#define MD_TYPE_MD_CHAR (MD_TYPE::MD_CHAR)
#define MD_TYPE_MD_UCHAR (MD_TYPE::MD_UCHAR)
#define MD_TYPE_MD_LONG (MD_TYPE::MD_LONG)
#define MD_TYPE_MD_ULONG (MD_TYPE::MD_ULONG)
#define MD_TYPE_MD_LLONG (MD_TYPE::MD_LLONG)
#define MD_TYPE_MD_MATRIX (MD_TYPE::MD_MATRIX)
#define MD_TYPE_MD_COLOR (MD_TYPE::MD_COLOR)
#define MD_TYPE_MD_VECTOR (MD_TYPE::MD_VECTOR)
#define MD_TYPE_MD_NORMAL (MD_TYPE::MD_NORMAL)
#define MD_TYPE_MD_REAL (MD_TYPE::MD_REAL)
#define MD_TYPE_MD_BOOL (MD_TYPE::MD_BOOL)

// enum class TOOLTRANSFORM_FLAG from "c4d_baselist.h" line 69
#define TOOLTRANSFORM_FLAG_NO_TRANSFORM (TOOLTRANSFORM_FLAG::NO_TRANSFORM)
#define TOOLTRANSFORM_FLAG_NO_RECURSE (TOOLTRANSFORM_FLAG::NO_RECURSE)
#define TOOLTRANSFORM_FLAG_NO_PARAMS (TOOLTRANSFORM_FLAG::NO_PARAMS)
#define TOOLTRANSFORM_FLAG_NONE (TOOLTRANSFORM_FLAG::NONE)
#define TOOLTRANSFORM_FLAG_0 (TOOLTRANSFORM_FLAG::NONE)

// enum class MULTILINEEDITTEXTMESSAGEFLAGS from "c4d_baselist.h" line 801
#define MULTILINEEDITTEXTMESSAGEFLAGS_NONE (MULTILINEEDITTEXTMESSAGEFLAGS::NONE)
#define MULTILINEEDITTEXTMESSAGEFLAGS_0 (MULTILINEEDITTEXTMESSAGEFLAGS::NONE)
#define MULTILINEEDITTEXTMESSAGEFLAGS_SET (MULTILINEEDITTEXTMESSAGEFLAGS::SET)

// enum class MSG_DOCUMENTINFO_TYPE_BEFOREMERGE_RESULT from "c4d_baselist.h" line 1018
#define MSG_DOCUMENTINFO_TYPE_BEFOREMERGE_RESULT_CANCEL (MSG_DOCUMENTINFO_TYPE_BEFOREMERGE_RESULT::CANCEL)
#define MSG_DOCUMENTINFO_TYPE_BEFOREMERGE_RESULT_MERGE (MSG_DOCUMENTINFO_TYPE_BEFOREMERGE_RESULT::MERGE)
#define MSG_DOCUMENTINFO_TYPE_BEFOREMERGE_RESULT_NEWSCENE (MSG_DOCUMENTINFO_TYPE_BEFOREMERGE_RESULT::NEWSCENE)

// enum class CUSTOMTYPE from "c4d_customguidata.h" line 81
#define CUSTOMTYPE_END (CUSTOMTYPE::END)
#define CUSTOMTYPE_FLAG (CUSTOMTYPE::FLAG)
#define CUSTOMTYPE_LONG (CUSTOMTYPE::LONG)
#define CUSTOMTYPE_REAL (CUSTOMTYPE::REAL)
#define CUSTOMTYPE_STRING (CUSTOMTYPE::STRING)
#define CUSTOMTYPE_VECTOR (CUSTOMTYPE::VECTOR)
#define CUSTOMTYPE_HIDE_ID (CUSTOMTYPE::HIDE_ID)

// enum class MAXONCONVERTMODE from "c4d_file.h" line 1968
#define MAXONCONVERTMODE_NONE (MAXONCONVERTMODE::NONE)
#define MAXONCONVERTMODE_0 (MAXONCONVERTMODE::NONE)
#define MAXONCONVERTMODE_READ (MAXONCONVERTMODE::READ)
#define MAXONCONVERTMODE_WRITE (MAXONCONVERTMODE::WRITE)

// enum class BITMAPLOADERACTION from "c4d_filterdata.h" line 57
#define BITMAPLOADERACTION_INIT (BITMAPLOADERACTION::INIT)
#define BITMAPLOADERACTION_LOAD (BITMAPLOADERACTION::LOAD)
#define BITMAPLOADERACTION_FREE (BITMAPLOADERACTION::FREE)
#define BITMAPLOADERACTION_INITLAYERSET (BITMAPLOADERACTION::INITLAYERSET)

// enum class MACHINEFEATURESTYPE from "c4d_general.h" line 1529
#define MACHINEFEATURESTYPE_CURRENT (MACHINEFEATURESTYPE::CURRENT)
#define MACHINEFEATURESTYPE_HARDWARE_OGL (MACHINEFEATURESTYPE::HARDWARE_OGL)
#define MACHINEFEATURESTYPE_SOFTWARE_OGL (MACHINEFEATURESTYPE::SOFTWARE_OGL)

// enum class HANDLECONSTRAINTTYPE from "c4d_objectdata.h" line 30
#define HANDLECONSTRAINTTYPE_INVALID (HANDLECONSTRAINTTYPE::INVALID)
#define HANDLECONSTRAINTTYPE_LINEAR (HANDLECONSTRAINTTYPE::LINEAR)
#define HANDLECONSTRAINTTYPE_PLANAR (HANDLECONSTRAINTTYPE::PLANAR)
#define HANDLECONSTRAINTTYPE_FREE (HANDLECONSTRAINTTYPE::FREE)
#define HANDLECONSTRAINTTYPE_RADIAL (HANDLECONSTRAINTTYPE::RADIAL)
#define HANDLECONSTRAINTTYPE_SPHERICAL (HANDLECONSTRAINTTYPE::SPHERICAL)

// enum class INITRENDERFLAG from "c4d_shader.h" line 135
#define INITRENDERFLAG_NONE (INITRENDERFLAG::NONE)
#define INITRENDERFLAG_0 (INITRENDERFLAG::NONE)
#define INITRENDERFLAG_TEXTURES (INITRENDERFLAG::TEXTURES)
#define INITRENDERFLAG_PAINTERNOMIP (INITRENDERFLAG::PAINTERNOMIP)
#define INITRENDERFLAG_NOMIP (INITRENDERFLAG::NOMIP)
#define INITRENDERFLAG_PREVIEWRENDER (INITRENDERFLAG::PREVIEWRENDER)
#define INITRENDERFLAG_IRR (INITRENDERFLAG::IRR)

// enum class SNAPPRIORITY from "c4d_snapdata.h" line 89
#define SNAPPRIORITY_NONE (SNAPPRIORITY::NONE)
#define SNAPPRIORITY_0 (SNAPPRIORITY::NONE)
#define SNAPPRIORITY_PLANE (SNAPPRIORITY::PLANE)
#define SNAPPRIORITY_GUIDE (SNAPPRIORITY::GUIDE)
#define SNAPPRIORITY_EDGE (SNAPPRIORITY::EDGE)
#define SNAPPRIORITY_POINT (SNAPPRIORITY::POINT)

// enum class SNAPFLAGS from "c4d_snapdata.h" line 103
#define SNAPFLAGS_NONE (SNAPFLAGS::NONE)
#define SNAPFLAGS_0 (SNAPFLAGS::NONE)
#define SNAPFLAGS_IGNORE_SELECTED (SNAPFLAGS::IGNORE_SELECTED)
#define SNAPFLAGS_IGNORE_AXIS (SNAPFLAGS::IGNORE_AXIS)
#define SNAPFLAGS_POINTSONLY (SNAPFLAGS::POINTSONLY)
#define SNAPFLAGS_SURFACEONLY (SNAPFLAGS::SURFACEONLY)

// enum class INFERREDGUIDETYPE from "c4d_snapdata.h" line 117
#define INFERREDGUIDETYPE_POINT (INFERREDGUIDETYPE::POINT)
#define INFERREDGUIDETYPE_LINE (INFERREDGUIDETYPE::LINE)
#define INFERREDGUIDETYPE_PLANE (INFERREDGUIDETYPE::PLANE)

// enum class VERTEXCOLOR_DISPLAYMODE from "c4d_tooldata.h" line 26
#define VERTEXCOLOR_DISPLAYMODE_NONE (VERTEXCOLOR_DISPLAYMODE::NONE)
#define VERTEXCOLOR_DISPLAYMODE_0 (VERTEXCOLOR_DISPLAYMODE::NONE)
#define VERTEXCOLOR_DISPLAYMODE_COLOR (VERTEXCOLOR_DISPLAYMODE::COLOR)
#define VERTEXCOLOR_DISPLAYMODE_ALPHA (VERTEXCOLOR_DISPLAYMODE::ALPHA)

// enum class BAKE_STATE from "c4d_tools.h" line 2764
#define BAKE_STATE_NONE (BAKE_STATE::NONE)
#define BAKE_STATE_0 (BAKE_STATE::NONE)
#define BAKE_STATE_PREPARE (BAKE_STATE::PREPARE)
#define BAKE_STATE_GI_PREPASS (BAKE_STATE::GI_PREPASS)
#define BAKE_STATE_FILL_IMAGE (BAKE_STATE::FILL_IMAGE)
#define BAKE_STATE_COMPLETE (BAKE_STATE::COMPLETE)
#define BAKE_STATE_INITIALIZE (BAKE_STATE::INITIALIZE)
#define BAKE_STATE_RESIZENOTIFY (BAKE_STATE::RESIZENOTIFY)

// enum class VIDEOPOSTCALL from "c4d_videopostdata.h" line 41
#define VIDEOPOSTCALL_FRAMESEQUENCE (VIDEOPOSTCALL::FRAMESEQUENCE)
#define VIDEOPOSTCALL_FRAME (VIDEOPOSTCALL::FRAME)
#define VIDEOPOSTCALL_SUBFRAME (VIDEOPOSTCALL::SUBFRAME)
#define VIDEOPOSTCALL_RENDER (VIDEOPOSTCALL::RENDER)
#define VIDEOPOSTCALL_INNER (VIDEOPOSTCALL::INNER)
#define VIDEOPOSTCALL_TILE (VIDEOPOSTCALL::TILE)

// enum class VIDEOPOST_GLDRAW from "c4d_videopostdata.h" line 297
#define VIDEOPOST_GLDRAW_NONE (VIDEOPOST_GLDRAW::NONE)
#define VIDEOPOST_GLDRAW_0 (VIDEOPOST_GLDRAW::NONE)
#define VIDEOPOST_GLDRAW_CUSTOM_MOUSE_INIT (VIDEOPOST_GLDRAW::CUSTOM_MOUSE_INIT)
#define VIDEOPOST_GLDRAW_CUSTOM_MOUSE_DRAW (VIDEOPOST_GLDRAW::CUSTOM_MOUSE_DRAW)
#define VIDEOPOST_GLDRAW_PREPASS (VIDEOPOST_GLDRAW::PREPASS)
#define VIDEOPOST_GLDRAW_DRAW (VIDEOPOST_GLDRAW::DRAW)

// enum class SERVERMESSAGE from "ge_prepass.h" line 36
#define SERVERMESSAGE_NONE (SERVERMESSAGE::NONE)
#define SERVERMESSAGE_0 (SERVERMESSAGE::NONE)
#define SERVERMESSAGE_WARNING (SERVERMESSAGE::WARNING)
#define SERVERMESSAGE_ERROR_ (SERVERMESSAGE::ERROR_)
#define SERVERMESSAGE_INFO (SERVERMESSAGE::INFO)

// enum class RENDERJOBLIST from "ge_prepass.h" line 49
#define RENDERJOBLIST_INACTIVE (RENDERJOBLIST::INACTIVE)
#define RENDERJOBLIST_ACTIVE (RENDERJOBLIST::ACTIVE)
#define RENDERJOBLIST_LOAD (RENDERJOBLIST::LOAD)
#define RENDERJOBLIST_ALL (RENDERJOBLIST::ALL)

// enum class MESSAGERESULT from "ge_prepass.h" line 61
#define MESSAGERESULT_OK (MESSAGERESULT::OK)
#define MESSAGERESULT_NETWORKERROR (MESSAGERESULT::NETWORKERROR)
#define MESSAGERESULT_UNKNOWNERROR (MESSAGERESULT::UNKNOWNERROR)
#define MESSAGERESULT_MEMORYERROR (MESSAGERESULT::MEMORYERROR)

// enum class MACHINELIST from "ge_prepass.h" line 73
#define MACHINELIST_ONLINE (MACHINELIST::ONLINE)
#define MACHINELIST_OFFLINE (MACHINELIST::OFFLINE)
#define MACHINELIST_ALL (MACHINELIST::ALL)

// enum class VERIFICATIONBIT from "ge_prepass.h" line 84
#define VERIFICATIONBIT_NONE (VERIFICATIONBIT::NONE)
#define VERIFICATIONBIT_0 (VERIFICATIONBIT::NONE)
#define VERIFICATIONBIT_ONLINE (VERIFICATIONBIT::ONLINE)
#define VERIFICATIONBIT_VERIFIED (VERIFICATIONBIT::VERIFIED)
#define VERIFICATIONBIT_VERIFIEDME (VERIFICATIONBIT::VERIFIEDME)
#define VERIFICATIONBIT_SHARED (VERIFICATIONBIT::SHARED)
#define VERIFICATIONBIT_VERIFYING (VERIFICATIONBIT::VERIFYING)
#define VERIFICATIONBIT_FAILURE (VERIFICATIONBIT::FAILURE)
#define VERIFICATIONBIT_SECURITYTOKENCHANGED (VERIFICATIONBIT::SECURITYTOKENCHANGED)
#define VERIFICATIONBIT_WRONGBUILDID (VERIFICATIONBIT::WRONGBUILDID)
#define VERIFICATIONBIT_WRONGARCHITECTURE (VERIFICATIONBIT::WRONGARCHITECTURE)
#define VERIFICATIONBIT_NOTREACHABLE (VERIFICATIONBIT::NOTREACHABLE)
#define VERIFICATIONBIT_NOANSWER (VERIFICATIONBIT::NOANSWER)
#define VERIFICATIONBIT_WRONGSECURITYTOKEN (VERIFICATIONBIT::WRONGSECURITYTOKEN)
#define VERIFICATIONBIT_DEMONOTACTIVATED (VERIFICATIONBIT::DEMONOTACTIVATED)
#define VERIFICATIONBIT_REMOVING (VERIFICATIONBIT::REMOVING)
#define VERIFICATIONBIT_NORENDERSUPPORT (VERIFICATIONBIT::NORENDERSUPPORT)
#define VERIFICATIONBIT_INITIALIZING (VERIFICATIONBIT::INITIALIZING)
#define VERIFICATIONBIT_VERIFICATIONESTABLISHED (VERIFICATIONBIT::VERIFICATIONESTABLISHED)

// enum class RENDERJOBCREATOR from "ge_prepass.h" line 114
#define RENDERJOBCREATOR_BATCHRENDER (RENDERJOBCREATOR::BATCHRENDER)
#define RENDERJOBCREATOR_PICTUREVIEWER (RENDERJOBCREATOR::PICTUREVIEWER)
#define RENDERJOBCREATOR_USER (RENDERJOBCREATOR::USER)
#define RENDERJOBCREATOR_WATCHDIRECTORY (RENDERJOBCREATOR::WATCHDIRECTORY)
#define RENDERJOBCREATOR_WATCHDIRECTORYSTARTUP (RENDERJOBCREATOR::WATCHDIRECTORYSTARTUP)
#define RENDERJOBCREATOR_OTHER (RENDERJOBCREATOR::OTHER)

// enum class DETAILSELECTOR from "ge_prepass.h" line 125
#define DETAILSELECTOR_NONE (DETAILSELECTOR::NONE)
#define DETAILSELECTOR_0 (DETAILSELECTOR::NONE)
#define DETAILSELECTOR_SELECTED (DETAILSELECTOR::SELECTED)
#define DETAILSELECTOR_NONSELECTED (DETAILSELECTOR::NONSELECTED)

// enum class STATUSNETSTATE from "ge_prepass.h" line 135
#define STATUSNETSTATE_NONE (STATUSNETSTATE::NONE)
#define STATUSNETSTATE_0 (STATUSNETSTATE::NONE)
#define STATUSNETSTATE_DISABLE (STATUSNETSTATE::DISABLE)
#define STATUSNETSTATE_IDLE (STATUSNETSTATE::IDLE)
#define STATUSNETSTATE_BUSY (STATUSNETSTATE::BUSY)
#define STATUSNETSTATE_BUSY2 (STATUSNETSTATE::BUSY2)
#define STATUSNETSTATE_CRITICAL (STATUSNETSTATE::CRITICAL)

// enum class HOTKEYFLAGS from "ge_prepass.h" line 146
#define HOTKEYFLAGS_NONE (HOTKEYFLAGS::NONE)
#define HOTKEYFLAGS_0 (HOTKEYFLAGS::NONE)
#define HOTKEYFLAGS_MOUSE (HOTKEYFLAGS::MOUSE)
#define HOTKEYFLAGS_KEYBOARD (HOTKEYFLAGS::KEYBOARD)

// enum class ASSETDATA_FLAG from "ge_prepass.h" line 226
#define ASSETDATA_FLAG_NONE (ASSETDATA_FLAG::NONE)
#define ASSETDATA_FLAG_0 (ASSETDATA_FLAG::NONE)
#define ASSETDATA_FLAG_CURRENTFRAMEONLY (ASSETDATA_FLAG::CURRENTFRAMEONLY)
#define ASSETDATA_FLAG_TEXTURESONLY (ASSETDATA_FLAG::TEXTURESONLY)
#define ASSETDATA_FLAG_NET (ASSETDATA_FLAG::NET)
#define ASSETDATA_FLAG_CURRENTTAKEONLY (ASSETDATA_FLAG::CURRENTTAKEONLY)
#define ASSETDATA_FLAG_WITHCACHES (ASSETDATA_FLAG::WITHCACHES)
#define ASSETDATA_FLAG_NOSUBSTANCES (ASSETDATA_FLAG::NOSUBSTANCES)
#define ASSETDATA_FLAG_MULTIPLEUSE (ASSETDATA_FLAG::MULTIPLEUSE)
#define ASSETDATA_FLAG_MISSING (ASSETDATA_FLAG::MISSING)

// enum class SAVEBIT from "ge_prepass.h" line 244
#define SAVEBIT_NONE (SAVEBIT::NONE)
#define SAVEBIT_0 (SAVEBIT::NONE)
#define SAVEBIT_ALPHA (SAVEBIT::ALPHA)
#define SAVEBIT_MULTILAYER (SAVEBIT::MULTILAYER)
#define SAVEBIT_USESELECTEDLAYERS (SAVEBIT::USESELECTEDLAYERS)
#define SAVEBIT_USE16BITCHANNELS (SAVEBIT::USE16BITCHANNELS)
#define SAVEBIT_GREYSCALE (SAVEBIT::GREYSCALE)
#define SAVEBIT_INTERNALNET (SAVEBIT::INTERNALNET)
#define SAVEBIT_DONTMERGE (SAVEBIT::DONTMERGE)
#define SAVEBIT_USE32BITCHANNELS (SAVEBIT::USE32BITCHANNELS)
#define SAVEBIT_SAVERENDERRESULT (SAVEBIT::SAVERENDERRESULT)
#define SAVEBIT_FIRSTALPHA_ONLY (SAVEBIT::FIRSTALPHA_ONLY)

// enum class SCENEFILTER from "ge_prepass.h" line 265
#define SCENEFILTER_NONE (SCENEFILTER::NONE)
#define SCENEFILTER_0 (SCENEFILTER::NONE)
#define SCENEFILTER_OBJECTS (SCENEFILTER::OBJECTS)
#define SCENEFILTER_MATERIALS (SCENEFILTER::MATERIALS)
#define SCENEFILTER_DIALOGSALLOWED (SCENEFILTER::DIALOGSALLOWED)
#define SCENEFILTER_PROGRESSALLOWED (SCENEFILTER::PROGRESSALLOWED)
#define SCENEFILTER_MERGESCENE (SCENEFILTER::MERGESCENE)
#define SCENEFILTER_NONEWMARKERS (SCENEFILTER::NONEWMARKERS)
#define SCENEFILTER_SAVECACHES (SCENEFILTER::SAVECACHES)
#define SCENEFILTER_NOUNDO (SCENEFILTER::NOUNDO)
#define SCENEFILTER_SAVE_BINARYCACHE (SCENEFILTER::SAVE_BINARYCACHE)
#define SCENEFILTER_IDENTIFY_ONLY (SCENEFILTER::IDENTIFY_ONLY)
#define SCENEFILTER_ONLY_RENDERDATA (SCENEFILTER::ONLY_RENDERDATA)
#define SCENEFILTER_IGNOREMISSINGPLUGINSINNONACTIVERENDERDATA (SCENEFILTER::IGNOREMISSINGPLUGINSINNONACTIVERENDERDATA)
#define SCENEFILTER_IGNOREXREFS (SCENEFILTER::IGNOREXREFS)
#define SCENEFILTER_DONTCORRECTOUTPUTFORMAT (SCENEFILTER::DONTCORRECTOUTPUTFORMAT)

// enum class OVERVIEW from "ge_prepass.h" line 289
#define OVERVIEW_DEFAULT (OVERVIEW::DEFAULT)
#define OVERVIEW_AKTU (OVERVIEW::AKTU)
#define OVERVIEW_SCENE (OVERVIEW::SCENE)
#define OVERVIEW_COMPLETE (OVERVIEW::COMPLETE)
#define OVERVIEW_SELECTED (OVERVIEW::SELECTED)

// enum class GEMB from "ge_prepass.h" line 303
#define GEMB_OK (GEMB::OK)
#define GEMB_OKCANCEL (GEMB::OKCANCEL)
#define GEMB_ABORTRETRYIGNORE (GEMB::ABORTRETRYIGNORE)
#define GEMB_YESNOCANCEL (GEMB::YESNOCANCEL)
#define GEMB_YESNO (GEMB::YESNO)
#define GEMB_RETRYCANCEL (GEMB::RETRYCANCEL)
#define GEMB_FORCEDIALOG (GEMB::FORCEDIALOG)
#define GEMB_ICONSTOP (GEMB::ICONSTOP)
#define GEMB_ICONQUESTION (GEMB::ICONQUESTION)
#define GEMB_ICONEXCLAMATION (GEMB::ICONEXCLAMATION)
#define GEMB_ICONASTERISK (GEMB::ICONASTERISK)
#define GEMB_MULTILINE (GEMB::MULTILINE)

// enum class GEMB_R from "ge_prepass.h" line 325
#define GEMB_R_V_UNDEFINED (GEMB_R::V_UNDEFINED)
#define GEMB_R_V_OK (GEMB_R::V_OK)
#define GEMB_R_V_CANCEL (GEMB_R::V_CANCEL)
#define GEMB_R_V_ABORT (GEMB_R::V_ABORT)
#define GEMB_R_V_RETRY (GEMB_R::V_RETRY)
#define GEMB_R_V_IGNORE (GEMB_R::V_IGNORE)
#define GEMB_R_V_YES (GEMB_R::V_YES)
#define GEMB_R_V_NO (GEMB_R::V_NO)

// enum class MOUSEDRAGRESULT from "ge_prepass.h" line 343
#define MOUSEDRAGRESULT_ESCAPE (MOUSEDRAGRESULT::ESCAPE)
#define MOUSEDRAGRESULT_FINISHED (MOUSEDRAGRESULT::FINISHED)
#define MOUSEDRAGRESULT_CONTINUE (MOUSEDRAGRESULT::CONTINUE)

// enum class MOUSEDRAGFLAGS from "ge_prepass.h" line 355
#define MOUSEDRAGFLAGS_NONE (MOUSEDRAGFLAGS::NONE)
#define MOUSEDRAGFLAGS_0 (MOUSEDRAGFLAGS::NONE)
#define MOUSEDRAGFLAGS_DONTHIDEMOUSE (MOUSEDRAGFLAGS::DONTHIDEMOUSE)
#define MOUSEDRAGFLAGS_NOMOVE (MOUSEDRAGFLAGS::NOMOVE)
#define MOUSEDRAGFLAGS_EVERYPACKET (MOUSEDRAGFLAGS::EVERYPACKET)
#define MOUSEDRAGFLAGS_COMPENSATEVIEWPORTORG (MOUSEDRAGFLAGS::COMPENSATEVIEWPORTORG)
#define MOUSEDRAGFLAGS_AIRBRUSH (MOUSEDRAGFLAGS::AIRBRUSH)

// enum class INITRENDERRESULT from "ge_prepass.h" line 370
#define INITRENDERRESULT_OK (INITRENDERRESULT::OK)
#define INITRENDERRESULT_OUTOFMEMORY (INITRENDERRESULT::OUTOFMEMORY)
#define INITRENDERRESULT_ASSETMISSING (INITRENDERRESULT::ASSETMISSING)
#define INITRENDERRESULT_UNKNOWNERROR (INITRENDERRESULT::UNKNOWNERROR)
#define INITRENDERRESULT_USERBREAK (INITRENDERRESULT::USERBREAK)

// enum class RENDERRESULT from "ge_prepass.h" line 384
#define RENDERRESULT_OK (RENDERRESULT::OK)
#define RENDERRESULT_OUTOFMEMORY (RENDERRESULT::OUTOFMEMORY)
#define RENDERRESULT_ASSETMISSING (RENDERRESULT::ASSETMISSING)
#define RENDERRESULT_SAVINGFAILED (RENDERRESULT::SAVINGFAILED)
#define RENDERRESULT_USERBREAK (RENDERRESULT::USERBREAK)
#define RENDERRESULT_GICACHEMISSING (RENDERRESULT::GICACHEMISSING)
#define RENDERRESULT_NOMACHINE (RENDERRESULT::NOMACHINE)
#define RENDERRESULT_PROJECTNOTFOUND (RENDERRESULT::PROJECTNOTFOUND)
#define RENDERRESULT_ERRORLOADINGPROJECT (RENDERRESULT::ERRORLOADINGPROJECT)
#define RENDERRESULT_NOOUTPUTSPECIFIED (RENDERRESULT::NOOUTPUTSPECIFIED)

// enum class COLORMODE from "ge_prepass.h" line 416
#define COLORMODE_ILLEGAL (COLORMODE::ILLEGAL)
#define COLORMODE_ALPHA (COLORMODE::ALPHA)
#define COLORMODE_GRAY (COLORMODE::GRAY)
#define COLORMODE_AGRAY (COLORMODE::AGRAY)
#define COLORMODE_RGB (COLORMODE::RGB)
#define COLORMODE_ARGB (COLORMODE::ARGB)
#define COLORMODE_CMYK (COLORMODE::CMYK)
#define COLORMODE_ACMYK (COLORMODE::ACMYK)
#define COLORMODE_MASK (COLORMODE::MASK)
#define COLORMODE_AMASK (COLORMODE::AMASK)
#define COLORMODE_ILLEGALw (COLORMODE::ILLEGALw)
#define COLORMODE_GRAYw (COLORMODE::GRAYw)
#define COLORMODE_AGRAYw (COLORMODE::AGRAYw)
#define COLORMODE_RGBw (COLORMODE::RGBw)
#define COLORMODE_ARGBw (COLORMODE::ARGBw)
#define COLORMODE_MASKw (COLORMODE::MASKw)
#define COLORMODE_ILLEGALf (COLORMODE::ILLEGALf)
#define COLORMODE_GRAYf (COLORMODE::GRAYf)
#define COLORMODE_AGRAYf (COLORMODE::AGRAYf)
#define COLORMODE_RGBf (COLORMODE::RGBf)
#define COLORMODE_ARGBf (COLORMODE::ARGBf)
#define COLORMODE_MASKf (COLORMODE::MASKf)

// enum class COLORSPACETRANSFORMATION from "ge_prepass.h" line 458
#define COLORSPACETRANSFORMATION_NONE (COLORSPACETRANSFORMATION::NONE)
#define COLORSPACETRANSFORMATION_0 (COLORSPACETRANSFORMATION::NONE)
#define COLORSPACETRANSFORMATION_LINEAR_TO_SRGB (COLORSPACETRANSFORMATION::LINEAR_TO_SRGB)
#define COLORSPACETRANSFORMATION_SRGB_TO_LINEAR (COLORSPACETRANSFORMATION::SRGB_TO_LINEAR)
#define COLORSPACETRANSFORMATION_LINEAR_TO_VIEW (COLORSPACETRANSFORMATION::LINEAR_TO_VIEW)
#define COLORSPACETRANSFORMATION_SRGB_TO_VIEW (COLORSPACETRANSFORMATION::SRGB_TO_VIEW)

// enum class PIXELCNT from "ge_prepass.h" line 473
#define PIXELCNT_NONE (PIXELCNT::NONE)
#define PIXELCNT_0 (PIXELCNT::NONE)
#define PIXELCNT_DITHERING (PIXELCNT::DITHERING)
#define PIXELCNT_B3DLAYERS (PIXELCNT::B3DLAYERS)
#define PIXELCNT_APPLYALPHA (PIXELCNT::APPLYALPHA)
#define PIXELCNT_INTERNAL_SETLINE (PIXELCNT::INTERNAL_SETLINE)
#define PIXELCNT_INTERNAL_ALPHAVALUE (PIXELCNT::INTERNAL_ALPHAVALUE)

// enum class INITBITMAPFLAGS from "ge_prepass.h" line 489
#define INITBITMAPFLAGS_NONE (INITBITMAPFLAGS::NONE)
#define INITBITMAPFLAGS_0 (INITBITMAPFLAGS::NONE)
#define INITBITMAPFLAGS_GRAYSCALE (INITBITMAPFLAGS::GRAYSCALE)
#define INITBITMAPFLAGS_SYSTEM (INITBITMAPFLAGS::SYSTEM)

// enum class MPB_GETLAYERS from "ge_prepass.h" line 501
#define MPB_GETLAYERS_NONE (MPB_GETLAYERS::NONE)
#define MPB_GETLAYERS_0 (MPB_GETLAYERS::NONE)
#define MPB_GETLAYERS_ALPHA (MPB_GETLAYERS::ALPHA)
#define MPB_GETLAYERS_IMAGE (MPB_GETLAYERS::IMAGE)

// enum class MPBTYPE from "ge_prepass.h" line 513
#define MPBTYPE_SHOW (MPBTYPE::SHOW)
#define MPBTYPE_SAVE (MPBTYPE::SAVE)
#define MPBTYPE_PERCENT (MPBTYPE::PERCENT)
#define MPBTYPE_BLENDMODE (MPBTYPE::BLENDMODE)
#define MPBTYPE_COLORMODE (MPBTYPE::COLORMODE)
#define MPBTYPE_BITMAPTYPE (MPBTYPE::BITMAPTYPE)
#define MPBTYPE_NAME (MPBTYPE::NAME)
#define MPBTYPE_DPI (MPBTYPE::DPI)
#define MPBTYPE_USERID (MPBTYPE::USERID)
#define MPBTYPE_USERSUBID (MPBTYPE::USERSUBID)
#define MPBTYPE_FORCEBLEND (MPBTYPE::FORCEBLEND)

// enum class LENGTHUNIT from "ge_prepass.h" line 533
#define LENGTHUNIT_PIXEL (LENGTHUNIT::PIXEL)
#define LENGTHUNIT_KM (LENGTHUNIT::KM)
#define LENGTHUNIT_M (LENGTHUNIT::M)
#define LENGTHUNIT_CM (LENGTHUNIT::CM)
#define LENGTHUNIT_MM (LENGTHUNIT::MM)
#define LENGTHUNIT_UM (LENGTHUNIT::UM)
#define LENGTHUNIT_NM (LENGTHUNIT::NM)
#define LENGTHUNIT_MILE (LENGTHUNIT::MILE)
#define LENGTHUNIT_YARD (LENGTHUNIT::YARD)
#define LENGTHUNIT_FEET (LENGTHUNIT::FEET)
#define LENGTHUNIT_INCH (LENGTHUNIT::INCH)

// enum class SPLINETYPE from "ge_prepass.h" line 554
#define SPLINETYPE_LINEAR (SPLINETYPE::LINEAR)
#define SPLINETYPE_CUBIC (SPLINETYPE::CUBIC)
#define SPLINETYPE_AKIMA (SPLINETYPE::AKIMA)
#define SPLINETYPE_BSPLINE (SPLINETYPE::BSPLINE)
#define SPLINETYPE_BEZIER (SPLINETYPE::BEZIER)
#define SPLINETYPE_RESERVEDSPLINETYPE1 (SPLINETYPE::RESERVEDSPLINETYPE1)
#define SPLINETYPE_RESERVEDSPLINETYPE2 (SPLINETYPE::RESERVEDSPLINETYPE2)

// enum class BREAKTANGENTS from "ge_prepass.h" line 570
#define BREAKTANGENTS_V_FALSE (BREAKTANGENTS::V_FALSE)
#define BREAKTANGENTS_V_TRUE (BREAKTANGENTS::V_TRUE)
#define BREAKTANGENTS_V_AUTO (BREAKTANGENTS::V_AUTO)

// enum class TANGENTSIDE from "ge_prepass.h" line 583
#define TANGENTSIDE_NONE (TANGENTSIDE::NONE)
#define TANGENTSIDE_0 (TANGENTSIDE::NONE)
#define TANGENTSIDE_LEFT (TANGENTSIDE::LEFT)
#define TANGENTSIDE_RIGHT (TANGENTSIDE::RIGHT)

// enum class TANGENTTRANSFORMFLAG from "ge_prepass.h" line 595
#define TANGENTTRANSFORMFLAG_NONE (TANGENTTRANSFORMFLAG::NONE)
#define TANGENTTRANSFORMFLAG_0 (TANGENTTRANSFORMFLAG::NONE)
#define TANGENTTRANSFORMFLAG_LOCK_LENGTH (TANGENTTRANSFORMFLAG::LOCK_LENGTH)
#define TANGENTTRANSFORMFLAG_LOCK_ANGLE (TANGENTTRANSFORMFLAG::LOCK_ANGLE)
#define TANGENTTRANSFORMFLAG_BREAK_SCALE (TANGENTTRANSFORMFLAG::BREAK_SCALE)
#define TANGENTTRANSFORMFLAG_BREAK (TANGENTTRANSFORMFLAG::BREAK)

// enum class SPLINEBOOL_AXIS from "ge_prepass.h" line 609
#define SPLINEBOOL_AXIS_NONE (SPLINEBOOL_AXIS::NONE)
#define SPLINEBOOL_AXIS_0 (SPLINEBOOL_AXIS::NONE)
#define SPLINEBOOL_AXIS_SCREEN (SPLINEBOOL_AXIS::SCREEN)
#define SPLINEBOOL_AXIS_ZY (SPLINEBOOL_AXIS::ZY)
#define SPLINEBOOL_AXIS_XZ (SPLINEBOOL_AXIS::XZ)
#define SPLINEBOOL_AXIS_XY (SPLINEBOOL_AXIS::XY)

// enum class SPLINEBOOL_MODE from "ge_prepass.h" line 623
#define SPLINEBOOL_MODE_AMINUSB (SPLINEBOOL_MODE::AMINUSB)
#define SPLINEBOOL_MODE_BMINUSA (SPLINEBOOL_MODE::BMINUSA)
#define SPLINEBOOL_MODE_UNION (SPLINEBOOL_MODE::UNION)
#define SPLINEBOOL_MODE_AND (SPLINEBOOL_MODE::AND)
#define SPLINEBOOL_MODE_OR (SPLINEBOOL_MODE::OR)
#define SPLINEBOOL_MODE_INTERSECTION (SPLINEBOOL_MODE::INTERSECTION)

// enum class PARTICLEFLAGS from "ge_prepass.h" line 638
#define PARTICLEFLAGS_NONE (PARTICLEFLAGS::NONE)
#define PARTICLEFLAGS_0 (PARTICLEFLAGS::NONE)
#define PARTICLEFLAGS_VISIBLE (PARTICLEFLAGS::VISIBLE)
#define PARTICLEFLAGS_ALIVE (PARTICLEFLAGS::ALIVE)

// enum class NBIT from "ge_prepass.h" line 651
#define NBIT_NONE (NBIT::NONE)
#define NBIT_0 (NBIT::NONE)
#define NBIT_TL1_FOLD (NBIT::TL1_FOLD)
#define NBIT_TL2_FOLD (NBIT::TL2_FOLD)
#define NBIT_TL3_FOLD (NBIT::TL3_FOLD)
#define NBIT_TL4_FOLD (NBIT::TL4_FOLD)
#define NBIT_TL1_SELECT (NBIT::TL1_SELECT)
#define NBIT_TL2_SELECT (NBIT::TL2_SELECT)
#define NBIT_TL3_SELECT (NBIT::TL3_SELECT)
#define NBIT_TL4_SELECT (NBIT::TL4_SELECT)
#define NBIT_TL1_TDRAW (NBIT::TL1_TDRAW)
#define NBIT_TL2_TDRAW (NBIT::TL2_TDRAW)
#define NBIT_TL3_TDRAW (NBIT::TL3_TDRAW)
#define NBIT_TL4_TDRAW (NBIT::TL4_TDRAW)
#define NBIT_CKEY_ACTIVE (NBIT::CKEY_ACTIVE)
#define NBIT_OM1_FOLD (NBIT::OM1_FOLD)
#define NBIT_OM2_FOLD (NBIT::OM2_FOLD)
#define NBIT_OM3_FOLD (NBIT::OM3_FOLD)
#define NBIT_OM4_FOLD (NBIT::OM4_FOLD)
#define NBIT_TL1_FOLDTR (NBIT::TL1_FOLDTR)
#define NBIT_TL2_FOLDTR (NBIT::TL2_FOLDTR)
#define NBIT_TL3_FOLDTR (NBIT::TL3_FOLDTR)
#define NBIT_TL4_FOLDTR (NBIT::TL4_FOLDTR)
#define NBIT_TL1_FOLDFC (NBIT::TL1_FOLDFC)
#define NBIT_TL2_FOLDFC (NBIT::TL2_FOLDFC)
#define NBIT_TL3_FOLDFC (NBIT::TL3_FOLDFC)
#define NBIT_TL4_FOLDFC (NBIT::TL4_FOLDFC)
#define NBIT_SOURCEOPEN (NBIT::SOURCEOPEN)
#define NBIT_TL1_HIDE (NBIT::TL1_HIDE)
#define NBIT_TL2_HIDE (NBIT::TL2_HIDE)
#define NBIT_TL3_HIDE (NBIT::TL3_HIDE)
#define NBIT_TL4_HIDE (NBIT::TL4_HIDE)
#define NBIT_SOLO_ANIM (NBIT::SOLO_ANIM)
#define NBIT_SOLO_LAYER (NBIT::SOLO_LAYER)
#define NBIT_TL1_SELECT2 (NBIT::TL1_SELECT2)
#define NBIT_TL2_SELECT2 (NBIT::TL2_SELECT2)
#define NBIT_TL3_SELECT2 (NBIT::TL3_SELECT2)
#define NBIT_TL4_SELECT2 (NBIT::TL4_SELECT2)
#define NBIT_SOLO_MOTION (NBIT::SOLO_MOTION)
#define NBIT_CKEY_LOCK_T (NBIT::CKEY_LOCK_T)
#define NBIT_CKEY_LOCK_V (NBIT::CKEY_LOCK_V)
#define NBIT_CKEY_MUTE (NBIT::CKEY_MUTE)
#define NBIT_CKEY_CLAMP (NBIT::CKEY_CLAMP)
#define NBIT_CKEY_BREAK (NBIT::CKEY_BREAK)
#define NBIT_CKEY_KEEPVISUALANGLE (NBIT::CKEY_KEEPVISUALANGLE)
#define NBIT_CKEY_LOCK_O (NBIT::CKEY_LOCK_O)
#define NBIT_CKEY_LOCK_L (NBIT::CKEY_LOCK_L)
#define NBIT_CKEY_AUTO (NBIT::CKEY_AUTO)
#define NBIT_CKEY_ZERO_O_OLD (NBIT::CKEY_ZERO_O_OLD)
#define NBIT_CKEY_ZERO_L_OLD (NBIT::CKEY_ZERO_L_OLD)
#define NBIT_TL1_FCSELECT (NBIT::TL1_FCSELECT)
#define NBIT_TL2_FCSELECT (NBIT::TL2_FCSELECT)
#define NBIT_TL3_FCSELECT (NBIT::TL3_FCSELECT)
#define NBIT_TL4_FCSELECT (NBIT::TL4_FCSELECT)
#define NBIT_CKEY_BREAKDOWN (NBIT::CKEY_BREAKDOWN)
#define NBIT_TL1_FOLDMOTION (NBIT::TL1_FOLDMOTION)
#define NBIT_TL2_FOLDMOTION (NBIT::TL2_FOLDMOTION)
#define NBIT_TL3_FOLDMOTION (NBIT::TL3_FOLDMOTION)
#define NBIT_TL4_FOLDMOTION (NBIT::TL4_FOLDMOTION)
#define NBIT_TL1_SELECTMOTION (NBIT::TL1_SELECTMOTION)
#define NBIT_TL2_SELECTMOTION (NBIT::TL2_SELECTMOTION)
#define NBIT_TL3_SELECTMOTION (NBIT::TL3_SELECTMOTION)
#define NBIT_TL4_SELECTMOTION (NBIT::TL4_SELECTMOTION)
#define NBIT_OHIDE (NBIT::OHIDE)
#define NBIT_TL_TBAKE (NBIT::TL_TBAKE)
#define NBIT_TL1_FOLDSM (NBIT::TL1_FOLDSM)
#define NBIT_TL2_FOLDSM (NBIT::TL2_FOLDSM)
#define NBIT_TL3_FOLDSM (NBIT::TL3_FOLDSM)
#define NBIT_TL4_FOLDSM (NBIT::TL4_FOLDSM)
#define NBIT_SUBOBJECT (NBIT::SUBOBJECT)
#define NBIT_LINK_ACTIVE (NBIT::LINK_ACTIVE)
#define NBIT_THIDE (NBIT::THIDE)
#define NBIT_SUBOBJECT_AM (NBIT::SUBOBJECT_AM)
#define NBIT_PROTECTION (NBIT::PROTECTION)
#define NBIT_NOANIM (NBIT::NOANIM)
#define NBIT_NOSELECT (NBIT::NOSELECT)
#define NBIT_EHIDE (NBIT::EHIDE)
#define NBIT_REF (NBIT::REF)
#define NBIT_REF_NO_DD (NBIT::REF_NO_DD)
#define NBIT_REF_OHIDE (NBIT::REF_OHIDE)
#define NBIT_NO_DD (NBIT::NO_DD)
#define NBIT_HIDEEXCEPTVIEWSELECT (NBIT::HIDEEXCEPTVIEWSELECT)
#define NBIT_CKEY_WEIGHTEDTANGENT (NBIT::CKEY_WEIGHTEDTANGENT)
#define NBIT_CKEY_REMOVEOVERSHOOT (NBIT::CKEY_REMOVEOVERSHOOT)
#define NBIT_CKEY_AUTOWEIGHT (NBIT::CKEY_AUTOWEIGHT)
#define NBIT_TAKE_LOCK (NBIT::TAKE_LOCK)
#define NBIT_TAKE_OBJINGROUP (NBIT::TAKE_OBJINGROUP)
#define NBIT_TAKE_EGROUPOVERIDDEN (NBIT::TAKE_EGROUPOVERIDDEN)
#define NBIT_TAKE_RGROUPOVERIDDEN (NBIT::TAKE_RGROUPOVERIDDEN)
#define NBIT_CKEY_BREAKDOWNCOLOR (NBIT::CKEY_BREAKDOWNCOLOR)
#define NBIT_NO_DELETE (NBIT::NO_DELETE)
#define NBIT_LOD_HIDE (NBIT::LOD_HIDE)
#define NBIT_LOD_PRIVATECACHE (NBIT::LOD_PRIVATECACHE)
#define NBIT_AHIDE_FOR_HOST (NBIT::AHIDE_FOR_HOST)
#define NBIT_MAX (NBIT::MAX)

// enum class CREATEJOBRESULT from "ge_prepass.h" line 780
#define CREATEJOBRESULT_OK (CREATEJOBRESULT::OK)
#define CREATEJOBRESULT_OUTOFMEMORY (CREATEJOBRESULT::OUTOFMEMORY)
#define CREATEJOBRESULT_ASSETMISSING (CREATEJOBRESULT::ASSETMISSING)
#define CREATEJOBRESULT_SAVINGFAILED (CREATEJOBRESULT::SAVINGFAILED)
#define CREATEJOBRESULT_REPOSITORYERROR (CREATEJOBRESULT::REPOSITORYERROR)

// enum class NBITCONTROL from "ge_prepass.h" line 794
#define NBITCONTROL_SET (NBITCONTROL::SET)
#define NBITCONTROL_CLEAR (NBITCONTROL::CLEAR)
#define NBITCONTROL_TOGGLE (NBITCONTROL::TOGGLE)
#define NBITCONTROL_PRIVATE_NODIRTY (NBITCONTROL::PRIVATE_NODIRTY)

// enum class VOLUMECOMMANDTYPE from "ge_prepass.h" line 1542
#define VOLUMECOMMANDTYPE_NONE (VOLUMECOMMANDTYPE::NONE)
#define VOLUMECOMMANDTYPE_0 (VOLUMECOMMANDTYPE::NONE)
#define VOLUMECOMMANDTYPE_VOLUMETOMESH (VOLUMECOMMANDTYPE::VOLUMETOMESH)
#define VOLUMECOMMANDTYPE_MESHTOVOLUME (VOLUMECOMMANDTYPE::MESHTOVOLUME)
#define VOLUMECOMMANDTYPE_VOLUMEBOOLE (VOLUMECOMMANDTYPE::VOLUMEBOOLE)
#define VOLUMECOMMANDTYPE_PARTICLESTOVOLUME (VOLUMECOMMANDTYPE::PARTICLESTOVOLUME)
#define VOLUMECOMMANDTYPE_SPLINETOVOLUME (VOLUMECOMMANDTYPE::SPLINETOVOLUME)
#define VOLUMECOMMANDTYPE_FILTER (VOLUMECOMMANDTYPE::FILTER)
#define VOLUMECOMMANDTYPE_SDFFILTER (VOLUMECOMMANDTYPE::SDFFILTER)
#define VOLUMECOMMANDTYPE_SDFTOFOG (VOLUMECOMMANDTYPE::SDFTOFOG)
#define VOLUMECOMMANDTYPE_FOGTOSDF (VOLUMECOMMANDTYPE::FOGTOSDF)
#define VOLUMECOMMANDTYPE_RESAMPLE (VOLUMECOMMANDTYPE::RESAMPLE)
#define VOLUMECOMMANDTYPE_MIX (VOLUMECOMMANDTYPE::MIX)
#define VOLUMECOMMANDTYPE_FIELDTOVOLUME (VOLUMECOMMANDTYPE::FIELDTOVOLUME)
#define VOLUMECOMMANDTYPE_CREATESPHEREVOLUME (VOLUMECOMMANDTYPE::CREATESPHEREVOLUME)
#define VOLUMECOMMANDTYPE_CREATEPLATONICVOLUME (VOLUMECOMMANDTYPE::CREATEPLATONICVOLUME)

// enum class GRIDTYPE from "ge_prepass.h" line 1562
#define GRIDTYPE_NONE (GRIDTYPE::NONE)
#define GRIDTYPE_0 (GRIDTYPE::NONE)
#define GRIDTYPE_FLOAT (GRIDTYPE::FLOAT)
#define GRIDTYPE_DOUBLE (GRIDTYPE::DOUBLE)
#define GRIDTYPE_INT32 (GRIDTYPE::INT32)
#define GRIDTYPE_INT64 (GRIDTYPE::INT64)
#define GRIDTYPE_INTVECTOR32 (GRIDTYPE::INTVECTOR32)
#define GRIDTYPE_VECTOR32 (GRIDTYPE::VECTOR32)
#define GRIDTYPE_VECTOR64 (GRIDTYPE::VECTOR64)
#define GRIDTYPE_STRING (GRIDTYPE::STRING)
#define GRIDTYPE_BOOLEAN (GRIDTYPE::BOOLEAN)

// enum class GRIDCLASS from "ge_prepass.h" line 1577
#define GRIDCLASS_NONE (GRIDCLASS::NONE)
#define GRIDCLASS_0 (GRIDCLASS::NONE)
#define GRIDCLASS_SDF (GRIDCLASS::SDF)
#define GRIDCLASS_FOG (GRIDCLASS::FOG)
#define GRIDCLASS_STAGGERED (GRIDCLASS::STAGGERED)
#define GRIDCLASS_UNKNOWN (GRIDCLASS::UNKNOWN)

// enum class VOLUMETOMESHSETTINGS from "ge_prepass.h" line 1594
#define VOLUMETOMESHSETTINGS_NONE (VOLUMETOMESHSETTINGS::NONE)
#define VOLUMETOMESHSETTINGS_0 (VOLUMETOMESHSETTINGS::NONE)
#define VOLUMETOMESHSETTINGS_ISO (VOLUMETOMESHSETTINGS::ISO)
#define VOLUMETOMESHSETTINGS_ADAPTIVE (VOLUMETOMESHSETTINGS::ADAPTIVE)

// enum class MESHTOVOLUMESETTINGS from "ge_prepass.h" line 1606
#define MESHTOVOLUMESETTINGS_NONE (MESHTOVOLUMESETTINGS::NONE)
#define MESHTOVOLUMESETTINGS_0 (MESHTOVOLUMESETTINGS::NONE)
#define MESHTOVOLUMESETTINGS_GRIDSIZE (MESHTOVOLUMESETTINGS::GRIDSIZE)
#define MESHTOVOLUMESETTINGS_BANDWIDTH_INTERIOR (MESHTOVOLUMESETTINGS::BANDWIDTH_INTERIOR)
#define MESHTOVOLUMESETTINGS_BANDWIDTH_EXTERIOR (MESHTOVOLUMESETTINGS::BANDWIDTH_EXTERIOR)
#define MESHTOVOLUMESETTINGS_USE_POINTS (MESHTOVOLUMESETTINGS::USE_POINTS)
#define MESHTOVOLUMESETTINGS_RADIUS (MESHTOVOLUMESETTINGS::RADIUS)

// enum class PARTICLESTOVOLUMESETTINGS from "ge_prepass.h" line 1621
#define PARTICLESTOVOLUMESETTINGS_NONE (PARTICLESTOVOLUMESETTINGS::NONE)
#define PARTICLESTOVOLUMESETTINGS_0 (PARTICLESTOVOLUMESETTINGS::NONE)
#define PARTICLESTOVOLUMESETTINGS_GRIDSIZE (PARTICLESTOVOLUMESETTINGS::GRIDSIZE)
#define PARTICLESTOVOLUMESETTINGS_BANDWIDTH (PARTICLESTOVOLUMESETTINGS::BANDWIDTH)
#define PARTICLESTOVOLUMESETTINGS_RADIUS (PARTICLESTOVOLUMESETTINGS::RADIUS)
#define PARTICLESTOVOLUMESETTINGS_VELOCITY_SCALE (PARTICLESTOVOLUMESETTINGS::VELOCITY_SCALE)
#define PARTICLESTOVOLUMESETTINGS_USE_PARTICLE_SIZE (PARTICLESTOVOLUMESETTINGS::USE_PARTICLE_SIZE)

// enum class SPLINETOVOLUMESETTINGS from "ge_prepass.h" line 1636
#define SPLINETOVOLUMESETTINGS_NONE (SPLINETOVOLUMESETTINGS::NONE)
#define SPLINETOVOLUMESETTINGS_0 (SPLINETOVOLUMESETTINGS::NONE)
#define SPLINETOVOLUMESETTINGS_GRIDSIZE (SPLINETOVOLUMESETTINGS::GRIDSIZE)
#define SPLINETOVOLUMESETTINGS_BANDWIDTH (SPLINETOVOLUMESETTINGS::BANDWIDTH)
#define SPLINETOVOLUMESETTINGS_RADIUS (SPLINETOVOLUMESETTINGS::RADIUS)
#define SPLINETOVOLUMESETTINGS_DENSITY (SPLINETOVOLUMESETTINGS::DENSITY)

// enum class FILTERSETTINGS from "ge_prepass.h" line 1650
#define FILTERSETTINGS_NONE (FILTERSETTINGS::NONE)
#define FILTERSETTINGS_0 (FILTERSETTINGS::NONE)
#define FILTERSETTINGS_FILTERTYPE (FILTERSETTINGS::FILTERTYPE)
#define FILTERSETTINGS_ITERATIONS (FILTERSETTINGS::ITERATIONS)
#define FILTERSETTINGS_RADIUS (FILTERSETTINGS::RADIUS)
#define FILTERSETTINGS_OFFSET (FILTERSETTINGS::OFFSET)
#define FILTERSETTINGS_FALLOFF (FILTERSETTINGS::FALLOFF)
#define FILTERSETTINGS_REMAP_OLD_MIN (FILTERSETTINGS::REMAP_OLD_MIN)
#define FILTERSETTINGS_REMAP_OLD_MAX (FILTERSETTINGS::REMAP_OLD_MAX)
#define FILTERSETTINGS_REMAP_NEW_MIN (FILTERSETTINGS::REMAP_NEW_MIN)
#define FILTERSETTINGS_REMAP_NEW_MAX (FILTERSETTINGS::REMAP_NEW_MAX)
#define FILTERSETTINGS_STRENGTH (FILTERSETTINGS::STRENGTH)
#define FILTERSETTINGS_SPLINE (FILTERSETTINGS::SPLINE)

// enum class SDFFILTERSETTINGS from "ge_prepass.h" line 1671
#define SDFFILTERSETTINGS_NONE (SDFFILTERSETTINGS::NONE)
#define SDFFILTERSETTINGS_0 (SDFFILTERSETTINGS::NONE)
#define SDFFILTERSETTINGS_FILTERTYPE (SDFFILTERSETTINGS::FILTERTYPE)
#define SDFFILTERSETTINGS_ITERATIONS (SDFFILTERSETTINGS::ITERATIONS)
#define SDFFILTERSETTINGS_STENCILWIDTH (SDFFILTERSETTINGS::STENCILWIDTH)
#define SDFFILTERSETTINGS_FILTERACCURACY (SDFFILTERSETTINGS::FILTERACCURACY)
#define SDFFILTERSETTINGS_OFFSET (SDFFILTERSETTINGS::OFFSET)
#define SDFFILTERSETTINGS_HALFWIDTH (SDFFILTERSETTINGS::HALFWIDTH)
#define SDFFILTERSETTINGS_FALLOFF (SDFFILTERSETTINGS::FALLOFF)
#define SDFFILTERSETTINGS_STRENGTH (SDFFILTERSETTINGS::STRENGTH)

// enum class BOOLESETTINGS from "ge_prepass.h" line 1689
#define BOOLESETTINGS_NONE (BOOLESETTINGS::NONE)
#define BOOLESETTINGS_0 (BOOLESETTINGS::NONE)
#define BOOLESETTINGS_BOOLETYPE (BOOLESETTINGS::BOOLETYPE)

// enum class BOOLTYPE from "ge_prepass.h" line 1700
#define BOOLTYPE_NONE (BOOLTYPE::NONE)
#define BOOLTYPE_0 (BOOLTYPE::NONE)
#define BOOLTYPE_UNION (BOOLTYPE::UNION)
#define BOOLTYPE_DIFF (BOOLTYPE::DIFF)
#define BOOLTYPE_INTERSECT (BOOLTYPE::INTERSECT)

// enum class MIXSETTINGS from "ge_prepass.h" line 1713
#define MIXSETTINGS_NONE (MIXSETTINGS::NONE)
#define MIXSETTINGS_0 (MIXSETTINGS::NONE)
#define MIXSETTINGS_MIXTYPE (MIXSETTINGS::MIXTYPE)

// enum class MIXTYPE from "ge_prepass.h" line 1724
#define MIXTYPE_NONE (MIXTYPE::NONE)
#define MIXTYPE_0 (MIXTYPE::NONE)
#define MIXTYPE_NORMAL (MIXTYPE::NORMAL)
#define MIXTYPE_MAX (MIXTYPE::MAX)
#define MIXTYPE_MIN (MIXTYPE::MIN)
#define MIXTYPE_ADD (MIXTYPE::ADD)
#define MIXTYPE_SUBTRACT (MIXTYPE::SUBTRACT)
#define MIXTYPE_MULTIPLY (MIXTYPE::MULTIPLY)
#define MIXTYPE_DIVIDE (MIXTYPE::DIVIDE)

// enum class SDFTOFOGSETTINGS from "ge_prepass.h" line 1741
#define SDFTOFOGSETTINGS_NONE (SDFTOFOGSETTINGS::NONE)
#define SDFTOFOGSETTINGS_0 (SDFTOFOGSETTINGS::NONE)
#define SDFTOFOGSETTINGS_FALLOFFCUTOFF (SDFTOFOGSETTINGS::FALLOFFCUTOFF)

// enum class FOGTOSDFSETTINGS from "ge_prepass.h" line 1752
#define FOGTOSDFSETTINGS_NONE (FOGTOSDFSETTINGS::NONE)
#define FOGTOSDFSETTINGS_0 (FOGTOSDFSETTINGS::NONE)
#define FOGTOSDFSETTINGS_ISO (FOGTOSDFSETTINGS::ISO)

// enum class RESAMPLESETTINGS from "ge_prepass.h" line 1763
#define RESAMPLESETTINGS_NONE (RESAMPLESETTINGS::NONE)
#define RESAMPLESETTINGS_0 (RESAMPLESETTINGS::NONE)
#define RESAMPLESETTINGS_GRIDSIZE (RESAMPLESETTINGS::GRIDSIZE)
#define RESAMPLESETTINGS_INTERPOLATIONTYPE (RESAMPLESETTINGS::INTERPOLATIONTYPE)

// enum class RESAMPLEINTERPOLATIONTYPE from "ge_prepass.h" line 1775
#define RESAMPLEINTERPOLATIONTYPE_NONE (RESAMPLEINTERPOLATIONTYPE::NONE)
#define RESAMPLEINTERPOLATIONTYPE_0 (RESAMPLEINTERPOLATIONTYPE::NONE)
#define RESAMPLEINTERPOLATIONTYPE_NEAREST (RESAMPLEINTERPOLATIONTYPE::NEAREST)
#define RESAMPLEINTERPOLATIONTYPE_LINEAR (RESAMPLEINTERPOLATIONTYPE::LINEAR)
#define RESAMPLEINTERPOLATIONTYPE_QUADRATIC (RESAMPLEINTERPOLATIONTYPE::QUADRATIC)

// enum class FIELDTOVOLUMESETTINGS from "ge_prepass.h" line 1788
#define FIELDTOVOLUMESETTINGS_NONE (FIELDTOVOLUMESETTINGS::NONE)
#define FIELDTOVOLUMESETTINGS_0 (FIELDTOVOLUMESETTINGS::NONE)
#define FIELDTOVOLUMESETTINGS_BOUNDINGBOXMIN (FIELDTOVOLUMESETTINGS::BOUNDINGBOXMIN)
#define FIELDTOVOLUMESETTINGS_BOUNDINGBOXMAX (FIELDTOVOLUMESETTINGS::BOUNDINGBOXMAX)
#define FIELDTOVOLUMESETTINGS_GRIDSIZE (FIELDTOVOLUMESETTINGS::GRIDSIZE)

// enum class CREATESPHEREVOLUMESETTINGS from "ge_prepass.h" line 1801
#define CREATESPHEREVOLUMESETTINGS_NONE (CREATESPHEREVOLUMESETTINGS::NONE)
#define CREATESPHEREVOLUMESETTINGS_0 (CREATESPHEREVOLUMESETTINGS::NONE)
#define CREATESPHEREVOLUMESETTINGS_RADIUS (CREATESPHEREVOLUMESETTINGS::RADIUS)
#define CREATESPHEREVOLUMESETTINGS_POSITION (CREATESPHEREVOLUMESETTINGS::POSITION)
#define CREATESPHEREVOLUMESETTINGS_BANDWIDTH (CREATESPHEREVOLUMESETTINGS::BANDWIDTH)
#define CREATESPHEREVOLUMESETTINGS_GRIDSIZE (CREATESPHEREVOLUMESETTINGS::GRIDSIZE)

// enum class CREATEPLATONICVOLUMESETTINGS from "ge_prepass.h" line 1815
#define CREATEPLATONICVOLUMESETTINGS_NONE (CREATEPLATONICVOLUMESETTINGS::NONE)
#define CREATEPLATONICVOLUMESETTINGS_0 (CREATEPLATONICVOLUMESETTINGS::NONE)
#define CREATEPLATONICVOLUMESETTINGS_FACES (CREATEPLATONICVOLUMESETTINGS::FACES)
#define CREATEPLATONICVOLUMESETTINGS_SIZE (CREATEPLATONICVOLUMESETTINGS::SIZE)
#define CREATEPLATONICVOLUMESETTINGS_POSITION (CREATEPLATONICVOLUMESETTINGS::POSITION)
#define CREATEPLATONICVOLUMESETTINGS_BANDWIDTH (CREATEPLATONICVOLUMESETTINGS::BANDWIDTH)
#define CREATEPLATONICVOLUMESETTINGS_GRIDSIZE (CREATEPLATONICVOLUMESETTINGS::GRIDSIZE)

// enum class EVENT from "ge_prepass.h" line 2432
#define EVENT_NONE (EVENT::NONE)
#define EVENT_0 (EVENT::NONE)
#define EVENT_FORCEREDRAW (EVENT::FORCEREDRAW)
#define EVENT_ANIMATE (EVENT::ANIMATE)
#define EVENT_NOEXPRESSION (EVENT::NOEXPRESSION)
#define EVENT_GLHACK (EVENT::GLHACK)
#define EVENT_CAMERAEXPRESSION (EVENT::CAMERAEXPRESSION)
#define EVENT_ENQUEUE_REDRAW (EVENT::ENQUEUE_REDRAW)
#define EVENT_DONT_OVERWRITE_RENDERING (EVENT::DONT_OVERWRITE_RENDERING)

// enum class DRAWFLAGS from "ge_prepass.h" line 2448
#define DRAWFLAGS_NONE (DRAWFLAGS::NONE)
#define DRAWFLAGS_0 (DRAWFLAGS::NONE)
#define DRAWFLAGS_NO_THREAD (DRAWFLAGS::NO_THREAD)
#define DRAWFLAGS_NO_REDUCTION (DRAWFLAGS::NO_REDUCTION)
#define DRAWFLAGS_NO_ANIMATION (DRAWFLAGS::NO_ANIMATION)
#define DRAWFLAGS_ONLY_ACTIVE_VIEW (DRAWFLAGS::ONLY_ACTIVE_VIEW)
#define DRAWFLAGS_NO_EXPRESSIONS (DRAWFLAGS::NO_EXPRESSIONS)
#define DRAWFLAGS_INDRAG (DRAWFLAGS::INDRAG)
#define DRAWFLAGS_NO_HIGHLIGHT_PLANE (DRAWFLAGS::NO_HIGHLIGHT_PLANE)
#define DRAWFLAGS_FORCEFULLREDRAW (DRAWFLAGS::FORCEFULLREDRAW)
#define DRAWFLAGS_ONLY_CAMERAEXPRESSION (DRAWFLAGS::ONLY_CAMERAEXPRESSION)
#define DRAWFLAGS_INMOVE (DRAWFLAGS::INMOVE)
#define DRAWFLAGS_ONLY_BASEDRAW (DRAWFLAGS::ONLY_BASEDRAW)
#define DRAWFLAGS_ONLY_HIGHLIGHT (DRAWFLAGS::ONLY_HIGHLIGHT)
#define DRAWFLAGS_STATICBREAK (DRAWFLAGS::STATICBREAK)
#define DRAWFLAGS_PRIVATE_NO_WAIT_GL_FINISHED (DRAWFLAGS::PRIVATE_NO_WAIT_GL_FINISHED)
#define DRAWFLAGS_PRIVATE_ONLYBACKGROUND (DRAWFLAGS::PRIVATE_ONLYBACKGROUND)
#define DRAWFLAGS_PRIVATE_NOBLIT (DRAWFLAGS::PRIVATE_NOBLIT)
#define DRAWFLAGS_PRIVATE_OPENGLHACK (DRAWFLAGS::PRIVATE_OPENGLHACK)
#define DRAWFLAGS_PRIVATE_ONLY_PREPARE (DRAWFLAGS::PRIVATE_ONLY_PREPARE)
#define DRAWFLAGS_PRIVATE_NO_3DCLIPPING (DRAWFLAGS::PRIVATE_NO_3DCLIPPING)
#define DRAWFLAGS_DONT_OVERWRITE_RENDERING (DRAWFLAGS::DONT_OVERWRITE_RENDERING)

// enum class ANIMATEFLAGS from "ge_prepass.h" line 2478
#define ANIMATEFLAGS_NONE (ANIMATEFLAGS::NONE)
#define ANIMATEFLAGS_0 (ANIMATEFLAGS::NONE)
#define ANIMATEFLAGS_NO_PARTICLES (ANIMATEFLAGS::NO_PARTICLES)
#define ANIMATEFLAGS_NO_CHILDREN (ANIMATEFLAGS::NO_CHILDREN)
#define ANIMATEFLAGS_INRENDER (ANIMATEFLAGS::INRENDER)
#define ANIMATEFLAGS_NO_MINMAX (ANIMATEFLAGS::NO_MINMAX)
#define ANIMATEFLAGS_NO_NLA (ANIMATEFLAGS::NO_NLA)
#define ANIMATEFLAGS_NLA_SUM (ANIMATEFLAGS::NLA_SUM)

// enum class SAVEDOCUMENTFLAGS from "ge_prepass.h" line 2495
#define SAVEDOCUMENTFLAGS_NONE (SAVEDOCUMENTFLAGS::NONE)
#define SAVEDOCUMENTFLAGS_0 (SAVEDOCUMENTFLAGS::NONE)
#define SAVEDOCUMENTFLAGS_DIALOGSALLOWED (SAVEDOCUMENTFLAGS::DIALOGSALLOWED)
#define SAVEDOCUMENTFLAGS_SAVEAS (SAVEDOCUMENTFLAGS::SAVEAS)
#define SAVEDOCUMENTFLAGS_DONTADDTORECENTLIST (SAVEDOCUMENTFLAGS::DONTADDTORECENTLIST)
#define SAVEDOCUMENTFLAGS_AUTOSAVE (SAVEDOCUMENTFLAGS::AUTOSAVE)
#define SAVEDOCUMENTFLAGS_SAVECACHES (SAVEDOCUMENTFLAGS::SAVECACHES)
#define SAVEDOCUMENTFLAGS_EXPORTDIALOG (SAVEDOCUMENTFLAGS::EXPORTDIALOG)
#define SAVEDOCUMENTFLAGS_CRASHSITUATION (SAVEDOCUMENTFLAGS::CRASHSITUATION)
#define SAVEDOCUMENTFLAGS_NO_SHADERCACHE (SAVEDOCUMENTFLAGS::NO_SHADERCACHE)

// enum class COPYFLAGS from "ge_prepass.h" line 2514
#define COPYFLAGS_NONE (COPYFLAGS::NONE)
#define COPYFLAGS_0 (COPYFLAGS::NONE)
#define COPYFLAGS_NO_HIERARCHY (COPYFLAGS::NO_HIERARCHY)
#define COPYFLAGS_NO_ANIMATION (COPYFLAGS::NO_ANIMATION)
#define COPYFLAGS_NO_BITS (COPYFLAGS::NO_BITS)
#define COPYFLAGS_NO_MATERIALPREVIEW (COPYFLAGS::NO_MATERIALPREVIEW)
#define COPYFLAGS_NO_BRANCHES (COPYFLAGS::NO_BRANCHES)
#define COPYFLAGS_DOCUMENT (COPYFLAGS::DOCUMENT)
#define COPYFLAGS_NO_NGONS (COPYFLAGS::NO_NGONS)
#define COPYFLAGS_CACHE_BUILD (COPYFLAGS::CACHE_BUILD)
#define COPYFLAGS_RECURSIONCHECK (COPYFLAGS::RECURSIONCHECK)
#define COPYFLAGS_PRIVATE_IDENTMARKER (COPYFLAGS::PRIVATE_IDENTMARKER)
#define COPYFLAGS_PRIVATE_NO_INTERNALS (COPYFLAGS::PRIVATE_NO_INTERNALS)
#define COPYFLAGS_PRIVATE_NO_PLUGINLAYER (COPYFLAGS::PRIVATE_NO_PLUGINLAYER)
#define COPYFLAGS_PRIVATE_UNDO (COPYFLAGS::PRIVATE_UNDO)
#define COPYFLAGS_PRIVATE_CONTAINER_COPY_DIRTY (COPYFLAGS::PRIVATE_CONTAINER_COPY_DIRTY)
#define COPYFLAGS_PRIVATE_CONTAINER_COPY_IDENTICAL (COPYFLAGS::PRIVATE_CONTAINER_COPY_IDENTICAL)
#define COPYFLAGS_PRIVATE_NO_TAGS (COPYFLAGS::PRIVATE_NO_TAGS)
#define COPYFLAGS_PRIVATE_DELETE (COPYFLAGS::PRIVATE_DELETE)
#define COPYFLAGS_PRIVATE_NO_ASSETS (COPYFLAGS::PRIVATE_NO_ASSETS)
#define COPYFLAGS_PRIVATE_NO_RESULTASSETS (COPYFLAGS::PRIVATE_NO_RESULTASSETS)
#define COPYFLAGS_PRIVATE_NO_LOGS (COPYFLAGS::PRIVATE_NO_LOGS)
#define COPYFLAGS_PRIVATE_BODYPAINT_NODATA (COPYFLAGS::PRIVATE_BODYPAINT_NODATA)
#define COPYFLAGS_PRIVATE_BODYPAINT_CONVERTLAYER (COPYFLAGS::PRIVATE_BODYPAINT_CONVERTLAYER)

// enum class UNDOTYPE from "ge_prepass.h" line 2549
#define UNDOTYPE_NONE (UNDOTYPE::NONE)
#define UNDOTYPE_0 (UNDOTYPE::NONE)
#define UNDOTYPE_CHANGE (UNDOTYPE::CHANGE)
#define UNDOTYPE_CHANGE_NOCHILDREN (UNDOTYPE::CHANGE_NOCHILDREN)
#define UNDOTYPE_CHANGE_SMALL (UNDOTYPE::CHANGE_SMALL)
#define UNDOTYPE_CHANGE_SELECTION (UNDOTYPE::CHANGE_SELECTION)
#define UNDOTYPE_NEWOBJ (UNDOTYPE::NEWOBJ)
#define UNDOTYPE_DELETEOBJ (UNDOTYPE::DELETEOBJ)
#define UNDOTYPE_ACTIVATE (UNDOTYPE::ACTIVATE)
#define UNDOTYPE_DEACTIVATE (UNDOTYPE::DEACTIVATE)
#define UNDOTYPE_BITS (UNDOTYPE::BITS)
#define UNDOTYPE_HIERARCHY_PSR (UNDOTYPE::HIERARCHY_PSR)
#define UNDOTYPE_PRIVATE_STRING (UNDOTYPE::PRIVATE_STRING)
#define UNDOTYPE_PRIVATE_MULTISELECTIONAXIS (UNDOTYPE::PRIVATE_MULTISELECTIONAXIS)
#define UNDOTYPE_START (UNDOTYPE::START)
#define UNDOTYPE_END (UNDOTYPE::END)

// enum class DRAWHANDLE from "ge_prepass.h" line 2579
#define DRAWHANDLE_MINI (DRAWHANDLE::MINI)
#define DRAWHANDLE_SMALL (DRAWHANDLE::SMALL)
#define DRAWHANDLE_MIDDLE (DRAWHANDLE::MIDDLE)
#define DRAWHANDLE_BIG (DRAWHANDLE::BIG)
#define DRAWHANDLE_CUSTOM (DRAWHANDLE::CUSTOM)
#define DRAWHANDLE_POINTSIZE (DRAWHANDLE::POINTSIZE)
#define DRAWHANDLE_SELPOINTSIZE (DRAWHANDLE::SELPOINTSIZE)

// enum class DRAW_ALPHA from "ge_prepass.h" line 2594
#define DRAW_ALPHA_NONE (DRAW_ALPHA::NONE)
#define DRAW_ALPHA_0 (DRAW_ALPHA::NONE)
#define DRAW_ALPHA_INVERTED (DRAW_ALPHA::INVERTED)
#define DRAW_ALPHA_NORMAL (DRAW_ALPHA::NORMAL)
#define DRAW_ALPHA_FROM_IMAGE (DRAW_ALPHA::FROM_IMAGE)
#define DRAW_ALPHA_NORMAL_FROM_IMAGE (DRAW_ALPHA::NORMAL_FROM_IMAGE)

// enum class DRAW_TEXTUREFLAGS from "ge_prepass.h" line 2607
#define DRAW_TEXTUREFLAGS_NONE (DRAW_TEXTUREFLAGS::NONE)
#define DRAW_TEXTUREFLAGS_0 (DRAW_TEXTUREFLAGS::NONE)
#define DRAW_TEXTUREFLAGS_COLOR_IMAGE_TO_LINEAR (DRAW_TEXTUREFLAGS::COLOR_IMAGE_TO_LINEAR)
#define DRAW_TEXTUREFLAGS_COLOR_SRGB_TO_LINEAR (DRAW_TEXTUREFLAGS::COLOR_SRGB_TO_LINEAR)
#define DRAW_TEXTUREFLAGS_COLOR_IMAGE_TO_SRGB (DRAW_TEXTUREFLAGS::COLOR_IMAGE_TO_SRGB)
#define DRAW_TEXTUREFLAGS_COLOR_LINEAR_TO_SRGB (DRAW_TEXTUREFLAGS::COLOR_LINEAR_TO_SRGB)
#define DRAW_TEXTUREFLAGS_COLOR_CORRECTION_MASK (DRAW_TEXTUREFLAGS::COLOR_CORRECTION_MASK)
#define DRAW_TEXTUREFLAGS_USE_PROFILE_COLOR (DRAW_TEXTUREFLAGS::USE_PROFILE_COLOR)
#define DRAW_TEXTUREFLAGS_ALLOW_FLOATINGPOINT (DRAW_TEXTUREFLAGS::ALLOW_FLOATINGPOINT)
#define DRAW_TEXTUREFLAGS_TILE (DRAW_TEXTUREFLAGS::TILE)
#define DRAW_TEXTUREFLAGS_INTERPOLATION_NEAREST (DRAW_TEXTUREFLAGS::INTERPOLATION_NEAREST)
#define DRAW_TEXTUREFLAGS_INTERPOLATION_LINEAR (DRAW_TEXTUREFLAGS::INTERPOLATION_LINEAR)
#define DRAW_TEXTUREFLAGS_INTERPOLATION_LINEAR_MIPMAP (DRAW_TEXTUREFLAGS::INTERPOLATION_LINEAR_MIPMAP)
#define DRAW_TEXTUREFLAGS_INTERPOLATION_MASK (DRAW_TEXTUREFLAGS::INTERPOLATION_MASK)

// enum class TOOLDRAW from "ge_prepass.h" line 2632
#define TOOLDRAW_NONE (TOOLDRAW::NONE)
#define TOOLDRAW_0 (TOOLDRAW::NONE)
#define TOOLDRAW_HANDLES (TOOLDRAW::HANDLES)
#define TOOLDRAW_AXIS (TOOLDRAW::AXIS)
#define TOOLDRAW_HIGHLIGHTS (TOOLDRAW::HIGHLIGHTS)

// enum class TOOLDRAWFLAGS from "ge_prepass.h" line 2644
#define TOOLDRAWFLAGS_NONE (TOOLDRAWFLAGS::NONE)
#define TOOLDRAWFLAGS_0 (TOOLDRAWFLAGS::NONE)
#define TOOLDRAWFLAGS_INVERSE_Z (TOOLDRAWFLAGS::INVERSE_Z)
#define TOOLDRAWFLAGS_HIGHLIGHT (TOOLDRAWFLAGS::HIGHLIGHT)

// enum class DIRTYFLAGS from "ge_prepass.h" line 2752
#define DIRTYFLAGS_NONE (DIRTYFLAGS::NONE)
#define DIRTYFLAGS_0 (DIRTYFLAGS::NONE)
#define DIRTYFLAGS_MATRIX (DIRTYFLAGS::MATRIX)
#define DIRTYFLAGS_DATA (DIRTYFLAGS::DATA)
#define DIRTYFLAGS_SELECT (DIRTYFLAGS::SELECT)
#define DIRTYFLAGS_CACHE (DIRTYFLAGS::CACHE)
#define DIRTYFLAGS_CHILDREN (DIRTYFLAGS::CHILDREN)
#define DIRTYFLAGS_DESCRIPTION (DIRTYFLAGS::DESCRIPTION)
#define DIRTYFLAGS_SELECTION_OBJECTS (DIRTYFLAGS::SELECTION_OBJECTS)
#define DIRTYFLAGS_SELECTION_TAGS (DIRTYFLAGS::SELECTION_TAGS)
#define DIRTYFLAGS_SELECTION_MATERIALS (DIRTYFLAGS::SELECTION_MATERIALS)
#define DIRTYFLAGS_ALL (DIRTYFLAGS::ALL)

// enum class HDIRTY_ID from "ge_prepass.h" line 2774
#define HDIRTY_ID_ANIMATION (HDIRTY_ID::ANIMATION)
#define HDIRTY_ID_OBJECT (HDIRTY_ID::OBJECT)
#define HDIRTY_ID_OBJECT_MATRIX (HDIRTY_ID::OBJECT_MATRIX)
#define HDIRTY_ID_OBJECT_HIERARCHY (HDIRTY_ID::OBJECT_HIERARCHY)
#define HDIRTY_ID_TAG (HDIRTY_ID::TAG)
#define HDIRTY_ID_MATERIAL (HDIRTY_ID::MATERIAL)
#define HDIRTY_ID_SHADER (HDIRTY_ID::SHADER)
#define HDIRTY_ID_RENDERSETTINGS (HDIRTY_ID::RENDERSETTINGS)
#define HDIRTY_ID_VP (HDIRTY_ID::VP)
#define HDIRTY_ID_FILTER (HDIRTY_ID::FILTER)
#define HDIRTY_ID_NBITS (HDIRTY_ID::NBITS)
#define HDIRTY_ID_MAX (HDIRTY_ID::MAX)

// enum class HDIRTYFLAGS from "ge_prepass.h" line 2795
#define HDIRTYFLAGS_NONE (HDIRTYFLAGS::NONE)
#define HDIRTYFLAGS_0 (HDIRTYFLAGS::NONE)
#define HDIRTYFLAGS_ANIMATION (HDIRTYFLAGS::ANIMATION)
#define HDIRTYFLAGS_OBJECT (HDIRTYFLAGS::OBJECT)
#define HDIRTYFLAGS_OBJECT_MATRIX (HDIRTYFLAGS::OBJECT_MATRIX)
#define HDIRTYFLAGS_OBJECT_HIERARCHY (HDIRTYFLAGS::OBJECT_HIERARCHY)
#define HDIRTYFLAGS_TAG (HDIRTYFLAGS::TAG)
#define HDIRTYFLAGS_MATERIAL (HDIRTYFLAGS::MATERIAL)
#define HDIRTYFLAGS_SHADER (HDIRTYFLAGS::SHADER)
#define HDIRTYFLAGS_RENDERSETTINGS (HDIRTYFLAGS::RENDERSETTINGS)
#define HDIRTYFLAGS_VP (HDIRTYFLAGS::VP)
#define HDIRTYFLAGS_FILTER (HDIRTYFLAGS::FILTER)
#define HDIRTYFLAGS_NBITS (HDIRTYFLAGS::NBITS)
#define HDIRTYFLAGS_ALL (HDIRTYFLAGS::ALL)

// enum class ROTATIONORDER from "ge_prepass.h" line 2817
#define ROTATIONORDER_YXZGLOBAL (ROTATIONORDER::YXZGLOBAL)
#define ROTATIONORDER_YZXGLOBAL (ROTATIONORDER::YZXGLOBAL)
#define ROTATIONORDER_ZYXGLOBAL (ROTATIONORDER::ZYXGLOBAL)
#define ROTATIONORDER_ZXYGLOBAL (ROTATIONORDER::ZXYGLOBAL)
#define ROTATIONORDER_XZYGLOBAL (ROTATIONORDER::XZYGLOBAL)
#define ROTATIONORDER_XYZGLOBAL (ROTATIONORDER::XYZGLOBAL)
#define ROTATIONORDER_YXZLOCAL (ROTATIONORDER::YXZLOCAL)
#define ROTATIONORDER_YZXLOCAL (ROTATIONORDER::YZXLOCAL)
#define ROTATIONORDER_ZYXLOCAL (ROTATIONORDER::ZYXLOCAL)
#define ROTATIONORDER_ZXYLOCAL (ROTATIONORDER::ZXYLOCAL)
#define ROTATIONORDER_XZYLOCAL (ROTATIONORDER::XZYLOCAL)
#define ROTATIONORDER_XYZLOCAL (ROTATIONORDER::XYZLOCAL)
#define ROTATIONORDER_HPB (ROTATIONORDER::HPB)
#define ROTATIONORDER_DEFAULT (ROTATIONORDER::DEFAULT)

// enum class ROTATIONINTERPOLATION_QUATERNION from "ge_prepass.h" line 2842
#define ROTATIONINTERPOLATION_QUATERNION_SLERP (ROTATIONINTERPOLATION_QUATERNION::SLERP)
#define ROTATIONINTERPOLATION_QUATERNION_CUBIC (ROTATIONINTERPOLATION_QUATERNION::CUBIC)

// enum class BUILDFLAGS from "ge_prepass.h" line 2855
#define BUILDFLAGS_NONE (BUILDFLAGS::NONE)
#define BUILDFLAGS_0 (BUILDFLAGS::NONE)
#define BUILDFLAGS_INTERNALRENDERER (BUILDFLAGS::INTERNALRENDERER)
#define BUILDFLAGS_EXTERNALRENDERER (BUILDFLAGS::EXTERNALRENDERER)
#define BUILDFLAGS_ISOPARM (BUILDFLAGS::ISOPARM)
#define BUILDFLAGS_EXPORTONLY (BUILDFLAGS::EXPORTONLY)

// enum class EXECUTIONFLAGS from "ge_prepass.h" line 2870
#define EXECUTIONFLAGS_NONE (EXECUTIONFLAGS::NONE)
#define EXECUTIONFLAGS_0 (EXECUTIONFLAGS::NONE)
#define EXECUTIONFLAGS_ANIMATION (EXECUTIONFLAGS::ANIMATION)
#define EXECUTIONFLAGS_EXPRESSION (EXECUTIONFLAGS::EXPRESSION)
#define EXECUTIONFLAGS_CACHEBUILDING (EXECUTIONFLAGS::CACHEBUILDING)
#define EXECUTIONFLAGS_CAMERAONLY (EXECUTIONFLAGS::CAMERAONLY)
#define EXECUTIONFLAGS_INDRAG (EXECUTIONFLAGS::INDRAG)
#define EXECUTIONFLAGS_INMOVE (EXECUTIONFLAGS::INMOVE)
#define EXECUTIONFLAGS_RENDER (EXECUTIONFLAGS::RENDER)
#define EXECUTIONFLAGS_ALLOW_PRIORITYSHIFT (EXECUTIONFLAGS::ALLOW_PRIORITYSHIFT)

// enum class SCENEHOOKDRAW from "ge_prepass.h" line 2887
#define SCENEHOOKDRAW_NONE (SCENEHOOKDRAW::NONE)
#define SCENEHOOKDRAW_0 (SCENEHOOKDRAW::NONE)
#define SCENEHOOKDRAW_DRAW_PASS (SCENEHOOKDRAW::DRAW_PASS)
#define SCENEHOOKDRAW_HIGHLIGHT_PASS_BEFORE_TOOL (SCENEHOOKDRAW::HIGHLIGHT_PASS_BEFORE_TOOL)
#define SCENEHOOKDRAW_HIGHLIGHT_PASS (SCENEHOOKDRAW::HIGHLIGHT_PASS)
#define SCENEHOOKDRAW_HIGHLIGHT_PASS_INV (SCENEHOOKDRAW::HIGHLIGHT_PASS_INV)
#define SCENEHOOKDRAW_DRAW_PASS_AFTER_CLEAR (SCENEHOOKDRAW::DRAW_PASS_AFTER_CLEAR)

// enum class DESCFLAGS_DESC from "ge_prepass.h" line 2902
#define DESCFLAGS_DESC_NONE (DESCFLAGS_DESC::NONE)
#define DESCFLAGS_DESC_0 (DESCFLAGS_DESC::NONE)
#define DESCFLAGS_DESC_RESOLVEMULTIPLEDATA (DESCFLAGS_DESC::RESOLVEMULTIPLEDATA)
#define DESCFLAGS_DESC_LOADED (DESCFLAGS_DESC::LOADED)
#define DESCFLAGS_DESC_RECURSIONLOCK (DESCFLAGS_DESC::RECURSIONLOCK)
#define DESCFLAGS_DESC_DONTLOADDEFAULT (DESCFLAGS_DESC::DONTLOADDEFAULT)
#define DESCFLAGS_DESC_MAPTAGS (DESCFLAGS_DESC::MAPTAGS)
#define DESCFLAGS_DESC_NEEDDEFAULTVALUE (DESCFLAGS_DESC::NEEDDEFAULTVALUE)
#define DESCFLAGS_DESC_TRISTATE (DESCFLAGS_DESC::TRISTATE)
#define DESCFLAGS_DESC_EXPORTHELPSYMBOLSMODE (DESCFLAGS_DESC::EXPORTHELPSYMBOLSMODE)
#define DESCFLAGS_DESC_MATREFLECTANCEOVERLAP (DESCFLAGS_DESC::MATREFLECTANCEOVERLAP)
#define DESCFLAGS_DESC_XPRESSO (DESCFLAGS_DESC::XPRESSO)

// enum class DESCFLAGS_GET from "ge_prepass.h" line 2922
#define DESCFLAGS_GET_NONE (DESCFLAGS_GET::NONE)
#define DESCFLAGS_GET_0 (DESCFLAGS_GET::NONE)
#define DESCFLAGS_GET_PARAM_GET (DESCFLAGS_GET::PARAM_GET)
#define DESCFLAGS_GET_NO_GLOBALDATA (DESCFLAGS_GET::NO_GLOBALDATA)
#define DESCFLAGS_GET_NO_GEDATADEFAULTVALUE (DESCFLAGS_GET::NO_GEDATADEFAULTVALUE)
#define DESCFLAGS_GET_ALLOW_TRISTATE (DESCFLAGS_GET::ALLOW_TRISTATE)

// enum class DESCFLAGS_SET from "ge_prepass.h" line 2936
#define DESCFLAGS_SET_NONE (DESCFLAGS_SET::NONE)
#define DESCFLAGS_SET_0 (DESCFLAGS_SET::NONE)
#define DESCFLAGS_SET_PARAM_SET (DESCFLAGS_SET::PARAM_SET)
#define DESCFLAGS_SET_USERINTERACTION (DESCFLAGS_SET::USERINTERACTION)
#define DESCFLAGS_SET_DONTCHECKMINMAX (DESCFLAGS_SET::DONTCHECKMINMAX)
#define DESCFLAGS_SET_DONTAFFECTINHERITANCE (DESCFLAGS_SET::DONTAFFECTINHERITANCE)
#define DESCFLAGS_SET_FORCESET (DESCFLAGS_SET::FORCESET)
#define DESCFLAGS_SET_DONTFREESPLINECACHE (DESCFLAGS_SET::DONTFREESPLINECACHE)
#define DESCFLAGS_SET_INDRAG (DESCFLAGS_SET::INDRAG)
#define DESCFLAGS_SET_INRESETTODEFAULT (DESCFLAGS_SET::INRESETTODEFAULT)

// enum class DESCFLAGS_ENABLE from "ge_prepass.h" line 2955
#define DESCFLAGS_ENABLE_NONE (DESCFLAGS_ENABLE::NONE)
#define DESCFLAGS_ENABLE_0 (DESCFLAGS_ENABLE::NONE)

// enum class HIERARCHYCLONEFLAGS from "ge_prepass.h" line 2965
#define HIERARCHYCLONEFLAGS_NONE (HIERARCHYCLONEFLAGS::NONE)
#define HIERARCHYCLONEFLAGS_0 (HIERARCHYCLONEFLAGS::NONE)
#define HIERARCHYCLONEFLAGS_ASIS (HIERARCHYCLONEFLAGS::ASIS)
#define HIERARCHYCLONEFLAGS_ASPOLY (HIERARCHYCLONEFLAGS::ASPOLY)
#define HIERARCHYCLONEFLAGS_ASLINE (HIERARCHYCLONEFLAGS::ASLINE)
#define HIERARCHYCLONEFLAGS_ASSPLINE (HIERARCHYCLONEFLAGS::ASSPLINE)
#define HIERARCHYCLONEFLAGS_ASVOLUME (HIERARCHYCLONEFLAGS::ASVOLUME)

// enum class CHECKVALUEFORMAT from "ge_prepass.h" line 2981
#define CHECKVALUEFORMAT_NOTHING (CHECKVALUEFORMAT::NOTHING)
#define CHECKVALUEFORMAT_DEGREE (CHECKVALUEFORMAT::DEGREE)
#define CHECKVALUEFORMAT_PERCENT (CHECKVALUEFORMAT::PERCENT)
#define CHECKVALUEFORMAT_METER (CHECKVALUEFORMAT::METER)
#define CHECKVALUEFORMAT_INT (CHECKVALUEFORMAT::INT)

// enum class CHECKVALUERANGE from "ge_prepass.h" line 2996
#define CHECKVALUERANGE_GREATER (CHECKVALUERANGE::GREATER)
#define CHECKVALUERANGE_GREATEROREQUAL (CHECKVALUERANGE::GREATEROREQUAL)
#define CHECKVALUERANGE_LESS (CHECKVALUERANGE::LESS)
#define CHECKVALUERANGE_LESSOREQUAL (CHECKVALUERANGE::LESSOREQUAL)
#define CHECKVALUERANGE_BETWEEN (CHECKVALUERANGE::BETWEEN)
#define CHECKVALUERANGE_BETWEENOREQUAL (CHECKVALUERANGE::BETWEENOREQUAL)
#define CHECKVALUERANGE_BETWEENOREQUALX (CHECKVALUERANGE::BETWEENOREQUALX)
#define CHECKVALUERANGE_BETWEENOREQUALY (CHECKVALUERANGE::BETWEENOREQUALY)
#define CHECKVALUERANGE_DIFFERENT (CHECKVALUERANGE::DIFFERENT)

// enum class PAINTMESHFLAGS from "ge_prepass.h" line 3013
#define PAINTMESHFLAGS_NONE (PAINTMESHFLAGS::NONE)
#define PAINTMESHFLAGS_0 (PAINTMESHFLAGS::NONE)
#define PAINTMESHFLAGS_QUAD (PAINTMESHFLAGS::QUAD)
#define PAINTMESHFLAGS_SEL (PAINTMESHFLAGS::SEL)
#define PAINTMESHFLAGS_SELA (PAINTMESHFLAGS::SELA)
#define PAINTMESHFLAGS_SELB (PAINTMESHFLAGS::SELB)
#define PAINTMESHFLAGS_SELC (PAINTMESHFLAGS::SELC)
#define PAINTMESHFLAGS_SELD (PAINTMESHFLAGS::SELD)
#define PAINTMESHFLAGS_TA (PAINTMESHFLAGS::TA)
#define PAINTMESHFLAGS_TB (PAINTMESHFLAGS::TB)
#define PAINTMESHFLAGS_TC (PAINTMESHFLAGS::TC)
#define PAINTMESHFLAGS_TD (PAINTMESHFLAGS::TD)
#define PAINTMESHFLAGS_INACTIVE (PAINTMESHFLAGS::INACTIVE)
#define PAINTMESHFLAGS_EDGEA (PAINTMESHFLAGS::EDGEA)
#define PAINTMESHFLAGS_EDGEB (PAINTMESHFLAGS::EDGEB)
#define PAINTMESHFLAGS_EDGEC (PAINTMESHFLAGS::EDGEC)
#define PAINTMESHFLAGS_EDGED (PAINTMESHFLAGS::EDGED)

// enum class GETBRANCHINFO from "ge_prepass.h" line 3043
#define GETBRANCHINFO_NONE (GETBRANCHINFO::NONE)
#define GETBRANCHINFO_0 (GETBRANCHINFO::NONE)
#define GETBRANCHINFO_ONLYWITHCHILDREN (GETBRANCHINFO::ONLYWITHCHILDREN)
#define GETBRANCHINFO_GELISTNODES (GETBRANCHINFO::GELISTNODES)
#define GETBRANCHINFO_ONLYMODIFIABLE (GETBRANCHINFO::ONLYMODIFIABLE)

// enum class BRANCHINFOFLAGS from "ge_prepass.h" line 3056
#define BRANCHINFOFLAGS_NONE (BRANCHINFOFLAGS::NONE)
#define BRANCHINFOFLAGS_0 (BRANCHINFOFLAGS::NONE)
#define BRANCHINFOFLAGS_ANIMATE (BRANCHINFOFLAGS::ANIMATE)
#define BRANCHINFOFLAGS_HIDEINTIMELINE (BRANCHINFOFLAGS::HIDEINTIMELINE)

// enum class GETACTIVEOBJECTFLAGS from "ge_prepass.h" line 3068
#define GETACTIVEOBJECTFLAGS_NONE (GETACTIVEOBJECTFLAGS::NONE)
#define GETACTIVEOBJECTFLAGS_0 (GETACTIVEOBJECTFLAGS::NONE)
#define GETACTIVEOBJECTFLAGS_CHILDREN (GETACTIVEOBJECTFLAGS::CHILDREN)
#define GETACTIVEOBJECTFLAGS_SELECTIONORDER (GETACTIVEOBJECTFLAGS::SELECTIONORDER)

// enum class DRAWPASS from "ge_prepass.h" line 3079
#define DRAWPASS_OBJECT (DRAWPASS::OBJECT)
#define DRAWPASS_BOX (DRAWPASS::BOX)
#define DRAWPASS_HANDLES (DRAWPASS::HANDLES)
#define DRAWPASS_HIGHLIGHTS (DRAWPASS::HIGHLIGHTS)
#define DRAWPASS_XRAY (DRAWPASS::XRAY)

// enum class SAVEPROJECT from "ge_prepass.h" line 3143
#define SAVEPROJECT_NONE (SAVEPROJECT::NONE)
#define SAVEPROJECT_0 (SAVEPROJECT::NONE)
#define SAVEPROJECT_ASSETS (SAVEPROJECT::ASSETS)
#define SAVEPROJECT_SCENEFILE (SAVEPROJECT::SCENEFILE)
#define SAVEPROJECT_DIALOGSALLOWED (SAVEPROJECT::DIALOGSALLOWED)
#define SAVEPROJECT_SHOWMISSINGASSETDIALOG (SAVEPROJECT::SHOWMISSINGASSETDIALOG)
#define SAVEPROJECT_ADDTORECENTLIST (SAVEPROJECT::ADDTORECENTLIST)
#define SAVEPROJECT_DONTCOPYFILES (SAVEPROJECT::DONTCOPYFILES)
#define SAVEPROJECT_PROGRESSALLOWED (SAVEPROJECT::PROGRESSALLOWED)
#define SAVEPROJECT_DONTTOUCHDOCUMENT (SAVEPROJECT::DONTTOUCHDOCUMENT)
#define SAVEPROJECT_DONTFAILONMISSINGASSETS (SAVEPROJECT::DONTFAILONMISSINGASSETS)
#define SAVEPROJECT_ISNET (SAVEPROJECT::ISNET)
#define SAVEPROJECT_USEDOCUMENTNAMEASFILENAME (SAVEPROJECT::USEDOCUMENTNAMEASFILENAME)
#define SAVEPROJECT_DONTCLEARSUGGESTEDFOLDER (SAVEPROJECT::DONTCLEARSUGGESTEDFOLDER)
#define SAVEPROJECT_WITHCACHES (SAVEPROJECT::WITHCACHES)
#define SAVEPROJECT_DONTGENERATEPAINTTEX (SAVEPROJECT::DONTGENERATEPAINTTEX)

// enum class ICONDATAFLAGS from "ge_prepass.h" line 3167
#define ICONDATAFLAGS_NONE (ICONDATAFLAGS::NONE)
#define ICONDATAFLAGS_0 (ICONDATAFLAGS::NONE)
#define ICONDATAFLAGS_APPLYCOLORPROFILE (ICONDATAFLAGS::APPLYCOLORPROFILE)
#define ICONDATAFLAGS_DISABLED (ICONDATAFLAGS::DISABLED)

// enum class USERAREAFLAGS from "ge_prepass.h" line 3178
#define USERAREA_NONE (USERAREAFLAGS::NONE)
#define USERAREA_0 (USERAREAFLAGS::NONE)
#define USERAREA_TABSTOP (USERAREAFLAGS::TABSTOP)
#define USERAREA_HANDLEFOCUS (USERAREAFLAGS::HANDLEFOCUS)
#define USERAREA_COREMESSAGE (USERAREAFLAGS::COREMESSAGE)
#define USERAREA_SYNCMESSAGE (USERAREAFLAGS::SYNCMESSAGE)
#define USERAREA_DONT_MIRROR (USERAREAFLAGS::DONT_MIRROR)

// enum class EXECUTIONRESULT from "ge_prepass.h" line 3442
#define EXECUTIONRESULT_OK (EXECUTIONRESULT::OK)
#define EXECUTIONRESULT_USERBREAK (EXECUTIONRESULT::USERBREAK)
#define EXECUTIONRESULT_OUTOFMEMORY (EXECUTIONRESULT::OUTOFMEMORY)

// enum class IMAGERESULT from "ge_prepass.h" line 3464
#define IMAGERESULT_OK (IMAGERESULT::OK)
#define IMAGERESULT_NOTEXISTING (IMAGERESULT::NOTEXISTING)
#define IMAGERESULT_WRONGTYPE (IMAGERESULT::WRONGTYPE)
#define IMAGERESULT_OUTOFMEMORY (IMAGERESULT::OUTOFMEMORY)
#define IMAGERESULT_FILEERROR (IMAGERESULT::FILEERROR)
#define IMAGERESULT_FILESTRUCTURE (IMAGERESULT::FILESTRUCTURE)
#define IMAGERESULT_MISC_ERROR (IMAGERESULT::MISC_ERROR)
#define IMAGERESULT_PARAM_ERROR (IMAGERESULT::PARAM_ERROR)
#define IMAGERESULT_THREADCANCELED (IMAGERESULT::THREADCANCELED)

// enum class STRINGENCODING from "ge_prepass.h" line 3481
#define STRINGENCODING_XBIT (STRINGENCODING::XBIT)
#define STRINGENCODING_BIT7 (STRINGENCODING::BIT7)
#define STRINGENCODING_BIT7HEX (STRINGENCODING::BIT7HEX)
#define STRINGENCODING_UTF8 (STRINGENCODING::UTF8)

// enum class THREADMODE from "ge_prepass.h" line 3496
#define THREADMODE_DEPRECATED_SYNCHRONOUS (THREADMODE::DEPRECATED_SYNCHRONOUS)
#define THREADMODE_ASYNC (THREADMODE::ASYNC)
#define THREADMODE_PRIVATE_OPENGL (THREADMODE::PRIVATE_OPENGL)

// enum class THREADPRIORITYEX from "ge_prepass.h" line 3507
#define THREADPRIORITYEX_NORMAL (THREADPRIORITYEX::NORMAL)
#define THREADPRIORITYEX_ABOVE (THREADPRIORITYEX::ABOVE)
#define THREADPRIORITYEX_BELOW (THREADPRIORITYEX::BELOW)
#define THREADPRIORITYEX_LOWEST (THREADPRIORITYEX::LOWEST)

// enum class HYPERFILEARRAY from "ge_prepass.h" line 3519
#define HYPERFILEARRAY_CHAR (HYPERFILEARRAY::CHAR)
#define HYPERFILEARRAY_WORD (HYPERFILEARRAY::WORD)
#define HYPERFILEARRAY_LONG (HYPERFILEARRAY::LONG)
#define HYPERFILEARRAY_LLONG (HYPERFILEARRAY::LLONG)
#define HYPERFILEARRAY_SREAL (HYPERFILEARRAY::SREAL)
#define HYPERFILEARRAY_LREAL (HYPERFILEARRAY::LREAL)
#define HYPERFILEARRAY_REAL (HYPERFILEARRAY::REAL)

// enum class FILEERROR from "ge_prepass.h" line 3534
#define FILEERROR_NONE (FILEERROR::NONE)
#define FILEERROR_0 (FILEERROR::NONE)
#define FILEERROR_OPEN (FILEERROR::OPEN)
#define FILEERROR_CLOSE (FILEERROR::CLOSE)
#define FILEERROR_READ (FILEERROR::READ)
#define FILEERROR_WRITE (FILEERROR::WRITE)
#define FILEERROR_SEEK (FILEERROR::SEEK)
#define FILEERROR_INVALID (FILEERROR::INVALID)
#define FILEERROR_OUTOFMEMORY (FILEERROR::OUTOFMEMORY)
#define FILEERROR_USERBREAK (FILEERROR::USERBREAK)
#define FILEERROR_WRONG_VALUE (FILEERROR::WRONG_VALUE)
#define FILEERROR_CHUNK_NUMBER (FILEERROR::CHUNK_NUMBER)
#define FILEERROR_VALUE_NO_CHUNK (FILEERROR::VALUE_NO_CHUNK)
#define FILEERROR_FILEEND (FILEERROR::FILEEND)
#define FILEERROR_UNKNOWN_VALUE (FILEERROR::UNKNOWN_VALUE)

// enum class FILEOPEN from "ge_prepass.h" line 3558
#define FILEOPEN_APPEND (FILEOPEN::APPEND)
#define FILEOPEN_READ (FILEOPEN::READ)
#define FILEOPEN_WRITE (FILEOPEN::WRITE)
#define FILEOPEN_READWRITE (FILEOPEN::READWRITE)
#define FILEOPEN_READ_NOCACHE (FILEOPEN::READ_NOCACHE)
#define FILEOPEN_SHAREDREAD (FILEOPEN::SHAREDREAD)
#define FILEOPEN_SHAREDWRITE (FILEOPEN::SHAREDWRITE)

// enum class LOCATION from "ge_prepass.h" line 3574
#define LOCATION_DISK (LOCATION::DISK)
#define LOCATION_IPCONNECTION (LOCATION::IPCONNECTION)
#define LOCATION_MEMORY (LOCATION::MEMORY)

// enum class FILESEEK from "ge_prepass.h" line 3585
#define FILESEEK_START (FILESEEK::START)
#define FILESEEK_RELATIVE_ (FILESEEK::RELATIVE_)

// enum class FILEDIALOG from "ge_prepass.h" line 3595
#define FILEDIALOG_NONE (FILEDIALOG::NONE)
#define FILEDIALOG_0 (FILEDIALOG::NONE)
#define FILEDIALOG_ANY (FILEDIALOG::ANY)
#define FILEDIALOG_IGNOREOPEN (FILEDIALOG::IGNOREOPEN)

// enum class FILESELECT from "ge_prepass.h" line 3606
#define FILESELECT_LOAD (FILESELECT::LOAD)
#define FILESELECT_SAVE (FILESELECT::SAVE)
#define FILESELECT_DIRECTORY (FILESELECT::DIRECTORY)

// enum class FILESELECTTYPE from "ge_prepass.h" line 3617
#define FILESELECTTYPE_ANYTHING (FILESELECTTYPE::ANYTHING)
#define FILESELECTTYPE_IMAGES (FILESELECTTYPE::IMAGES)
#define FILESELECTTYPE_SCENES (FILESELECTTYPE::SCENES)
#define FILESELECTTYPE_BODYPAINT (FILESELECTTYPE::BODYPAINT)

// enum class OPERATINGSYSTEM from "ge_prepass.h" line 3629
#define OPERATINGSYSTEM_WIN (OPERATINGSYSTEM::WIN)
#define OPERATINGSYSTEM_OSX (OPERATINGSYSTEM::OSX)
#define OPERATINGSYSTEM_LINUX (OPERATINGSYSTEM::LINUX)

// enum class BYTEORDER from "ge_prepass.h" line 3640
#define BYTEORDER_V_MOTOROLA (BYTEORDER::V_MOTOROLA)
#define BYTEORDER_V_INTEL (BYTEORDER::V_INTEL)

// enum class HYPERFILEVALUE from "ge_prepass.h" line 3651
#define HYPERFILEVALUE_NONE (HYPERFILEVALUE::NONE)
#define HYPERFILEVALUE_0 (HYPERFILEVALUE::NONE)
#define HYPERFILEVALUE_START (HYPERFILEVALUE::START)
#define HYPERFILEVALUE_STOP (HYPERFILEVALUE::STOP)
#define HYPERFILEVALUE_CSTOP (HYPERFILEVALUE::CSTOP)
#define HYPERFILEVALUE_CHAR (HYPERFILEVALUE::CHAR)
#define HYPERFILEVALUE_UCHAR (HYPERFILEVALUE::UCHAR)
#define HYPERFILEVALUE_INT16 (HYPERFILEVALUE::INT16)
#define HYPERFILEVALUE_UINT16 (HYPERFILEVALUE::UINT16)
#define HYPERFILEVALUE_INT32 (HYPERFILEVALUE::INT32)
#define HYPERFILEVALUE_UINT32 (HYPERFILEVALUE::UINT32)
#define HYPERFILEVALUE_INT64 (HYPERFILEVALUE::INT64)
#define HYPERFILEVALUE_UINT64 (HYPERFILEVALUE::UINT64)
#define HYPERFILEVALUE_FLOAT (HYPERFILEVALUE::FLOAT)
#define HYPERFILEVALUE_FLOAT64 (HYPERFILEVALUE::FLOAT64)
#define HYPERFILEVALUE_BOOLEAN (HYPERFILEVALUE::BOOLEAN)
#define HYPERFILEVALUE_TIME (HYPERFILEVALUE::TIME)
#define HYPERFILEVALUE_VECTOR (HYPERFILEVALUE::VECTOR)
#define HYPERFILEVALUE_VECTOR64 (HYPERFILEVALUE::VECTOR64)
#define HYPERFILEVALUE_MATRIX (HYPERFILEVALUE::MATRIX)
#define HYPERFILEVALUE_MATRIX64 (HYPERFILEVALUE::MATRIX64)
#define HYPERFILEVALUE_VECTOR32 (HYPERFILEVALUE::VECTOR32)
#define HYPERFILEVALUE_MATRIX32 (HYPERFILEVALUE::MATRIX32)
#define HYPERFILEVALUE_FLOAT32 (HYPERFILEVALUE::FLOAT32)
#define HYPERFILEVALUE_MEMORY (HYPERFILEVALUE::MEMORY)
#define HYPERFILEVALUE_IMAGE (HYPERFILEVALUE::IMAGE)
#define HYPERFILEVALUE_STRING (HYPERFILEVALUE::STRING)
#define HYPERFILEVALUE_FILENAME (HYPERFILEVALUE::FILENAME)
#define HYPERFILEVALUE_CONTAINER (HYPERFILEVALUE::CONTAINER)
#define HYPERFILEVALUE_ALIASLINK (HYPERFILEVALUE::ALIASLINK)
#define HYPERFILEVALUE_LMEMORY (HYPERFILEVALUE::LMEMORY)
#define HYPERFILEVALUE_VECTOR_ARRAY_EX (HYPERFILEVALUE::VECTOR_ARRAY_EX)
#define HYPERFILEVALUE_POLYGON_ARRAY_EX (HYPERFILEVALUE::POLYGON_ARRAY_EX)
#define HYPERFILEVALUE_UINT16_ARRAY_EX (HYPERFILEVALUE::UINT16_ARRAY_EX)
#define HYPERFILEVALUE_PARTICLE_ARRAY_EX (HYPERFILEVALUE::PARTICLE_ARRAY_EX)
#define HYPERFILEVALUE_SREAL_ARRAY_EX (HYPERFILEVALUE::SREAL_ARRAY_EX)
#define HYPERFILEVALUE_ARRAY (HYPERFILEVALUE::ARRAY)
#define HYPERFILEVALUE_UUID (HYPERFILEVALUE::UUID)

// enum class FINDANIM from "ge_prepass.h" line 3698
#define FINDANIM_EXACT (FINDANIM::EXACT)
#define FINDANIM_LEFT (FINDANIM::LEFT)
#define FINDANIM_RIGHT (FINDANIM::RIGHT)

// enum class CCURVE from "ge_prepass.h" line 3709
#define CCURVE_CURVE (CCURVE::CURVE)
#define CCURVE_HLE_BASE (CCURVE::HLE_BASE)
#define CCURVE_HLE_CURVE (CCURVE::HLE_CURVE)
#define CCURVE_SS_CURVE (CCURVE::SS_CURVE)
#define CCURVE_SS_CURVE2 (CCURVE::SS_CURVE2)
#define CCURVE_SS_CURVE3 (CCURVE::SS_CURVE3)
#define CCURVE_SS_CURVE4 (CCURVE::SS_CURVE4)
#define CCURVE_SS_CURVE5 (CCURVE::SS_CURVE5)
#define CCURVE_HLE_SCALE (CCURVE::HLE_SCALE)
#define CCURVE_HLE_MOVE (CCURVE::HLE_MOVE)

// enum class CLOOP from "ge_prepass.h" line 3731
#define CLOOP_OFF (CLOOP::OFF)
#define CLOOP_CONSTANT (CLOOP::CONSTANT)
#define CLOOP_CONTINUE (CLOOP::CONTINUE)
#define CLOOP_REPEAT (CLOOP::REPEAT)
#define CLOOP_OFFSETREPEAT (CLOOP::OFFSETREPEAT)
#define CLOOP_OSCILLATE (CLOOP::OSCILLATE)

// enum class CINTERPOLATION from "ge_prepass.h" line 3745
#define CINTERPOLATION_SPLINE (CINTERPOLATION::SPLINE)
#define CINTERPOLATION_LINEAR (CINTERPOLATION::LINEAR)
#define CINTERPOLATION_STEP (CINTERPOLATION::STEP)
#define CINTERPOLATION_DUMMY (CINTERPOLATION::DUMMY)

// enum class CAUTOMODE from "ge_prepass.h" line 3759
#define CAUTOMODE_CLASSIC (CAUTOMODE::CLASSIC)
#define CAUTOMODE_FIXEDSLOPE (CAUTOMODE::FIXEDSLOPE)

// enum class CKEYPRESET from "ge_prepass.h" line 3770
#define CKEYPRESET_CLASSICAUTO (CKEYPRESET::CLASSICAUTO)
#define CKEYPRESET_NEWAUTO (CKEYPRESET::NEWAUTO)
#define CKEYPRESET_NEWAUTOWEIGHTED (CKEYPRESET::NEWAUTOWEIGHTED)
#define CKEYPRESET_CUSTOM (CKEYPRESET::CUSTOM)

// enum class CLIPBOARDTYPE from "ge_prepass.h" line 3782
#define CLIPBOARDTYPE_EMPTY (CLIPBOARDTYPE::EMPTY)
#define CLIPBOARDTYPE_STRING (CLIPBOARDTYPE::STRING)
#define CLIPBOARDTYPE_BITMAP (CLIPBOARDTYPE::BITMAP)

// enum class EDGESELECTIONTYPE from "ge_prepass.h" line 3794
#define EDGESELECTIONTYPE_SELECTION (EDGESELECTIONTYPE::SELECTION)
#define EDGESELECTIONTYPE_HIDDEN (EDGESELECTIONTYPE::HIDDEN)
#define EDGESELECTIONTYPE_PHONG (EDGESELECTIONTYPE::PHONG)

// enum class REGISTRYTYPE from "ge_prepass.h" line 3805
#define REGISTRYTYPE_ANY (REGISTRYTYPE::ANY)
#define REGISTRYTYPE_WINDOW (REGISTRYTYPE::WINDOW)
#define REGISTRYTYPE_OBJECT (REGISTRYTYPE::OBJECT)
#define REGISTRYTYPE_TAG (REGISTRYTYPE::TAG)
#define REGISTRYTYPE_MATERIAL (REGISTRYTYPE::MATERIAL)
#define REGISTRYTYPE_SHADER (REGISTRYTYPE::SHADER)
#define REGISTRYTYPE_SOUND (REGISTRYTYPE::SOUND)
#define REGISTRYTYPE_LAYOUT (REGISTRYTYPE::LAYOUT)
#define REGISTRYTYPE_BITMAPFILTER (REGISTRYTYPE::BITMAPFILTER)
#define REGISTRYTYPE_VIDEOPOST (REGISTRYTYPE::VIDEOPOST)
#define REGISTRYTYPE_SCENEHOOK (REGISTRYTYPE::SCENEHOOK)
#define REGISTRYTYPE_NODE (REGISTRYTYPE::NODE)
#define REGISTRYTYPE_DESCRIPTION (REGISTRYTYPE::DESCRIPTION)
#define REGISTRYTYPE_LIBRARY (REGISTRYTYPE::LIBRARY)
#define REGISTRYTYPE_CUSTOMDATATYPE (REGISTRYTYPE::CUSTOMDATATYPE)
#define REGISTRYTYPE_RESOURCEDATATYPE (REGISTRYTYPE::RESOURCEDATATYPE)
#define REGISTRYTYPE_SCENELOADER (REGISTRYTYPE::SCENELOADER)
#define REGISTRYTYPE_SCENESAVER (REGISTRYTYPE::SCENESAVER)
#define REGISTRYTYPE_SNHOOK (REGISTRYTYPE::SNHOOK)
#define REGISTRYTYPE_CTRACK (REGISTRYTYPE::CTRACK)
#define REGISTRYTYPE_CSEQ (REGISTRYTYPE::CSEQ)
#define REGISTRYTYPE_CKEY (REGISTRYTYPE::CKEY)
#define REGISTRYTYPE_PAINTER (REGISTRYTYPE::PAINTER)
#define REGISTRYTYPE_GV_VALUE (REGISTRYTYPE::GV_VALUE)
#define REGISTRYTYPE_GV_VALGROUP (REGISTRYTYPE::GV_VALGROUP)
#define REGISTRYTYPE_GV_OPGROUP (REGISTRYTYPE::GV_OPGROUP)
#define REGISTRYTYPE_GV_OPCLASS (REGISTRYTYPE::GV_OPCLASS)
#define REGISTRYTYPE_GV_DATA (REGISTRYTYPE::GV_DATA)
#define REGISTRYTYPE_GADGETS (REGISTRYTYPE::GADGETS)
#define REGISTRYTYPE_PREFS (REGISTRYTYPE::PREFS)
#define REGISTRYTYPE_FIELDLAYER (REGISTRYTYPE::FIELDLAYER)

// enum class MODELINGCOMMANDMODE from "ge_prepass.h" line 3844
#define MODELINGCOMMANDMODE_ALL (MODELINGCOMMANDMODE::ALL)
#define MODELINGCOMMANDMODE_POINTSELECTION (MODELINGCOMMANDMODE::POINTSELECTION)
#define MODELINGCOMMANDMODE_POLYGONSELECTION (MODELINGCOMMANDMODE::POLYGONSELECTION)
#define MODELINGCOMMANDMODE_EDGESELECTION (MODELINGCOMMANDMODE::EDGESELECTION)

// enum class MODELINGCOMMANDFLAGS from "ge_prepass.h" line 3856
#define MODELINGCOMMANDFLAGS_NONE (MODELINGCOMMANDFLAGS::NONE)
#define MODELINGCOMMANDFLAGS_0 (MODELINGCOMMANDFLAGS::NONE)
#define MODELINGCOMMANDFLAGS_CREATEUNDO (MODELINGCOMMANDFLAGS::CREATEUNDO)

// enum class PLUGINTYPE from "ge_prepass.h" line 3866
#define PLUGINTYPE_ANY (PLUGINTYPE::ANY)
#define PLUGINTYPE_SHADER (PLUGINTYPE::SHADER)
#define PLUGINTYPE_MATERIAL (PLUGINTYPE::MATERIAL)
#define PLUGINTYPE_COMMAND (PLUGINTYPE::COMMAND)
#define PLUGINTYPE_OBJECT (PLUGINTYPE::OBJECT)
#define PLUGINTYPE_TAG (PLUGINTYPE::TAG)
#define PLUGINTYPE_BITMAPFILTER (PLUGINTYPE::BITMAPFILTER)
#define PLUGINTYPE_VIDEOPOST (PLUGINTYPE::VIDEOPOST)
#define PLUGINTYPE_TOOL (PLUGINTYPE::TOOL)
#define PLUGINTYPE_SCENEHOOK (PLUGINTYPE::SCENEHOOK)
#define PLUGINTYPE_NODE (PLUGINTYPE::NODE)
#define PLUGINTYPE_LIBRARY (PLUGINTYPE::LIBRARY)
#define PLUGINTYPE_BITMAPLOADER (PLUGINTYPE::BITMAPLOADER)
#define PLUGINTYPE_BITMAPSAVER (PLUGINTYPE::BITMAPSAVER)
#define PLUGINTYPE_SCENELOADER (PLUGINTYPE::SCENELOADER)
#define PLUGINTYPE_SCENESAVER (PLUGINTYPE::SCENESAVER)
#define PLUGINTYPE_COREMESSAGE (PLUGINTYPE::COREMESSAGE)
#define PLUGINTYPE_CUSTOMGUI (PLUGINTYPE::CUSTOMGUI)
#define PLUGINTYPE_CUSTOMDATATYPE (PLUGINTYPE::CUSTOMDATATYPE)
#define PLUGINTYPE_RESOURCEDATATYPE (PLUGINTYPE::RESOURCEDATATYPE)
#define PLUGINTYPE_MANAGERINFORMATION (PLUGINTYPE::MANAGERINFORMATION)
#define PLUGINTYPE_CTRACK (PLUGINTYPE::CTRACK)
#define PLUGINTYPE_FALLOFF (PLUGINTYPE::FALLOFF)
#define PLUGINTYPE_VMAPTRANSFER (PLUGINTYPE::VMAPTRANSFER)
#define PLUGINTYPE_PREFS (PLUGINTYPE::PREFS)
#define PLUGINTYPE_SNAP (PLUGINTYPE::SNAP)
#define PLUGINTYPE_FIELDLAYER (PLUGINTYPE::FIELDLAYER)

// enum class DRAWRESULT from "ge_prepass.h" line 3902
#define DRAWRESULT_ERROR (DRAWRESULT::FAILURE)
#define DRAWRESULT_OK (DRAWRESULT::OK)
#define DRAWRESULT_SKIP (DRAWRESULT::SKIP)

// enum class DISPLAYMODE from "ge_prepass.h" line 3913
#define DISPLAYMODE_UNKNOWN (DISPLAYMODE::UNKNOWN)
#define DISPLAYMODE_GOURAUD (DISPLAYMODE::GOURAUD)
#define DISPLAYMODE_QUICK (DISPLAYMODE::QUICK)
#define DISPLAYMODE_WIRE (DISPLAYMODE::WIRE)
#define DISPLAYMODE_ISOPARM (DISPLAYMODE::ISOPARM)
#define DISPLAYMODE_SHADEDBOX (DISPLAYMODE::SHADEDBOX)
#define DISPLAYMODE_BOX (DISPLAYMODE::BOX)
#define DISPLAYMODE_SKELETON (DISPLAYMODE::SKELETON)
#define DISPLAYMODE_GOURAUDWIRE (DISPLAYMODE::GOURAUDWIRE)
#define DISPLAYMODE_GOURAUDISOPARM (DISPLAYMODE::GOURAUDISOPARM)
#define DISPLAYMODE_QUICKWIRE (DISPLAYMODE::QUICKWIRE)
#define DISPLAYMODE_QUICKISOPARM (DISPLAYMODE::QUICKISOPARM)
#define DISPLAYMODE_FLATWIRE (DISPLAYMODE::FLATWIRE)
#define DISPLAYMODE_FLATISOPARM (DISPLAYMODE::FLATISOPARM)
#define DISPLAYMODE_FLATBOX (DISPLAYMODE::FLATBOX)
#define DISPLAYMODE_HIDDENWIRE (DISPLAYMODE::HIDDENWIRE)
#define DISPLAYMODE_HIDDENISOPARM (DISPLAYMODE::HIDDENISOPARM)
#define DISPLAYMODE_HIDDENBOX (DISPLAYMODE::HIDDENBOX)
#define DISPLAYMODE_SHADEDBOXWIRE (DISPLAYMODE::SHADEDBOXWIRE)
#define DISPLAYMODE_QUICKBOXWIRE (DISPLAYMODE::QUICKBOXWIRE)
#define DISPLAYMODE_QUICKBOX (DISPLAYMODE::QUICKBOX)
#define DISPLAYMODE_PRIVATE_ISOLINE (DISPLAYMODE::PRIVATE_ISOLINE)
#define DISPLAYMODE_PRIVATE_FLAT (DISPLAYMODE::PRIVATE_FLAT)
#define DISPLAYMODE_PRIVATE_HIDDEN (DISPLAYMODE::PRIVATE_HIDDEN)

// enum class DOCUMENTSETTINGS from "ge_prepass.h" line 3949
#define DOCUMENTSETTINGS_GENERAL (DOCUMENTSETTINGS::GENERAL)
#define DOCUMENTSETTINGS_MODELING (DOCUMENTSETTINGS::MODELING)
#define DOCUMENTSETTINGS_DOCUMENT (DOCUMENTSETTINGS::DOCUMENT)
#define DOCUMENTSETTINGS_ANIMATIONSYSTEM (DOCUMENTSETTINGS::ANIMATIONSYSTEM)
#define DOCUMENTSETTINGS_TOOLS (DOCUMENTSETTINGS::TOOLS)

// enum class SERIALINFO from "ge_prepass.h" line 3962
#define SERIALINFO_CINEMA4D (SERIALINFO::CINEMA4D)
#define SERIALINFO_MULTILICENSE (SERIALINFO::MULTILICENSE)
#define SERIALINFO_RLMLICENSE (SERIALINFO::RLMLICENSE)

// enum class VERSIONTYPE from "ge_prepass.h" line 3973
#define VERSIONTYPE_PRIME (VERSIONTYPE::PRIME)
#define VERSIONTYPE_BODYPAINT (VERSIONTYPE::BODYPAINT)
#define VERSIONTYPE_STUDIO (VERSIONTYPE::STUDIO)
#define VERSIONTYPE_VISUALIZE (VERSIONTYPE::VISUALIZE)
#define VERSIONTYPE_BROADCAST (VERSIONTYPE::BROADCAST)
#define VERSIONTYPE_BENCHMARK (VERSIONTYPE::BENCHMARK)
#define VERSIONTYPE_UPDATER (VERSIONTYPE::UPDATER)
#define VERSIONTYPE_INSTALLER (VERSIONTYPE::INSTALLER)
#define VERSIONTYPE_NET_CLIENT (VERSIONTYPE::NET_CLIENT)
#define VERSIONTYPE_NET_SERVER_3 (VERSIONTYPE::NET_SERVER_3)
#define VERSIONTYPE_NET_SERVER_UNLIMITED (VERSIONTYPE::NET_SERVER_UNLIMITED)
#define VERSIONTYPE_UNKNOWN (VERSIONTYPE::UNKNOWN)
#define VERSIONTYPE_LICENSESERVER (VERSIONTYPE::LICENSESERVER)

// enum class LAYERSETMODE from "ge_prepass.h" line 3994
#define LAYERSETMODE_LAYERS (LAYERSETMODE::LAYERS)
#define LAYERSETMODE_LAYERMASKS (LAYERSETMODE::LAYERMASKS)
#define LAYERSETMODE_ALPHAS (LAYERSETMODE::ALPHAS)
#define LAYERSETMODE_LAYERALPHA (LAYERSETMODE::LAYERALPHA)
#define LAYERSETMODE_DISABLED (LAYERSETMODE::DISABLED)

// enum class SYSTEMINFO from "ge_prepass.h" line 4007
#define SYSTEMINFO_NONE (SYSTEMINFO::NONE)
#define SYSTEMINFO_0 (SYSTEMINFO::NONE)
#define SYSTEMINFO_COMMANDLINE (SYSTEMINFO::COMMANDLINE)
#define SYSTEMINFO_SAVABLEDEMO (SYSTEMINFO::SAVABLEDEMO)
#define SYSTEMINFO_SAVABLEDEMO_ACTIVE (SYSTEMINFO::SAVABLEDEMO_ACTIVE)
#define SYSTEMINFO_OPENGL (SYSTEMINFO::OPENGL)
#define SYSTEMINFO_STUDENT (SYSTEMINFO::STUDENT)
#define SYSTEMINFO_LITE (SYSTEMINFO::LITE)
#define SYSTEMINFO_LITE_ACTIVE (SYSTEMINFO::LITE_ACTIVE)
#define SYSTEMINFO_CINEWARE (SYSTEMINFO::CINEWARE)
#define SYSTEMINFO_CINERENDER (SYSTEMINFO::CINERENDER)
#define SYSTEMINFO_CPYTHON (SYSTEMINFO::CPYTHON)
#define SYSTEMINFO_CPYTHON3 (SYSTEMINFO::CPYTHON3)

// enum class SELECTIONFILTERBIT from "ge_prepass.h" line 4032
#define SELECTIONFILTERBIT_NONE (SELECTIONFILTERBIT::NONE)
#define SELECTIONFILTERBIT_0 (SELECTIONFILTERBIT::NONE)
#define SELECTIONFILTERBIT_NULLOBJECT (SELECTIONFILTERBIT::NULLOBJECT)
#define SELECTIONFILTERBIT_POLYGON (SELECTIONFILTERBIT::POLYGON)
#define SELECTIONFILTERBIT_SPLINE (SELECTIONFILTERBIT::SPLINE)
#define SELECTIONFILTERBIT_GENERATOR (SELECTIONFILTERBIT::GENERATOR)
#define SELECTIONFILTERBIT_HYPERNURBS (SELECTIONFILTERBIT::HYPERNURBS)
#define SELECTIONFILTERBIT_DEFORMER (SELECTIONFILTERBIT::DEFORMER)
#define SELECTIONFILTERBIT_CAMERA (SELECTIONFILTERBIT::CAMERA)
#define SELECTIONFILTERBIT_LIGHT (SELECTIONFILTERBIT::LIGHT)
#define SELECTIONFILTERBIT_SCENE (SELECTIONFILTERBIT::SCENE)
#define SELECTIONFILTERBIT_PARTICLE (SELECTIONFILTERBIT::PARTICLE)
#define SELECTIONFILTERBIT_OTHER (SELECTIONFILTERBIT::OTHER)
#define SELECTIONFILTERBIT_JOINT (SELECTIONFILTERBIT::JOINT)

// enum class OBJECTSTATE from "ge_prepass.h" line 4053
#define OBJECTSTATE_EDITOR (OBJECTSTATE::EDITOR)
#define OBJECTSTATE_RENDER (OBJECTSTATE::RENDER)
#define OBJECTSTATE_DEFORM (OBJECTSTATE::DEFORM)

// enum class DISPLAYFILTER from "ge_prepass.h" line 4066
#define DISPLAYFILTER_NONE (DISPLAYFILTER::NONE)
#define DISPLAYFILTER_0 (DISPLAYFILTER::NONE)
#define DISPLAYFILTER_NULLOBJECT (DISPLAYFILTER::NULLOBJECT)
#define DISPLAYFILTER_POLYGON (DISPLAYFILTER::POLYGON)
#define DISPLAYFILTER_SPLINE (DISPLAYFILTER::SPLINE)
#define DISPLAYFILTER_GENERATOR (DISPLAYFILTER::GENERATOR)
#define DISPLAYFILTER_HYPERNURBS (DISPLAYFILTER::HYPERNURBS)
#define DISPLAYFILTER_UNUSED1 (DISPLAYFILTER::UNUSED1)
#define DISPLAYFILTER_DEFORMER (DISPLAYFILTER::DEFORMER)
#define DISPLAYFILTER_CAMERA (DISPLAYFILTER::CAMERA)
#define DISPLAYFILTER_LIGHT (DISPLAYFILTER::LIGHT)
#define DISPLAYFILTER_SCENE (DISPLAYFILTER::SCENE)
#define DISPLAYFILTER_PARTICLE (DISPLAYFILTER::PARTICLE)
#define DISPLAYFILTER_OTHER (DISPLAYFILTER::OTHER)
#define DISPLAYFILTER_GRID (DISPLAYFILTER::GRID)
#define DISPLAYFILTER_HORIZON (DISPLAYFILTER::HORIZON)
#define DISPLAYFILTER_WORLDAXIS (DISPLAYFILTER::WORLDAXIS)
#define DISPLAYFILTER_BOUNDS (DISPLAYFILTER::BOUNDS)
#define DISPLAYFILTER_HUD (DISPLAYFILTER::HUD)
#define DISPLAYFILTER_SDS (DISPLAYFILTER::SDS)
#define DISPLAYFILTER_HIGHLIGHTING (DISPLAYFILTER::HIGHLIGHTING)
#define DISPLAYFILTER_MULTIAXIS (DISPLAYFILTER::MULTIAXIS)
#define DISPLAYFILTER_OBJECTHANDLES (DISPLAYFILTER::OBJECTHANDLES)
#define DISPLAYFILTER_HANDLEBANDS (DISPLAYFILTER::HANDLEBANDS)
#define DISPLAYFILTER_SDSCAGE (DISPLAYFILTER::SDSCAGE)
#define DISPLAYFILTER_NGONLINES (DISPLAYFILTER::NGONLINES)
#define DISPLAYFILTER_JOINT (DISPLAYFILTER::JOINT)
#define DISPLAYFILTER_OBJECTHIGHLIGHTING (DISPLAYFILTER::OBJECTHIGHLIGHTING)
#define DISPLAYFILTER_GUIDELINES (DISPLAYFILTER::GUIDELINES)
#define DISPLAYFILTER_POI (DISPLAYFILTER::POI)
#define DISPLAYFILTER_GRADIENT (DISPLAYFILTER::GRADIENT)
#define DISPLAYFILTER_BASEGRID (DISPLAYFILTER::BASEGRID)
#define DISPLAYFILTER_HANDLES (DISPLAYFILTER::HANDLES)

// enum class DISPLAYEDITSTATE from "ge_prepass.h" line 4107
#define DISPLAYEDITSTATE_NONE (DISPLAYEDITSTATE::NONE)
#define DISPLAYEDITSTATE_0 (DISPLAYEDITSTATE::NONE)
#define DISPLAYEDITSTATE_SDS (DISPLAYEDITSTATE::SDS)
#define DISPLAYEDITSTATE_DEFORM (DISPLAYEDITSTATE::DEFORM)
#define DISPLAYEDITSTATE_DOCUMENT (DISPLAYEDITSTATE::DOCUMENT)

// enum class THREADTYPE from "ge_prepass.h" line 4120
#define THREADTYPE_NONE (THREADTYPE::NONE)
#define THREADTYPE_0 (THREADTYPE::NONE)
#define THREADTYPE_EDITORREDRAW (THREADTYPE::EDITORREDRAW)
#define THREADTYPE_RENDEREDITOR (THREADTYPE::RENDEREDITOR)
#define THREADTYPE_RENDEREXTERNAL (THREADTYPE::RENDEREXTERNAL)

// enum class RENDERPROGRESSTYPE from "ge_prepass.h" line 4132
#define RENDERPROGRESSTYPE_BEFORERENDERING (RENDERPROGRESSTYPE::BEFORERENDERING)
#define RENDERPROGRESSTYPE_DURINGRENDERING (RENDERPROGRESSTYPE::DURINGRENDERING)
#define RENDERPROGRESSTYPE_AFTERRENDERING (RENDERPROGRESSTYPE::AFTERRENDERING)
#define RENDERPROGRESSTYPE_GLOBALILLUMINATION (RENDERPROGRESSTYPE::GLOBALILLUMINATION)
#define RENDERPROGRESSTYPE_QUICK_PREVIEW (RENDERPROGRESSTYPE::QUICK_PREVIEW)
#define RENDERPROGRESSTYPE_AMBIENTOCCLUSION (RENDERPROGRESSTYPE::AMBIENTOCCLUSION)

// enum class RDATA_SAVECALLBACK_CMD from "ge_prepass.h" line 4146
#define RDATA_SAVECALLBACK_CMD_OPEN (RDATA_SAVECALLBACK_CMD::OPEN)
#define RDATA_SAVECALLBACK_CMD_WRITE (RDATA_SAVECALLBACK_CMD::WRITE)
#define RDATA_SAVECALLBACK_CMD_CLOSE (RDATA_SAVECALLBACK_CMD::CLOSE)

// enum class VPGETINFO from "ge_prepass.h" line 4157
#define VPGETINFO_XRESOLUTION (VPGETINFO::XRESOLUTION)
#define VPGETINFO_YRESOLUTION (VPGETINFO::YRESOLUTION)
#define VPGETINFO_BITDEPTH (VPGETINFO::BITDEPTH)
#define VPGETINFO_CPP (VPGETINFO::CPP)
#define VPGETINFO_VISIBLE (VPGETINFO::VISIBLE)
#define VPGETINFO_LINEOFFSET (VPGETINFO::LINEOFFSET)

// enum class DRAWOBJECT from "ge_prepass.h" line 4171
#define DRAWOBJECT_NONE (DRAWOBJECT::NONE)
#define DRAWOBJECT_0 (DRAWOBJECT::NONE)
#define DRAWOBJECT_FORCELINES (DRAWOBJECT::FORCELINES)
#define DRAWOBJECT_NOBACKCULL (DRAWOBJECT::NOBACKCULL)
#define DRAWOBJECT_LOCALMATRIX (DRAWOBJECT::LOCALMATRIX)
#define DRAWOBJECT_EDITMODE (DRAWOBJECT::EDITMODE)
#define DRAWOBJECT_FORCEBASE (DRAWOBJECT::FORCEBASE)
#define DRAWOBJECT_FORCEPOINTS (DRAWOBJECT::FORCEPOINTS)
#define DRAWOBJECT_NO_EOGL (DRAWOBJECT::NO_EOGL)
#define DRAWOBJECT_USE_OBJECT_COLOR (DRAWOBJECT::USE_OBJECT_COLOR)
#define DRAWOBJECT_USE_CUSTOM_COLOR (DRAWOBJECT::USE_CUSTOM_COLOR)
#define DRAWOBJECT_XRAY_ON (DRAWOBJECT::XRAY_ON)
#define DRAWOBJECT_XRAY_OFF (DRAWOBJECT::XRAY_OFF)
#define DRAWOBJECT_IMMEDIATELY (DRAWOBJECT::IMMEDIATELY)
#define DRAWOBJECT_Z_OFFSET (DRAWOBJECT::Z_OFFSET)
#define DRAWOBJECT_PRIVATE_ANY (DRAWOBJECT::PRIVATE_ANY)

// enum class RENDERFLAGS from "ge_prepass.h" line 4207
#define RENDERFLAGS_NONE (RENDERFLAGS::NONE)
#define RENDERFLAGS_0 (RENDERFLAGS::NONE)
#define RENDERFLAGS_EXTERNAL (RENDERFLAGS::EXTERNAL)
#define RENDERFLAGS_NODOCUMENTCLONE (RENDERFLAGS::NODOCUMENTCLONE)
#define RENDERFLAGS_SHOWERRORS (RENDERFLAGS::SHOWERRORS)
#define RENDERFLAGS_PREVIEWRENDER (RENDERFLAGS::PREVIEWRENDER)
#define RENDERFLAGS_IRR (RENDERFLAGS::IRR)
#define RENDERFLAGS_CREATE_PICTUREVIEWER (RENDERFLAGS::CREATE_PICTUREVIEWER)
#define RENDERFLAGS_OPEN_PICTUREVIEWER (RENDERFLAGS::OPEN_PICTUREVIEWER)
#define RENDERFLAGS_KEEP_CONTEXT (RENDERFLAGS::KEEP_CONTEXT)
#define RENDERFLAGS_BATCHRENDER (RENDERFLAGS::BATCHRENDER)
#define RENDERFLAGS_NET (RENDERFLAGS::NET)
#define RENDERFLAGS_DONTANIMATE (RENDERFLAGS::DONTANIMATE)
#define RENDERFLAGS_PREVIEWSETTINGS (RENDERFLAGS::PREVIEWSETTINGS)

// enum class WRITEMODE from "ge_prepass.h" line 4228
#define WRITEMODE_STANDARD (WRITEMODE::STANDARD)
#define WRITEMODE_ASSEMBLE_MOVIE (WRITEMODE::ASSEMBLE_MOVIE)
#define WRITEMODE_ASSEMBLE_SINGLEIMAGE (WRITEMODE::ASSEMBLE_SINGLEIMAGE)

// enum class NETRENDERFLAGS from "ge_prepass.h" line 4239
#define NETRENDERFLAGS_NONE (NETRENDERFLAGS::NONE)
#define NETRENDERFLAGS_0 (NETRENDERFLAGS::NONE)
#define NETRENDERFLAGS_OPEN_PICTUREVIEWER (NETRENDERFLAGS::OPEN_PICTUREVIEWER)
#define NETRENDERFLAGS_SHOWERRORS (NETRENDERFLAGS::SHOWERRORS)
#define NETRENDERFLAGS_DELETEAFTERRENDERING (NETRENDERFLAGS::DELETEAFTERRENDERING)
#define NETRENDERFLAGS_NOPEERTOPEERASSETDISTRIBUTION (NETRENDERFLAGS::NOPEERTOPEERASSETDISTRIBUTION)
#define NETRENDERFLAGS_NOREQUESTONDEMAND (NETRENDERFLAGS::NOREQUESTONDEMAND)
#define NETRENDERFLAGS_EXCLUDECLIENTONLOADINGERROR (NETRENDERFLAGS::EXCLUDECLIENTONLOADINGERROR)
#define NETRENDERFLAGS_SAVERESULTSINREPOSITORY (NETRENDERFLAGS::SAVERESULTSINREPOSITORY)
#define NETRENDERFLAGS_ASSEMBLEB3DFILESIMMEDIATLEY (NETRENDERFLAGS::ASSEMBLEB3DFILESIMMEDIATLEY)
#define NETRENDERFLAGS_NOWRITETEST (NETRENDERFLAGS::NOWRITETEST)
#define NETRENDERFLAGS_HANDLEWARNINGASERROR (NETRENDERFLAGS::HANDLEWARNINGASERROR)
#define NETRENDERFLAGS_KEEPB3DFILESAFTERASSEMBLING (NETRENDERFLAGS::KEEPB3DFILESAFTERASSEMBLING)

// enum class CHECKISRUNNING from "ge_prepass.h" line 4259
#define CHECKISRUNNING_ANIMATIONRUNNING (CHECKISRUNNING::ANIMATIONRUNNING)
#define CHECKISRUNNING_VIEWDRAWING (CHECKISRUNNING::VIEWDRAWING)
#define CHECKISRUNNING_EDITORRENDERING (CHECKISRUNNING::EDITORRENDERING)
#define CHECKISRUNNING_EXTERNALRENDERING (CHECKISRUNNING::EXTERNALRENDERING)
#define CHECKISRUNNING_PAINTERUPDATING (CHECKISRUNNING::PAINTERUPDATING)
#define CHECKISRUNNING_MATERIALPREVIEWRUNNING (CHECKISRUNNING::MATERIALPREVIEWRUNNING)
#define CHECKISRUNNING_EVENTSYSTEM (CHECKISRUNNING::EVENTSYSTEM)
#define CHECKISRUNNING_BAKING (CHECKISRUNNING::BAKING)
#define CHECKISRUNNING_INTERACTIVERENDERING (CHECKISRUNNING::INTERACTIVERENDERING)

// enum class BAKE_TEX_ERR from "ge_prepass.h" line 4276
#define BAKE_TEX_ERR_NONE (BAKE_TEX_ERR::NONE)
#define BAKE_TEX_ERR_0 (BAKE_TEX_ERR::NONE)
#define BAKE_TEX_ERR_NO_DOC (BAKE_TEX_ERR::NO_DOC)
#define BAKE_TEX_ERR_NO_MEM (BAKE_TEX_ERR::NO_MEM)
#define BAKE_TEX_ERR_NO_RENDER_DOC (BAKE_TEX_ERR::NO_RENDER_DOC)
#define BAKE_TEX_ERR_NO_TEXTURE_TAG (BAKE_TEX_ERR::NO_TEXTURE_TAG)
#define BAKE_TEX_ERR_NO_OBJECT (BAKE_TEX_ERR::NO_OBJECT)
#define BAKE_TEX_ERR_NO_UVW_TAG (BAKE_TEX_ERR::NO_UVW_TAG)
#define BAKE_TEX_ERR_TEXTURE_MISSING (BAKE_TEX_ERR::TEXTURE_MISSING)
#define BAKE_TEX_ERR_WRONG_BITMAP (BAKE_TEX_ERR::WRONG_BITMAP)
#define BAKE_TEX_ERR_USERBREAK (BAKE_TEX_ERR::USERBREAK)
#define BAKE_TEX_ERR_NO_OPTIMAL_MAPPING (BAKE_TEX_ERR::NO_OPTIMAL_MAPPING)
#define BAKE_TEX_ERR_NO_SOURCE_UVW_TAG (BAKE_TEX_ERR::NO_SOURCE_UVW_TAG)

// enum class GL_MESSAGE from "ge_prepass.h" line 4296
#define GL_MESSAGE_OK (GL_MESSAGE::OK)
#define GL_MESSAGE_ERROR_ (GL_MESSAGE::ERROR_)
#define GL_MESSAGE_FORCE_EMULATION (GL_MESSAGE::FORCE_EMULATION)

// enum class VIEWPORT_PICK_FLAGS from "ge_prepass.h" line 4307
#define VIEWPORT_PICK_FLAGS_NONE (VIEWPORT_PICK_FLAGS::NONE)
#define VIEWPORT_PICK_FLAGS_0 (VIEWPORT_PICK_FLAGS::NONE)
#define VIEWPORT_PICK_FLAGS_ALLOW_OGL (VIEWPORT_PICK_FLAGS::ALLOW_OGL)
#define VIEWPORT_PICK_FLAGS_DONT_STOP_THREADS (VIEWPORT_PICK_FLAGS::DONT_STOP_THREADS)
#define VIEWPORT_PICK_FLAGS_USE_SEL_FILTER (VIEWPORT_PICK_FLAGS::USE_SEL_FILTER)
#define VIEWPORT_PICK_FLAGS_OGL_ONLY_TOPMOST (VIEWPORT_PICK_FLAGS::OGL_ONLY_TOPMOST)
#define VIEWPORT_PICK_FLAGS_OGL_ONLY_VISIBLE (VIEWPORT_PICK_FLAGS::OGL_ONLY_VISIBLE)
#define VIEWPORT_PICK_FLAGS_OGL_IGNORE_Z (VIEWPORT_PICK_FLAGS::OGL_IGNORE_Z)
#define VIEWPORT_PICK_FLAGS_OGL_ONLY_TOPMOST_WITH_OBJ (VIEWPORT_PICK_FLAGS::OGL_ONLY_TOPMOST_WITH_OBJ)

// enum class BACKGROUNDHANDLERCOMMAND from "ge_prepass.h" line 4347
#define BACKGROUNDHANDLERCOMMAND_ISRUNNING (BACKGROUNDHANDLERCOMMAND::ISRUNNING)
#define BACKGROUNDHANDLERCOMMAND_STOP (BACKGROUNDHANDLERCOMMAND::STOP)
#define BACKGROUNDHANDLERCOMMAND_START (BACKGROUNDHANDLERCOMMAND::START)
#define BACKGROUNDHANDLERCOMMAND_REMOVE (BACKGROUNDHANDLERCOMMAND::REMOVE)

// enum class BACKGROUNDHANDLERFLAGS from "ge_prepass.h" line 4373
#define BACKGROUNDHANDLERFLAGS_NONE (BACKGROUNDHANDLERFLAGS::NONE)
#define BACKGROUNDHANDLERFLAGS_0 (BACKGROUNDHANDLERFLAGS::NONE)
#define BACKGROUNDHANDLERFLAGS_VIEWREDRAW (BACKGROUNDHANDLERFLAGS::VIEWREDRAW)
#define BACKGROUNDHANDLERFLAGS_EDITORRENDDER (BACKGROUNDHANDLERFLAGS::EDITORRENDDER)
#define BACKGROUNDHANDLERFLAGS_MATERIALPREVIEW (BACKGROUNDHANDLERFLAGS::MATERIALPREVIEW)
#define BACKGROUNDHANDLERFLAGS_RENDEREXTERNAL (BACKGROUNDHANDLERFLAGS::RENDEREXTERNAL)
#define BACKGROUNDHANDLERFLAGS_PRIVATE_VIEWREDRAW (BACKGROUNDHANDLERFLAGS::PRIVATE_VIEWREDRAW)
#define BACKGROUNDHANDLERFLAGS_SHUTDOWN (BACKGROUNDHANDLERFLAGS::SHUTDOWN)

// enum class IDENTIFYFILE from "ge_prepass.h" line 4395
#define IDENTIFYFILE_NONE (IDENTIFYFILE::NONE)
#define IDENTIFYFILE_0 (IDENTIFYFILE::NONE)
#define IDENTIFYFILE_SCENE (IDENTIFYFILE::SCENE)
#define IDENTIFYFILE_IMAGE (IDENTIFYFILE::IMAGE)
#define IDENTIFYFILE_MOVIE (IDENTIFYFILE::MOVIE)
#define IDENTIFYFILE_SKIPQUICKTIME (IDENTIFYFILE::SKIPQUICKTIME)
#define IDENTIFYFILE_SCRIPT (IDENTIFYFILE::SCRIPT)
#define IDENTIFYFILE_SOUND (IDENTIFYFILE::SOUND)
#define IDENTIFYFILE_LAYOUT (IDENTIFYFILE::LAYOUT)
#define IDENTIFYFILE_PYTHON (IDENTIFYFILE::PYTHON)

// enum class CALCHARDSHADOW from "ge_prepass.h" line 4412
#define CALCHARDSHADOW_NONE (CALCHARDSHADOW::NONE)
#define CALCHARDSHADOW_0 (CALCHARDSHADOW::NONE)
#define CALCHARDSHADOW_TRANSPARENCY (CALCHARDSHADOW::TRANSPARENCY)
#define CALCHARDSHADOW_SPECIALGISHADOW (CALCHARDSHADOW::SPECIALGISHADOW)
#define CALCHARDSHADOW_SPECIALSELFSHADOW (CALCHARDSHADOW::SPECIALSELFSHADOW)

// enum class ILLUMINATEFLAGS from "ge_prepass.h" line 4424
#define ILLUMINATEFLAGS_NONE (ILLUMINATEFLAGS::NONE)
#define ILLUMINATEFLAGS_0 (ILLUMINATEFLAGS::NONE)
#define ILLUMINATEFLAGS_SHADOW (ILLUMINATEFLAGS::SHADOW)
#define ILLUMINATEFLAGS_NOENVIRONMENT (ILLUMINATEFLAGS::NOENVIRONMENT)
#define ILLUMINATEFLAGS_DISABLESHADOWMAP_CORRECTION (ILLUMINATEFLAGS::DISABLESHADOWMAP_CORRECTION)
#define ILLUMINATEFLAGS_DISABLESHADOWCASTERMP_CORRECTION (ILLUMINATEFLAGS::DISABLESHADOWCASTERMP_CORRECTION)
#define ILLUMINATEFLAGS_LIGHTDIRNORMALS (ILLUMINATEFLAGS::LIGHTDIRNORMALS)
#define ILLUMINATEFLAGS_NODISTANCEFALLOFF (ILLUMINATEFLAGS::NODISTANCEFALLOFF)
#define ILLUMINATEFLAGS_NOGRAIN (ILLUMINATEFLAGS::NOGRAIN)
#define ILLUMINATEFLAGS_BACKLIGHT (ILLUMINATEFLAGS::BACKLIGHT)

// enum class RAYBIT from "ge_prepass.h" line 4442
#define RAYBIT_NONE (RAYBIT::NONE)
#define RAYBIT_0 (RAYBIT::NONE)
#define RAYBIT_REFLECTION (RAYBIT::REFLECTION)
#define RAYBIT_TRANSPARENCY (RAYBIT::TRANSPARENCY)
#define RAYBIT_REFRACTION (RAYBIT::REFRACTION)
#define RAYBIT_CUSTOM (RAYBIT::CUSTOM)
#define RAYBIT_CURR_REFLECTION (RAYBIT::CURR_REFLECTION)
#define RAYBIT_CURR_TRANSPARENCY (RAYBIT::CURR_TRANSPARENCY)
#define RAYBIT_CURR_REFRACTION (RAYBIT::CURR_REFRACTION)
#define RAYBIT_CURR_CUSTOM (RAYBIT::CURR_CUSTOM)
#define RAYBIT_VOLUMETRICLIGHT (RAYBIT::VOLUMETRICLIGHT)
#define RAYBIT_ALLOWVLMIX (RAYBIT::ALLOWVLMIX)
#define RAYBIT_GI (RAYBIT::GI)
#define RAYBIT_BLURRY (RAYBIT::BLURRY)
#define RAYBIT_SSS (RAYBIT::SSS)
#define RAYBIT_AO (RAYBIT::AO)
#define RAYBIT_COMPOSITING (RAYBIT::COMPOSITING)

// enum class VIDEOPOSTINFO from "ge_prepass.h" line 4494
#define VIDEOPOSTINFO_NONE (VIDEOPOSTINFO::NONE)
#define VIDEOPOSTINFO_0 (VIDEOPOSTINFO::NONE)
#define VIDEOPOSTINFO_STOREFRAGMENTS (VIDEOPOSTINFO::STOREFRAGMENTS)
#define VIDEOPOSTINFO_EXECUTELINE (VIDEOPOSTINFO::EXECUTELINE)
#define VIDEOPOSTINFO_EXECUTEPIXEL (VIDEOPOSTINFO::EXECUTEPIXEL)
#define VIDEOPOSTINFO_REQUEST_MOTIONMATRIX (VIDEOPOSTINFO::REQUEST_MOTIONMATRIX)
#define VIDEOPOSTINFO_REQUEST_MOTIONGEOMETRY (VIDEOPOSTINFO::REQUEST_MOTIONGEOMETRY)
#define VIDEOPOSTINFO_CALCVOLUMETRIC (VIDEOPOSTINFO::CALCVOLUMETRIC)
#define VIDEOPOSTINFO_CALCSHADOW (VIDEOPOSTINFO::CALCSHADOW)
#define VIDEOPOSTINFO_CUSTOMLENS (VIDEOPOSTINFO::CUSTOMLENS)
#define VIDEOPOSTINFO_GLOBALILLUMINATION (VIDEOPOSTINFO::GLOBALILLUMINATION)
#define VIDEOPOSTINFO_CAUSTICS (VIDEOPOSTINFO::CAUSTICS)
#define VIDEOPOSTINFO_CUSTOMLENS_EXTENDED (VIDEOPOSTINFO::CUSTOMLENS_EXTENDED)
#define VIDEOPOSTINFO_NETFRAME (VIDEOPOSTINFO::NETFRAME)
#define VIDEOPOSTINFO_NETRUNONSERVER (VIDEOPOSTINFO::NETRUNONSERVER)
#define VIDEOPOSTINFO_NETCREATEBUFFER (VIDEOPOSTINFO::NETCREATEBUFFER)
#define VIDEOPOSTINFO_NETCREATEBUFFER_MULTI (VIDEOPOSTINFO::NETCREATEBUFFER_MULTI)
#define VIDEOPOSTINFO_REQUEST_MOTIONFULL (VIDEOPOSTINFO::REQUEST_MOTIONFULL)

// enum class SHADERINFO from "ge_prepass.h" line 4520
#define SHADERINFO_NONE (SHADERINFO::NONE)
#define SHADERINFO_0 (SHADERINFO::NONE)
#define SHADERINFO_TRANSFORM (SHADERINFO::TRANSFORM)
#define SHADERINFO_BUMP_SUPPORT (SHADERINFO::BUMP_SUPPORT)
#define SHADERINFO_ALPHA_SUPPORT (SHADERINFO::ALPHA_SUPPORT)
#define SHADERINFO_REFLECTIONS (SHADERINFO::REFLECTIONS)
#define SHADERINFO_DUDVREQUIRED (SHADERINFO::DUDVREQUIRED)
#define SHADERINFO_DYNAMICSUBSHADERS (SHADERINFO::DYNAMICSUBSHADERS)
#define SHADERINFO_TRANSPARENCIES (SHADERINFO::TRANSPARENCIES)

// enum class SAMPLEBUMP from "ge_prepass.h" line 4537
#define SAMPLEBUMP_NONE (SAMPLEBUMP::NONE)
#define SAMPLEBUMP_0 (SAMPLEBUMP::NONE)
#define SAMPLEBUMP_MIPFALLOFF (SAMPLEBUMP::MIPFALLOFF)

// enum class INITCALCULATION from "ge_prepass.h" line 4549
#define INITCALCULATION_SURFACE (INITCALCULATION::SURFACE)
#define INITCALCULATION_TRANSPARENCY (INITCALCULATION::TRANSPARENCY)
#define INITCALCULATION_DISPLACEMENT (INITCALCULATION::DISPLACEMENT)

// enum class FIELDLAYER_FLAG from "ge_prepass.h" line 4562
#define FIELDLAYER_FLAG_NONE (FIELDLAYER_FLAG::NONE)
#define FIELDLAYER_FLAG_0 (FIELDLAYER_FLAG::NONE)
#define FIELDLAYER_FLAG_SKIP (FIELDLAYER_FLAG::SKIP)
#define FIELDLAYER_FLAG_ERRORSKIP (FIELDLAYER_FLAG::ERRORSKIP)
#define FIELDLAYER_FLAG_HIDE (FIELDLAYER_FLAG::HIDE)
#define FIELDLAYER_FLAG_MODIFYDATA (FIELDLAYER_FLAG::MODIFYDATA)
#define FIELDLAYER_FLAG_PRESERVEALPHA (FIELDLAYER_FLAG::PRESERVEALPHA)
#define FIELDLAYER_FLAG_NOCHILDVALUE (FIELDLAYER_FLAG::NOCHILDVALUE)
#define FIELDLAYER_FLAG_NOCHILDCOLOR (FIELDLAYER_FLAG::NOCHILDCOLOR)
#define FIELDLAYER_FLAG_NOCHILDDIRECTION (FIELDLAYER_FLAG::NOCHILDDIRECTION)
#define FIELDLAYER_FLAG_TEMPORARY (FIELDLAYER_FLAG::TEMPORARY)
#define FIELDLAYER_FLAG_NOCHILDROTATION (FIELDLAYER_FLAG::NOCHILDROTATION)
#define FIELDLAYER_FLAG_SKIPWITHDEFAULTOUTPUTS (FIELDLAYER_FLAG::SKIPWITHDEFAULTOUTPUTS)

// enum class MULTIPASSCHANNEL from "ge_prepass.h" line 4681
#define MULTIPASSCHANNEL_NONE (MULTIPASSCHANNEL::NONE)
#define MULTIPASSCHANNEL_0 (MULTIPASSCHANNEL::NONE)
#define MULTIPASSCHANNEL_IMAGELAYER (MULTIPASSCHANNEL::IMAGELAYER)
#define MULTIPASSCHANNEL_MATERIALCHANNEL (MULTIPASSCHANNEL::MATERIALCHANNEL)

// enum class DLG_TYPE from "ge_prepass.h" line 4692
#define DLG_TYPE_MODAL (DLG_TYPE::MODAL)
#define DLG_TYPE_MODAL_RESIZEABLE (DLG_TYPE::MODAL_RESIZEABLE)
#define DLG_TYPE_ASYNC (DLG_TYPE::ASYNC)
#define DLG_TYPE_ASYNC_POPUP_RESIZEABLE (DLG_TYPE::ASYNC_POPUP_RESIZEABLE)
#define DLG_TYPE_ASYNC_POPUPEDIT (DLG_TYPE::ASYNC_POPUPEDIT)
#define DLG_TYPE_ASYNC_FULLSCREEN_WORK (DLG_TYPE::ASYNC_FULLSCREEN_WORK)
#define DLG_TYPE_ASYNC_FULLSCREEN_MONITOR (DLG_TYPE::ASYNC_FULLSCREEN_MONITOR)
#define DLG_TYPE_DUMMY (DLG_TYPE::DUMMY)

// enum class MULTIMSG_ROUTE from "ge_prepass.h" line 4711
#define MULTIMSG_ROUTE_NONE (MULTIMSG_ROUTE::NONE)
#define MULTIMSG_ROUTE_0 (MULTIMSG_ROUTE::NONE)
#define MULTIMSG_ROUTE_UP (MULTIMSG_ROUTE::UP)
#define MULTIMSG_ROUTE_ROOT (MULTIMSG_ROUTE::ROOT)
#define MULTIMSG_ROUTE_DOWN (MULTIMSG_ROUTE::DOWN)
#define MULTIMSG_ROUTE_BROADCAST (MULTIMSG_ROUTE::BROADCAST)

// enum class VPGETFRAGMENTS from "ge_prepass.h" line 4724
#define VPGETFRAGMENTS_NONE (VPGETFRAGMENTS::NONE)
#define VPGETFRAGMENTS_0 (VPGETFRAGMENTS::NONE)
#define VPGETFRAGMENTS_Z_P (VPGETFRAGMENTS::Z_P)
#define VPGETFRAGMENTS_N (VPGETFRAGMENTS::N)

// enum class NAV2DCAMERASETTINGSCACHEMODE from "ge_prepass.h" line 4748
#define NAV2DCAMERASETTINGSCACHEMODE_REVERT (NAV2DCAMERASETTINGSCACHEMODE::REVERT)
#define NAV2DCAMERASETTINGSCACHEMODE_STOREIFIN2D (NAV2DCAMERASETTINGSCACHEMODE::STOREIFIN2D)
#define NAV2DCAMERASETTINGSCACHEMODE_STOREIFIN2DANDNOTALREADYSTORED (NAV2DCAMERASETTINGSCACHEMODE::STOREIFIN2DANDNOTALREADYSTORED)
#define NAV2DCAMERASETTINGSCACHEMODE_FORCESTORE (NAV2DCAMERASETTINGSCACHEMODE::FORCESTORE)
#define NAV2DCAMERASETTINGSCACHEMODE_RET_CHANGED (NAV2DCAMERASETTINGSCACHEMODE::RET_CHANGED)
#define NAV2DCAMERASETTINGSCACHEMODE_RET_NOCHANGE (NAV2DCAMERASETTINGSCACHEMODE::RET_NOCHANGE)
#define NAV2DCAMERASETTINGSCACHEMODE_INVALID (NAV2DCAMERASETTINGSCACHEMODE::INVALID)

// enum class SIGNALMODE from "ge_prepass.h" line 4764
#define SIGNALMODE_V_DEFAULT (SIGNALMODE::V_DEFAULT)
#define SIGNALMODE_V_RESERVED (SIGNALMODE::V_RESERVED)

// enum class QUALIFIER from "ge_prepass.h" line 4775
#define QUALIFIER_NONE (QUALIFIER::NONE)
#define QUALIFIER_0 (QUALIFIER::NONE)
#define QUALIFIER_SHIFT (QUALIFIER::SHIFT)
#define QUALIFIER_CTRL (QUALIFIER::CTRL)
#define QUALIFIER_ALT (QUALIFIER::ALT)
#define QUALIFIER_MOUSEHIT (QUALIFIER::MOUSEHIT)

// enum class NOTIFY_EVENT from "ge_prepass.h" line 5000
#define NOTIFY_EVENT_NONE (NOTIFY_EVENT::NONE)
#define NOTIFY_EVENT_0 (NOTIFY_EVENT::NONE)
#define NOTIFY_EVENT_ALL (NOTIFY_EVENT::ALL)
#define NOTIFY_EVENT_ANY (NOTIFY_EVENT::ANY)
#define NOTIFY_EVENT_PRE_DEFORM (NOTIFY_EVENT::PRE_DEFORM)
#define NOTIFY_EVENT_POST_DEFORM (NOTIFY_EVENT::POST_DEFORM)
#define NOTIFY_EVENT_UNDO (NOTIFY_EVENT::UNDO)
#define NOTIFY_EVENT_MESSAGE (NOTIFY_EVENT::MESSAGE)
#define NOTIFY_EVENT_FREE (NOTIFY_EVENT::FREE)
#define NOTIFY_EVENT_COPY (NOTIFY_EVENT::COPY)
#define NOTIFY_EVENT_CACHE (NOTIFY_EVENT::CACHE)
#define NOTIFY_EVENT_REMOVE (NOTIFY_EVENT::REMOVE)
#define NOTIFY_EVENT_CLONE (NOTIFY_EVENT::CLONE)
#define NOTIFY_EVENT_INSERT (NOTIFY_EVENT::INSERT)
#define NOTIFY_EVENT_SELECTIONBIT (NOTIFY_EVENT::SELECTIONBIT)
#define NOTIFY_EVENT_HIGHLIGHTBIT (NOTIFY_EVENT::HIGHLIGHTBIT)
#define NOTIFY_EVENT_SETNAME (NOTIFY_EVENT::SETNAME)

// enum class NOTIFY_EVENT_FLAG from "ge_prepass.h" line 5028
#define NOTIFY_EVENT_FLAG_REMOVED (NOTIFY_EVENT_FLAG::REMOVED)
#define NOTIFY_EVENT_FLAG_COPY_UNDO (NOTIFY_EVENT_FLAG::COPY_UNDO)
#define NOTIFY_EVENT_FLAG_COPY_CACHE (NOTIFY_EVENT_FLAG::COPY_CACHE)
#define NOTIFY_EVENT_FLAG_COPY_DUPLICATE (NOTIFY_EVENT_FLAG::COPY_DUPLICATE)
#define NOTIFY_EVENT_FLAG_ONCE (NOTIFY_EVENT_FLAG::ONCE)
#define NOTIFY_EVENT_FLAG_COPY (NOTIFY_EVENT_FLAG::COPY)
#define NOTIFY_EVENT_FLAG_NONE (NOTIFY_EVENT_FLAG::NONE)
#define NOTIFY_EVENT_FLAG_0 (NOTIFY_EVENT_FLAG::NONE)

// enum class DESCIDSTATE from "ge_prepass.h" line 5045
#define DESCIDSTATE_NONE (DESCIDSTATE::NONE)
#define DESCIDSTATE_0 (DESCIDSTATE::NONE)
#define DESCIDSTATE_LOCKED (DESCIDSTATE::LOCKED)
#define DESCIDSTATE_HIDDEN (DESCIDSTATE::HIDDEN)
#define DESCIDSTATE_OVERRIDE (DESCIDSTATE::OVERRIDE)
#define DESCIDSTATE_FORBIDOVERRIDE (DESCIDSTATE::FORBIDOVERRIDE)

// enum class BASEDRAW_HOOK_MESSAGE from "ge_prepass.h" line 5058
#define BASEDRAW_HOOK_MESSAGE_ADAPTVIEW (BASEDRAW_HOOK_MESSAGE::ADAPTVIEW)
#define BASEDRAW_HOOK_MESSAGE_SET_SCENE_CAMERA (BASEDRAW_HOOK_MESSAGE::SET_SCENE_CAMERA)
#define BASEDRAW_HOOK_MESSAGE_DELETEBASEDRAW (BASEDRAW_HOOK_MESSAGE::DELETEBASEDRAW)

// enum class CINEMAINFO from "ge_prepass.h" line 5069
#define CINEMAINFO_TABLETT (CINEMAINFO::TABLETT)
#define CINEMAINFO_OPENGL (CINEMAINFO::OPENGL)
#define CINEMAINFO_TABLETT_HIRES (CINEMAINFO::TABLETT_HIRES)
#define CINEMAINFO_FORBID_GUI (CINEMAINFO::FORBID_GUI)
#define CINEMAINFO_FORBID_HWOGL (CINEMAINFO::FORBID_HWOGL)
#define CINEMAINFO_LISTEN (CINEMAINFO::LISTEN)
#define CINEMAINFO_WATCH_PID (CINEMAINFO::WATCH_PID)
#define CINEMAINFO_SETFOREGROUND (CINEMAINFO::SETFOREGROUND)
#define CINEMAINFO_FORCEDIALOG (CINEMAINFO::FORCEDIALOG)

// enum class PROTOCOL from "ge_prepass.h" line 5086
#define PROTOCOL_ZERO (PROTOCOL::ZERO)
#define PROTOCOL_IPV4 (PROTOCOL::IPV4)
#define PROTOCOL_IPV6 (PROTOCOL::IPV6)

// enum class RESOLVERESULT from "ge_prepass.h" line 5098
#define RESOLVERESULT_OK (RESOLVERESULT::OK)
#define RESOLVERESULT_UNKNOWN (RESOLVERESULT::UNKNOWN)

// enum class SERVERJOBLIST from "ge_prepass.h" line 5108
#define SERVERJOBLIST_INACTIVE (SERVERJOBLIST::INACTIVE)
#define SERVERJOBLIST_ACTIVE (SERVERJOBLIST::ACTIVE)
#define SERVERJOBLIST_DOWNLOAD (SERVERJOBLIST::DOWNLOAD)
#define SERVERJOBLIST_ALL (SERVERJOBLIST::ALL)

// enum class EDITION from "ge_prepass.h" line 5120
#define EDITION_C4D (EDITION::C4D)
#define EDITION_NETCLIENT (EDITION::NETCLIENT)
#define EDITION_NETSERVER (EDITION::NETSERVER)
#define EDITION_NET (EDITION::NET)

// enum class JOBCOMMAND from "ge_prepass.h" line 5132
#define JOBCOMMAND_NONE (JOBCOMMAND::NONE)
#define JOBCOMMAND_0 (JOBCOMMAND::NONE)
#define JOBCOMMAND_FETCHJOB (JOBCOMMAND::FETCHJOB)
#define JOBCOMMAND_ALLOCATESPACE (JOBCOMMAND::ALLOCATESPACE)
#define JOBCOMMAND_DOWNLOAD (JOBCOMMAND::DOWNLOAD)
#define JOBCOMMAND_RENDER (JOBCOMMAND::RENDER)
#define JOBCOMMAND_DELETE_ (JOBCOMMAND::DELETE_)
#define JOBCOMMAND_STOPANDDELETE (JOBCOMMAND::STOPANDDELETE)
#define JOBCOMMAND_ASSEMBLE (JOBCOMMAND::ASSEMBLE)
#define JOBCOMMAND_END (JOBCOMMAND::END)

// enum class RENDERTARGET from "ge_prepass.h" line 5149
#define RENDERTARGET_ALL (RENDERTARGET::ALL)
#define RENDERTARGET_SPECIFIED (RENDERTARGET::SPECIFIED)
#define RENDERTARGET_MINMAX (RENDERTARGET::MINMAX)

// enum class JOBSTATE from "ge_prepass.h" line 5160
#define JOBSTATE_IDLE (JOBSTATE::IDLE)
#define JOBSTATE_PREPARING_RUNNING (JOBSTATE::PREPARING_RUNNING)
#define JOBSTATE_PREPARING_FAILED (JOBSTATE::PREPARING_FAILED)
#define JOBSTATE_PREPARING_OK (JOBSTATE::PREPARING_OK)
#define JOBSTATE_RENDER_RUNNING (JOBSTATE::RENDER_RUNNING)
#define JOBSTATE_TE_RENDER_PAUSED (JOBSTATE::TE_RENDER_PAUSED)
#define JOBSTATE_RENDER_OK (JOBSTATE::RENDER_OK)
#define JOBSTATE_RENDER_FAILED (JOBSTATE::RENDER_FAILED)
#define JOBSTATE_ALLOCATESPACE_RUNNING (JOBSTATE::ALLOCATESPACE_RUNNING)
#define JOBSTATE_ALLOCATESPACE_OK (JOBSTATE::ALLOCATESPACE_OK)
#define JOBSTATE_ALLOCATESPACE_FAILED (JOBSTATE::ALLOCATESPACE_FAILED)
#define JOBSTATE_DOWNLOAD_RUNNING (JOBSTATE::DOWNLOAD_RUNNING)
#define JOBSTATE_DOWNLOAD_OK (JOBSTATE::DOWNLOAD_OK)
#define JOBSTATE_DOWNLOAD_FAILED (JOBSTATE::DOWNLOAD_FAILED)
#define JOBSTATE_ASSEMBLE_RUNNING (JOBSTATE::ASSEMBLE_RUNNING)
#define JOBSTATE_ASSEMBLE_OK (JOBSTATE::ASSEMBLE_OK)
#define JOBSTATE_ASSEMBLE_FAILED (JOBSTATE::ASSEMBLE_FAILED)
#define JOBSTATE_STOPPED (JOBSTATE::STOPPED)
#define JOBSTATE_QUEUED (JOBSTATE::QUEUED)
#define JOBSTATE_PENDING (JOBSTATE::PENDING)
#define JOBSTATE_QUEUED_WAITING (JOBSTATE::QUEUED_WAITING)
#define JOBSTATE_ASSEMBLE_PENDING (JOBSTATE::ASSEMBLE_PENDING)

// enum class ZEROCONFMACHINESTATE from "ge_prepass.h" line 5196
#define ZEROCONFMACHINESTATE_ONLINE (ZEROCONFMACHINESTATE::ONLINE)
#define ZEROCONFMACHINESTATE_OFFLINE (ZEROCONFMACHINESTATE::OFFLINE)
#define ZEROCONFMACHINESTATE_REMOVED (ZEROCONFMACHINESTATE::REMOVED)
#define ZEROCONFMACHINESTATE_UPDATE (ZEROCONFMACHINESTATE::UPDATE)

// enum class ZEROCONFACTION from "ge_prepass.h" line 5208
#define ZEROCONFACTION_NONE (ZEROCONFACTION::NONE)
#define ZEROCONFACTION_0 (ZEROCONFACTION::NONE)
#define ZEROCONFACTION_RESOLVE (ZEROCONFACTION::RESOLVE)
#define ZEROCONFACTION_MONITOR (ZEROCONFACTION::MONITOR)

// enum class ZEROCONFERROR from "ge_prepass.h" line 5219
#define ZEROCONFERROR_OK (ZEROCONFERROR::OK)
#define ZEROCONFERROR_UNKNOWN (ZEROCONFERROR::UNKNOWN)
#define ZEROCONFERROR_NOSUCHNAME (ZEROCONFERROR::NOSUCHNAME)
#define ZEROCONFERROR_NOMEMORY (ZEROCONFERROR::NOMEMORY)
#define ZEROCONFERROR_BADPARAM (ZEROCONFERROR::BADPARAM)
#define ZEROCONFERROR_BADREFERENCE (ZEROCONFERROR::BADREFERENCE)
#define ZEROCONFERROR_BADSTATE (ZEROCONFERROR::BADSTATE)
#define ZEROCONFERROR_BADFLAGS (ZEROCONFERROR::BADFLAGS)
#define ZEROCONFERROR_UNSUPPORTED (ZEROCONFERROR::UNSUPPORTED)
#define ZEROCONFERROR_NOTINITIALIZED (ZEROCONFERROR::NOTINITIALIZED)
#define ZEROCONFERROR_ALREADYREGISTERED (ZEROCONFERROR::ALREADYREGISTERED)
#define ZEROCONFERROR_NAMECONFLICT (ZEROCONFERROR::NAMECONFLICT)
#define ZEROCONFERROR_INVALID (ZEROCONFERROR::INVALID)
#define ZEROCONFERROR_FIREWALL (ZEROCONFERROR::FIREWALL)
#define ZEROCONFERROR_INCOMPATIBLE (ZEROCONFERROR::INCOMPATIBLE)
#define ZEROCONFERROR_BADINTERFACEINDEX (ZEROCONFERROR::BADINTERFACEINDEX)
#define ZEROCONFERROR_REFUSED (ZEROCONFERROR::REFUSED)
#define ZEROCONFERROR_NOSUCHRECORD (ZEROCONFERROR::NOSUCHRECORD)
#define ZEROCONFERROR_NOAUTH (ZEROCONFERROR::NOAUTH)
#define ZEROCONFERROR_NOSUCHKEY (ZEROCONFERROR::NOSUCHKEY)
#define ZEROCONFERROR_NATTRAVERSAL (ZEROCONFERROR::NATTRAVERSAL)
#define ZEROCONFERROR_DOUBLENAT (ZEROCONFERROR::DOUBLENAT)
#define ZEROCONFERROR_BADTIME (ZEROCONFERROR::BADTIME)
#define ZEROCONFERROR_BADSIGNAL (ZEROCONFERROR::BADSIGNAL)
#define ZEROCONFERROR_BADKEY (ZEROCONFERROR::BADKEY)
#define ZEROCONFERROR_TRANSIENT (ZEROCONFERROR::TRANSIENT)
#define ZEROCONFERROR_SERVICENOTRUNNING (ZEROCONFERROR::SERVICENOTRUNNING)
#define ZEROCONFERROR_NATPORTMAPPINGUNSUPPORTED (ZEROCONFERROR::NATPORTMAPPINGUNSUPPORTED)
#define ZEROCONFERROR_NATPORTMAPPINGDISABLED (ZEROCONFERROR::NATPORTMAPPINGDISABLED)
#define ZEROCONFERROR_NOROUTER (ZEROCONFERROR::NOROUTER)
#define ZEROCONFERROR_POLLINGMODE (ZEROCONFERROR::POLLINGMODE)

// enum class COMPONENT_SELECTION_MODES from "ge_prepass.h" line 5273
#define COMPONENT_SELECTION_MODES_POINTS (COMPONENT_SELECTION_MODES::POINTS)
#define COMPONENT_SELECTION_MODES_EDGES (COMPONENT_SELECTION_MODES::EDGES)
#define COMPONENT_SELECTION_MODES_POLYGONS (COMPONENT_SELECTION_MODES::POLYGONS)
#define COMPONENT_SELECTION_MODES_UVPOINTS (COMPONENT_SELECTION_MODES::UVPOINTS)
#define COMPONENT_SELECTION_MODES_UVPOLYGONS (COMPONENT_SELECTION_MODES::UVPOLYGONS)
#define COMPONENT_SELECTION_MODES_CURRENT (COMPONENT_SELECTION_MODES::CURRENT)

// enum class FIELDSAMPLE_FLAG from "ge_prepass.h" line 5287
#define FIELDSAMPLE_FLAG_VALUE (FIELDSAMPLE_FLAG::VALUE)
#define FIELDSAMPLE_FLAG_DIRECTION (FIELDSAMPLE_FLAG::DIRECTION)
#define FIELDSAMPLE_FLAG_COLOR (FIELDSAMPLE_FLAG::COLOR)
#define FIELDSAMPLE_FLAG_ROTATION (FIELDSAMPLE_FLAG::ROTATION)
#define FIELDSAMPLE_FLAG_ALL (FIELDSAMPLE_FLAG::ALL)

// enum class FIELDOBJECTSAMPLE_FLAG from "ge_prepass.h" line 5300
#define FIELDOBJECTSAMPLE_FLAG_NONE (FIELDOBJECTSAMPLE_FLAG::NONE)
#define FIELDOBJECTSAMPLE_FLAG_0 (FIELDOBJECTSAMPLE_FLAG::NONE)
#define FIELDOBJECTSAMPLE_FLAG_DISABLEDIRECTIONFALLOFF (FIELDOBJECTSAMPLE_FLAG::DISABLEDIRECTIONFALLOFF)

// enum class FIELDOBJECT_FLAG from "ge_prepass.h" line 5310
#define FIELDOBJECT_FLAG_NONE (FIELDOBJECT_FLAG::NONE)
#define FIELDOBJECT_FLAG_0 (FIELDOBJECT_FLAG::NONE)
#define FIELDOBJECT_FLAG_INLINE (FIELDOBJECT_FLAG::INLINE)
#define FIELDOBJECT_FLAG_GENERATINGCOLOR (FIELDOBJECT_FLAG::GENERATINGCOLOR)
#define FIELDOBJECT_FLAG_PRESERVEALPHA (FIELDOBJECT_FLAG::PRESERVEALPHA)
#define FIELDOBJECT_FLAG_SKIP (FIELDOBJECT_FLAG::SKIP)
#define FIELDOBJECT_FLAG_ERRORSKIP (FIELDOBJECT_FLAG::ERRORSKIP)
#define FIELDOBJECT_FLAG_SKIPWITHDEFAULTOUTPUTS (FIELDOBJECT_FLAG::SKIPWITHDEFAULTOUTPUTS)

// enum class VIEWPORTSELECTFLAGS from "operatingsystem.h" line 762
#define VIEWPORTSELECTFLAGS_NONE (VIEWPORTSELECTFLAGS::NONE)
#define VIEWPORTSELECTFLAGS_0 (VIEWPORTSELECTFLAGS::NONE)
#define VIEWPORTSELECTFLAGS_USE_HN (VIEWPORTSELECTFLAGS::USE_HN)
#define VIEWPORTSELECTFLAGS_USE_DEFORMERS (VIEWPORTSELECTFLAGS::USE_DEFORMERS)
#define VIEWPORTSELECTFLAGS_REGION_SELECT (VIEWPORTSELECTFLAGS::REGION_SELECT)
#define VIEWPORTSELECTFLAGS_IGNORE_HIDDEN_SEL (VIEWPORTSELECTFLAGS::IGNORE_HIDDEN_SEL)
#define VIEWPORTSELECTFLAGS_USE_DISPLAY_MODE (VIEWPORTSELECTFLAGS::USE_DISPLAY_MODE)
#define VIEWPORTSELECTFLAGS_FORCE_USE_DEFORMERS (VIEWPORTSELECTFLAGS::FORCE_USE_DEFORMERS)

// enum class SCRIPTMODE from "operatingsystem.h" line 779
#define SCRIPTMODE_NONE (SCRIPTMODE::NONE)
#define SCRIPTMODE_0 (SCRIPTMODE::NONE)
#define SCRIPTMODE_PYTHON (SCRIPTMODE::PYTHON)
#define SCRIPTMODE_AM_ID (SCRIPTMODE::AM_ID)

// enum class BASEDRAW_HIGHLIGHT from "operatingsystem.h" line 792
#define BASEDRAW_HIGHLIGHT_BEFORE_TOOLS (BASEDRAW_HIGHLIGHT::BEFORE_TOOLS)
#define BASEDRAW_HIGHLIGHT_AFTER_TOOLS (BASEDRAW_HIGHLIGHT::AFTER_TOOLS)
#define BASEDRAW_HIGHLIGHT_INVERSE_Z (BASEDRAW_HIGHLIGHT::INVERSE_Z)
#define BASEDRAW_HIGHLIGHT_DRAW_AFTER_CLEAR (BASEDRAW_HIGHLIGHT::DRAW_AFTER_CLEAR)

// enum class FIELDLAYER_CHANNELFLAG from "operatingsystem.h" line 805
#define FIELDLAYER_CHANNELFLAG_NONE (FIELDLAYER_CHANNELFLAG::NONE)
#define FIELDLAYER_CHANNELFLAG_0 (FIELDLAYER_CHANNELFLAG::NONE)
#define FIELDLAYER_CHANNELFLAG_ENABLE (FIELDLAYER_CHANNELFLAG::ENABLE)
#define FIELDLAYER_CHANNELFLAG_VALUE (FIELDLAYER_CHANNELFLAG::VALUE)
#define FIELDLAYER_CHANNELFLAG_COLOR (FIELDLAYER_CHANNELFLAG::COLOR)
#define FIELDLAYER_CHANNELFLAG_DIRECTION (FIELDLAYER_CHANNELFLAG::DIRECTION)
#define FIELDLAYER_CHANNELFLAG_ROTATION (FIELDLAYER_CHANNELFLAG::ROTATION)

// enum class POPUPEDITTEXTCALLBACK from "operatingsystem.h" line 820
#define POPUPEDITTEXTCALLBACK_TEXTCHANGED (POPUPEDITTEXTCALLBACK::TEXTCHANGED)
#define POPUPEDITTEXTCALLBACK_CLOSED (POPUPEDITTEXTCALLBACK::CLOSED)
#define POPUPEDITTEXTCALLBACK_CANCELED (POPUPEDITTEXTCALLBACK::CANCELED)
#define POPUPEDITTEXTCALLBACK_CURSOR_UP (POPUPEDITTEXTCALLBACK::CURSOR_UP)
#define POPUPEDITTEXTCALLBACK_CURSOR_DOWN (POPUPEDITTEXTCALLBACK::CURSOR_DOWN)

// enum class DAYOFWEEK from "customgui_datetime.h" line 190
#define DAYOFWEEK_MONDAY (DAYOFWEEK::MONDAY)
#define DAYOFWEEK_TUESDAY (DAYOFWEEK::TUESDAY)
#define DAYOFWEEK_WEDNESDAY (DAYOFWEEK::WEDNESDAY)
#define DAYOFWEEK_THURSDAY (DAYOFWEEK::THURSDAY)
#define DAYOFWEEK_FRIDAY (DAYOFWEEK::FRIDAY)
#define DAYOFWEEK_SATURDAY (DAYOFWEEK::SATURDAY)
#define DAYOFWEEK_SUNDAY (DAYOFWEEK::SUNDAY)

// enum class MONTHOFYEAR from "customgui_datetime.h" line 206
#define MONTHOFYEAR_JANUARY (MONTHOFYEAR::JANUARY)
#define MONTHOFYEAR_FEBRUARY (MONTHOFYEAR::FEBRUARY)
#define MONTHOFYEAR_MARCH (MONTHOFYEAR::MARCH)
#define MONTHOFYEAR_APRIL (MONTHOFYEAR::APRIL)
#define MONTHOFYEAR_MAY (MONTHOFYEAR::MAY)
#define MONTHOFYEAR_JUNE (MONTHOFYEAR::JUNE)
#define MONTHOFYEAR_JULY (MONTHOFYEAR::JULY)
#define MONTHOFYEAR_AUGUST (MONTHOFYEAR::AUGUST)
#define MONTHOFYEAR_SEPTEMBER (MONTHOFYEAR::SEPTEMBER)
#define MONTHOFYEAR_OCTOBER (MONTHOFYEAR::OCTOBER)
#define MONTHOFYEAR_NOVEMBER (MONTHOFYEAR::NOVEMBER)
#define MONTHOFYEAR_DECEMBER (MONTHOFYEAR::DECEMBER)

// enum class DESCPROP from "customgui_descproperty.h" line 62
#define DESCPROP_NONE (DESCPROP::NONE)
#define DESCPROP_0 (DESCPROP::NONE)
#define DESCPROP_SEQUENCE (DESCPROP::SEQUENCE)
#define DESCPROP_KEY (DESCPROP::KEY)
#define DESCPROP_AUTOKEY_ACTIVE (DESCPROP::AUTOKEY_ACTIVE)
#define DESCPROP_AUTOKEY_INACTIVE (DESCPROP::AUTOKEY_INACTIVE)
#define DESCPROP_NOANIM (DESCPROP::NOANIM)
#define DESCPROP_ENABLED (DESCPROP::ENABLED)
#define DESCPROP_ANIM_NOT_ALLOWED (DESCPROP::ANIM_NOT_ALLOWED)
#define DESCPROP_GLOBAL_PARAMETER (DESCPROP::GLOBAL_PARAMETER)
#define DESCPROP_KEY_CHANGED (DESCPROP::KEY_CHANGED)
#define DESCPROP_HIDDEN (DESCPROP::HIDDEN)
#define DESCPROP_LOCKED (DESCPROP::LOCKED)
#define DESCPROP_KEY_MUTED (DESCPROP::KEY_MUTED)
#define DESCPROP_PORTIN (DESCPROP::PORTIN)
#define DESCPROP_PORTIN_CONNECTED (DESCPROP::PORTIN_CONNECTED)
#define DESCPROP_PORTOUT (DESCPROP::PORTOUT)
#define DESCPROP_PORTOUT_CONNECTED (DESCPROP::PORTOUT_CONNECTED)
#define DESCPROP_CHANGED (DESCPROP::CHANGED)
#define DESCPROP_NOTOVERRIDE (DESCPROP::NOTOVERRIDE)
#define DESCPROP_AUTOTAKE (DESCPROP::AUTOTAKE)
#define DESCPROP_INVERTENABLING (DESCPROP::INVERTENABLING)
#define DESCPROP_NODE (DESCPROP::NODE)

// enum class AMFILTERFLAGS from "customgui_description.h" line 79
#define AMFILTERFLAGS_NONE (AMFILTERFLAGS::NONE)
#define AMFILTERFLAGS_0 (AMFILTERFLAGS::NONE)
#define AMFILTERFLAGS_SHOWHIDDEN (AMFILTERFLAGS::SHOWHIDDEN)
#define AMFILTERFLAGS_SHOWANIMONLY (AMFILTERFLAGS::SHOWANIMONLY)
#define AMFILTERFLAGS_SHOWLOCKED (AMFILTERFLAGS::SHOWLOCKED)
#define AMFILTERFLAGS_HIDEINLINEATTRIBUTES (AMFILTERFLAGS::HIDEINLINEATTRIBUTES)

// enum class FIELDLIST_FLAGS from "customgui_field.h" line 34
#define FIELDLIST_FLAGS_NONE (FIELDLIST_FLAGS::NONE)
#define FIELDLIST_FLAGS_0 (FIELDLIST_FLAGS::NONE)
#define FIELDLIST_FLAGS_CLAMPOUTPUT (FIELDLIST_FLAGS::CLAMPOUTPUT)
#define FIELDLIST_FLAGS_ENABLEDIRECTIONBYDEFAULT (FIELDLIST_FLAGS::ENABLEDIRECTIONBYDEFAULT)
#define FIELDLIST_FLAGS_ENABLECOLORBYDEFAULT (FIELDLIST_FLAGS::ENABLECOLORBYDEFAULT)
#define FIELDLIST_FLAGS_DISABLEVALUEBYDEFAULT (FIELDLIST_FLAGS::DISABLEVALUEBYDEFAULT)
#define FIELDLIST_FLAGS_SIMPLEGUI (FIELDLIST_FLAGS::SIMPLEGUI)
#define FIELDLIST_FLAGS_ENABLEROTATIONBYDEFAULT (FIELDLIST_FLAGS::ENABLEROTATIONBYDEFAULT)

// enum class DOCUMENT_UNIT from "customgui_unitscale.h" line 33
#define DOCUMENT_UNIT_UNDEFINED (DOCUMENT_UNIT::UNDEFINED)
#define DOCUMENT_UNIT_KM (DOCUMENT_UNIT::KM)
#define DOCUMENT_UNIT_M (DOCUMENT_UNIT::M)
#define DOCUMENT_UNIT_CM (DOCUMENT_UNIT::CM)
#define DOCUMENT_UNIT_MM (DOCUMENT_UNIT::MM)
#define DOCUMENT_UNIT_MICRO (DOCUMENT_UNIT::MICRO)
#define DOCUMENT_UNIT_NM (DOCUMENT_UNIT::NM)
#define DOCUMENT_UNIT_MILE (DOCUMENT_UNIT::MILE)
#define DOCUMENT_UNIT_YARD (DOCUMENT_UNIT::YARD)
#define DOCUMENT_UNIT_FOOT (DOCUMENT_UNIT::FOOT)
#define DOCUMENT_UNIT_INCH (DOCUMENT_UNIT::INCH)

// enum class DESCIDINFOFLAGS from "c4d_graphview.h" line 2797
#define DESCIDINFOFLAGS_NONE (DESCIDINFOFLAGS::NONE)
#define DESCIDINFOFLAGS_0 (DESCIDINFOFLAGS::NONE)
#define DESCIDINFOFLAGS_INPORT (DESCIDINFOFLAGS::INPORT)
#define DESCIDINFOFLAGS_INPORT_CONNECTED (DESCIDINFOFLAGS::INPORT_CONNECTED)
#define DESCIDINFOFLAGS_OUTPORT (DESCIDINFOFLAGS::OUTPORT)
#define DESCIDINFOFLAGS_OUTPORT_CONNECTED (DESCIDINFOFLAGS::OUTPORT_CONNECTED)

// enum class ACTIVEOBJECTMODE from "lib_activeobjectmanager.h" line 28
#define ACTIVEOBJECTMODE_NONE (ACTIVEOBJECTMODE::NONE)
#define ACTIVEOBJECTMODE_0 (ACTIVEOBJECTMODE::NONE)
#define ACTIVEOBJECTMODE_OBJECT (ACTIVEOBJECTMODE::OBJECT)
#define ACTIVEOBJECTMODE_TAG (ACTIVEOBJECTMODE::TAG)
#define ACTIVEOBJECTMODE_MATERIAL (ACTIVEOBJECTMODE::MATERIAL)
#define ACTIVEOBJECTMODE_SHADER (ACTIVEOBJECTMODE::SHADER)
#define ACTIVEOBJECTMODE_NODE (ACTIVEOBJECTMODE::NODE)
#define ACTIVEOBJECTMODE_TIMELINE (ACTIVEOBJECTMODE::TIMELINE)
#define ACTIVEOBJECTMODE_FCURVE (ACTIVEOBJECTMODE::FCURVE)
#define ACTIVEOBJECTMODE_BITMAPINFO (ACTIVEOBJECTMODE::BITMAPINFO)
#define ACTIVEOBJECTMODE_TOOL (ACTIVEOBJECTMODE::TOOL)
#define ACTIVEOBJECTMODE_VIEW (ACTIVEOBJECTMODE::VIEW)
#define ACTIVEOBJECTMODE_INFOTAB (ACTIVEOBJECTMODE::INFOTAB)
#define ACTIVEOBJECTMODE_CAMERA (ACTIVEOBJECTMODE::CAMERA)
#define ACTIVEOBJECTMODE_RENDERDATA (ACTIVEOBJECTMODE::RENDERDATA)
#define ACTIVEOBJECTMODE_DOCUMENT (ACTIVEOBJECTMODE::DOCUMENT)
#define ACTIVEOBJECTMODE_MODELING (ACTIVEOBJECTMODE::MODELING)
#define ACTIVEOBJECTMODE_LAYER (ACTIVEOBJECTMODE::LAYER)
#define ACTIVEOBJECTMODE_DUMMY (ACTIVEOBJECTMODE::DUMMY)

// enum class FLAG_STATE from "lib_birender.h" line 36
#define FLAG_STATE_NONE (FLAG_STATE::NONE)
#define FLAG_STATE_0 (FLAG_STATE::NONE)
#define FLAG_STATE_ADD (FLAG_STATE::ADD)
#define FLAG_STATE_DEL (FLAG_STATE::DEL)
#define FLAG_STATE_SET (FLAG_STATE::SET)

// enum class SHADING_CALLBACK_FLAG from "lib_birender.h" line 44
#define SHADING_CALLBACK_FLAG_NONE (SHADING_CALLBACK_FLAG::NONE)
#define SHADING_CALLBACK_FLAG_0 (SHADING_CALLBACK_FLAG::NONE)
#define SHADING_CALLBACK_FLAG_INIT (SHADING_CALLBACK_FLAG::INIT)
#define SHADING_CALLBACK_FLAG_EXIT (SHADING_CALLBACK_FLAG::EXIT)
#define SHADING_CALLBACK_FLAG_SHADER (SHADING_CALLBACK_FLAG::SHADER)
#define SHADING_CALLBACK_FLAG_THICKNESS (SHADING_CALLBACK_FLAG::THICKNESS)
#define SHADING_CALLBACK_FLAG_SHADOWS (SHADING_CALLBACK_FLAG::SHADOWS)

// enum class RENDER_CALLBACK_FLAG from "lib_birender.h" line 54
#define RENDER_CALLBACK_FLAG_NONE (RENDER_CALLBACK_FLAG::NONE)
#define RENDER_CALLBACK_FLAG_0 (RENDER_CALLBACK_FLAG::NONE)
#define RENDER_CALLBACK_FLAG_DRAW (RENDER_CALLBACK_FLAG::DRAW)
#define RENDER_CALLBACK_FLAG_FIRST (RENDER_CALLBACK_FLAG::FIRST)
#define RENDER_CALLBACK_FLAG_CALCVOL (RENDER_CALLBACK_FLAG::CALCVOL)
#define RENDER_CALLBACK_FLAG_CALCVOL_EXIT (RENDER_CALLBACK_FLAG::CALCVOL_EXIT)

// enum class RENDER_CALLBACK_RETURN_FLAG from "lib_birender.h" line 63
#define RENDER_CALLBACK_RETURN_FLAG_NONE (RENDER_CALLBACK_RETURN_FLAG::NONE)
#define RENDER_CALLBACK_RETURN_FLAG_0 (RENDER_CALLBACK_RETURN_FLAG::NONE)
#define RENDER_CALLBACK_RETURN_FLAG_EXIT (RENDER_CALLBACK_RETURN_FLAG::EXIT)
#define RENDER_CALLBACK_RETURN_FLAG_SKIP_Z (RENDER_CALLBACK_RETURN_FLAG::SKIP_Z)
#define RENDER_CALLBACK_RETURN_FLAG_SKIP_SET (RENDER_CALLBACK_RETURN_FLAG::SKIP_SET)
#define RENDER_CALLBACK_RETURN_FLAG_SAMPLED (RENDER_CALLBACK_RETURN_FLAG::SAMPLED)

// enum class OBJECT_FLAG from "lib_birender.h" line 72
#define OBJECT_FLAG_NONE (OBJECT_FLAG::NONE)
#define OBJECT_FLAG_0 (OBJECT_FLAG::NONE)
#define OBJECT_FLAG_NORMALS (OBJECT_FLAG::NORMALS)
#define OBJECT_FLAG_WORLD_THICKNESS (OBJECT_FLAG::WORLD_THICKNESS)
#define OBJECT_FLAG_CUSTOM_THICKNESS (OBJECT_FLAG::CUSTOM_THICKNESS)
#define OBJECT_FLAG_CUSTOM_WORLD_THICKNESS (OBJECT_FLAG::CUSTOM_WORLD_THICKNESS)
#define OBJECT_FLAG_NO_SHADOWS (OBJECT_FLAG::NO_SHADOWS)
#define OBJECT_FLAG_NO_REFRACTION (OBJECT_FLAG::NO_REFRACTION)
#define OBJECT_FLAG_NO_REFLECTION (OBJECT_FLAG::NO_REFLECTION)
#define OBJECT_FLAG_NO_PRECULL (OBJECT_FLAG::NO_PRECULL)
#define OBJECT_FLAG_REQUEST_SCREEN (OBJECT_FLAG::REQUEST_SCREEN)
#define OBJECT_FLAG_REQUEST_WORLD (OBJECT_FLAG::REQUEST_WORLD)
#define OBJECT_FLAG_REQUEST_CAMERA (OBJECT_FLAG::REQUEST_CAMERA)
#define OBJECT_FLAG_REQUEST_TANGENTS (OBJECT_FLAG::REQUEST_TANGENTS)
#define OBJECT_FLAG_VERTEX_COL_SAMPLING (OBJECT_FLAG::VERTEX_COL_SAMPLING)
#define OBJECT_FLAG_SAMPLING_AA (OBJECT_FLAG::SAMPLING_AA)
#define OBJECT_FLAG_RAYTRACED (OBJECT_FLAG::RAYTRACED)
#define OBJECT_FLAG_MP_NO_DEPTH (OBJECT_FLAG::MP_NO_DEPTH)

// enum class COORD_SPACE from "lib_birender.h" line 93
#define COORD_SPACE_NONE (COORD_SPACE::NONE)
#define COORD_SPACE_0 (COORD_SPACE::NONE)
#define COORD_SPACE_LOCAL (COORD_SPACE::LOCAL)
#define COORD_SPACE_WORLD (COORD_SPACE::WORLD)
#define COORD_SPACE_CAMERA (COORD_SPACE::CAMERA)
#define COORD_SPACE_SCREEN (COORD_SPACE::SCREEN)
#define COORD_SPACE_CUSTOM (COORD_SPACE::CUSTOM)

// enum class JOINT_TYPE from "lib_birender.h" line 103
#define JOINT_TYPE_NONE (JOINT_TYPE::NONE)
#define JOINT_TYPE_0 (JOINT_TYPE::NONE)
#define JOINT_TYPE_BEVEL (JOINT_TYPE::BEVEL)
#define JOINT_TYPE_ROUND (JOINT_TYPE::ROUND)
#define JOINT_TYPE_MITER (JOINT_TYPE::MITER)

// enum class INTERPOLATION_TYPE from "lib_birender.h" line 111
#define INTERPOLATION_TYPE_NONE (INTERPOLATION_TYPE::NONE)
#define INTERPOLATION_TYPE_0 (INTERPOLATION_TYPE::NONE)
#define INTERPOLATION_TYPE_LINEAR (INTERPOLATION_TYPE::LINEAR)

// enum class CAP_TYPE from "lib_birender.h" line 117
#define CAP_TYPE_NONE (CAP_TYPE::NONE)
#define CAP_TYPE_0 (CAP_TYPE::NONE)
#define CAP_TYPE_ROUND (CAP_TYPE::ROUND)
#define CAP_TYPE_FLAT (CAP_TYPE::FLAT)
#define CAP_TYPE_SQUARE (CAP_TYPE::SQUARE)
#define CAP_TYPE_LINEAR (CAP_TYPE::LINEAR)
#define CAP_TYPE_ARROW (CAP_TYPE::ARROW)
#define CAP_TYPE_CUSTOM (CAP_TYPE::CUSTOM)

// enum class RENDER_TYPE from "lib_birender.h" line 128
#define RENDER_TYPE_NONE (RENDER_TYPE::NONE)
#define RENDER_TYPE_0 (RENDER_TYPE::NONE)
#define RENDER_TYPE_RASTER (RENDER_TYPE::RASTER)
#define RENDER_TYPE_CONE (RENDER_TYPE::CONE)
#define RENDER_TYPE_RAY (RENDER_TYPE::RAY)
#define RENDER_TYPE_RASTER_TILES (RENDER_TYPE::RASTER_TILES)
#define RENDER_TYPE_RASTER_NO_MP (RENDER_TYPE::RASTER_NO_MP)

// enum class SHADOW_TYPE from "lib_birender.h" line 138
#define SHADOW_TYPE_NONE (SHADOW_TYPE::NONE)
#define SHADOW_TYPE_0 (SHADOW_TYPE::NONE)
#define SHADOW_TYPE_AUTO (SHADOW_TYPE::AUTO)
#define SHADOW_TYPE_SOFT (SHADOW_TYPE::SOFT)
#define SHADOW_TYPE_HARD (SHADOW_TYPE::HARD)

// enum class RENDER_FLAG from "lib_birender.h" line 146
#define RENDER_FLAG_NONE (RENDER_FLAG::NONE)
#define RENDER_FLAG_0 (RENDER_FLAG::NONE)
#define RENDER_FLAG_RENDER_CALLBACK (RENDER_FLAG::RENDER_CALLBACK)
#define RENDER_FLAG_RENDER_ALPHA_ONLY (RENDER_FLAG::RENDER_ALPHA_ONLY)
#define RENDER_FLAG_RENDER_NO_TRACER (RENDER_FLAG::RENDER_NO_TRACER)
#define RENDER_FLAG_RENDER_BLENDING (RENDER_FLAG::RENDER_BLENDING)
#define RENDER_FLAG_RENDER_SHADOWS (RENDER_FLAG::RENDER_SHADOWS)
#define RENDER_FLAG_RENDER_ERROR (RENDER_FLAG::RENDER_ERROR)
#define RENDER_FLAG_RENDER_UNINIT (RENDER_FLAG::RENDER_UNINIT)
#define RENDER_FLAG_RENDER_REFRACTION (RENDER_FLAG::RENDER_REFRACTION)
#define RENDER_FLAG_RENDER_REFLECTION (RENDER_FLAG::RENDER_REFLECTION)
#define RENDER_FLAG_RENDER_BUCKETS (RENDER_FLAG::RENDER_BUCKETS)
#define RENDER_FLAG_RENDER_READY (RENDER_FLAG::RENDER_READY)

// enum class BLEND_MODE from "lib_birender.h" line 162
#define BLEND_MODE_NONE (BLEND_MODE::NONE)
#define BLEND_MODE_0 (BLEND_MODE::NONE)
#define BLEND_MODE_AVERAGE (BLEND_MODE::AVERAGE)
#define BLEND_MODE_NORMAL (BLEND_MODE::NORMAL)
#define BLEND_MODE_MULTIPLY (BLEND_MODE::MULTIPLY)
#define BLEND_MODE_SCREEN (BLEND_MODE::SCREEN)
#define BLEND_MODE_DARKEN (BLEND_MODE::DARKEN)
#define BLEND_MODE_LIGHT (BLEND_MODE::LIGHT)
#define BLEND_MODE_DIFFERENCE (BLEND_MODE::DIFFERENCE)
#define BLEND_MODE_NEGATIVE (BLEND_MODE::NEGATIVE)
#define BLEND_MODE_EXCLUSION (BLEND_MODE::EXCLUSION)
#define BLEND_MODE_OVERLAY (BLEND_MODE::OVERLAY)
#define BLEND_MODE_HARDLIGHT (BLEND_MODE::HARDLIGHT)
#define BLEND_MODE_SOFTLIGHT (BLEND_MODE::SOFTLIGHT)
#define BLEND_MODE_DODGE (BLEND_MODE::DODGE)
#define BLEND_MODE_BURN (BLEND_MODE::BURN)
#define BLEND_MODE_REFLECT (BLEND_MODE::REFLECT)
#define BLEND_MODE_GLOW (BLEND_MODE::GLOW)
#define BLEND_MODE_FREEZE (BLEND_MODE::FREEZE)
#define BLEND_MODE_HEAT (BLEND_MODE::HEAT)
#define BLEND_MODE_ADD (BLEND_MODE::ADD)
#define BLEND_MODE_SUB (BLEND_MODE::SUB)
#define BLEND_MODE_STAMP (BLEND_MODE::STAMP)
#define BLEND_MODE_XOR (BLEND_MODE::XOR)
#define BLEND_MODE_HUE (BLEND_MODE::HUE)
#define BLEND_MODE_SATURATION (BLEND_MODE::SATURATION)
#define BLEND_MODE_LUMINANCE (BLEND_MODE::LUMINANCE)
#define BLEND_MODE_RED (BLEND_MODE::RED)
#define BLEND_MODE_GREEN (BLEND_MODE::GREEN)
#define BLEND_MODE_BLUE (BLEND_MODE::BLUE)
#define BLEND_MODE_OVERWRITE (BLEND_MODE::OVERWRITE)
#define BLEND_MODE_LEVR (BLEND_MODE::LEVR)

// enum class RENDERDATA_FLAG from "lib_birender.h" line 197
#define RENDERDATA_FLAG_NONE (RENDERDATA_FLAG::NONE)
#define RENDERDATA_FLAG_0 (RENDERDATA_FLAG::NONE)
#define RENDERDATA_FLAG_SCREEN (RENDERDATA_FLAG::SCREEN)
#define RENDERDATA_FLAG_WORLD (RENDERDATA_FLAG::WORLD)
#define RENDERDATA_FLAG_CAMERA (RENDERDATA_FLAG::CAMERA)
#define RENDERDATA_FLAG_LINE (RENDERDATA_FLAG::LINE)
#define RENDERDATA_FLAG_TRACING (RENDERDATA_FLAG::TRACING)
#define RENDERDATA_FLAG_REDUCED (RENDERDATA_FLAG::REDUCED)
#define RENDERDATA_FLAG_TANGENT (RENDERDATA_FLAG::TANGENT)

// enum class SETCURVE_FLAGS from "lib_birender.h" line 209
#define SETCURVE_FLAGS_NONE (SETCURVE_FLAGS::NONE)
#define SETCURVE_FLAGS_0 (SETCURVE_FLAGS::NONE)
#define SETCURVE_FLAGS_CLONE (SETCURVE_FLAGS::CLONE)
#define SETCURVE_FLAGS_OWN (SETCURVE_FLAGS::OWN)

// enum class MPBUFFER_FLAGS from "lib_birender.h" line 216
#define MPBUFFER_FLAGS_NONE (MPBUFFER_FLAGS::NONE)
#define MPBUFFER_FLAGS_0 (MPBUFFER_FLAGS::NONE)
#define MPBUFFER_FLAGS_MUL (MPBUFFER_FLAGS::MUL)
#define MPBUFFER_FLAGS_DEPTH (MPBUFFER_FLAGS::DEPTH)
#define MPBUFFER_FLAGS_ALPHA (MPBUFFER_FLAGS::ALPHA)
#define MPBUFFER_FLAGS_INVERT (MPBUFFER_FLAGS::INVERT)

// enum class CAMORPH_COPY_FLAGS from "lib_ca.h" line 774
#define CAMORPH_COPY_FLAGS_NONE (CAMORPH_COPY_FLAGS::NONE)
#define CAMORPH_COPY_FLAGS_0 (CAMORPH_COPY_FLAGS::NONE)

// enum class CAMORPH_MODE_FLAGS from "lib_ca.h" line 784
#define CAMORPH_MODE_FLAGS_COLLAPSE (CAMORPH_MODE_FLAGS::COLLAPSE)
#define CAMORPH_MODE_FLAGS_EXPAND (CAMORPH_MODE_FLAGS::EXPAND)
#define CAMORPH_MODE_FLAGS_ALL (CAMORPH_MODE_FLAGS::ALL)
#define CAMORPH_MODE_FLAGS_NONE (CAMORPH_MODE_FLAGS::NONE)
#define CAMORPH_MODE_FLAGS_0 (CAMORPH_MODE_FLAGS::NONE)

// enum class CAMORPH_MODE from "lib_ca.h" line 797
#define CAMORPH_MODE_ABS (CAMORPH_MODE::ABS)
#define CAMORPH_MODE_REL (CAMORPH_MODE::REL)
#define CAMORPH_MODE_ROT (CAMORPH_MODE::ROT)
#define CAMORPH_MODE_CORRECTIONAL (CAMORPH_MODE::CORRECTIONAL)
#define CAMORPH_MODE_CORRECTIONAL_AREA (CAMORPH_MODE::CORRECTIONAL_AREA)
#define CAMORPH_MODE_PSD (CAMORPH_MODE::PSD)
#define CAMORPH_MODE_AUTO (CAMORPH_MODE::AUTO)
#define CAMORPH_MODE_NONE (CAMORPH_MODE::NONE)
#define CAMORPH_MODE_0 (CAMORPH_MODE::NONE)

// enum class CAMORPH_DATA_FLAGS from "lib_ca.h" line 814
#define CAMORPH_DATA_FLAGS_P (CAMORPH_DATA_FLAGS::P)
#define CAMORPH_DATA_FLAGS_S (CAMORPH_DATA_FLAGS::S)
#define CAMORPH_DATA_FLAGS_R (CAMORPH_DATA_FLAGS::R)
#define CAMORPH_DATA_FLAGS_POINTS (CAMORPH_DATA_FLAGS::POINTS)
#define CAMORPH_DATA_FLAGS_TANGENTS (CAMORPH_DATA_FLAGS::TANGENTS)
#define CAMORPH_DATA_FLAGS_VERTEXMAPS (CAMORPH_DATA_FLAGS::VERTEXMAPS)
#define CAMORPH_DATA_FLAGS_WEIGHTMAPS (CAMORPH_DATA_FLAGS::WEIGHTMAPS)
#define CAMORPH_DATA_FLAGS_PARAMS (CAMORPH_DATA_FLAGS::PARAMS)
#define CAMORPH_DATA_FLAGS_USERDATA (CAMORPH_DATA_FLAGS::USERDATA)
#define CAMORPH_DATA_FLAGS_UV (CAMORPH_DATA_FLAGS::UV)
#define CAMORPH_DATA_FLAGS_ASTAG (CAMORPH_DATA_FLAGS::ASTAG)
#define CAMORPH_DATA_FLAGS_ALL (CAMORPH_DATA_FLAGS::ALL)
#define CAMORPH_DATA_FLAGS_NONE (CAMORPH_DATA_FLAGS::NONE)
#define CAMORPH_DATA_FLAGS_0 (CAMORPH_DATA_FLAGS::NONE)

// enum class CAMORPH_PSDINTERPOLATION_MODE from "lib_ca.h" line 842
#define CAMORPH_PSDINTERPOLATION_MODE_AXIS (CAMORPH_PSDINTERPOLATION_MODE::AXIS)
#define CAMORPH_PSDINTERPOLATION_MODE_JOINT (CAMORPH_PSDINTERPOLATION_MODE::JOINT)
#define CAMORPH_PSDINTERPOLATION_MODE_GLOBAL (CAMORPH_PSDINTERPOLATION_MODE::GLOBAL)
#define CAMORPH_PSDINTERPOLATION_MODE_DEFAULT (CAMORPH_PSDINTERPOLATION_MODE::DEFAULT)

// enum class GE_CM_CLIPREGION from "lib_clipmap.h" line 30
#define GE_CM_CLIPREGION_EVENODD (GE_CM_CLIPREGION::EVENODD)
#define GE_CM_CLIPREGION_WINDING_ (GE_CM_CLIPREGION::WINDING_)

// enum class GE_CM_DRAWMODE from "lib_clipmap.h" line 41
#define GE_CM_DRAWMODE_COPY (GE_CM_DRAWMODE::COPY)
#define GE_CM_DRAWMODE_BLEND (GE_CM_DRAWMODE::BLEND)
#define GE_CM_DRAWMODE_MASK (GE_CM_DRAWMODE::MASK)

// enum class GE_CM_BLIT from "lib_clipmap.h" line 57
#define GE_CM_BLIT_COPY (GE_CM_BLIT::COPY)
#define GE_CM_BLIT_COL (GE_CM_BLIT::COL)
#define GE_CM_BLIT_FG (GE_CM_BLIT::FG)

// enum class GE_CM_ARCSEGMENT from "lib_clipmap.h" line 68
#define GE_CM_ARCSEGMENT_RIGHTTOP (GE_CM_ARCSEGMENT::RIGHTTOP)
#define GE_CM_ARCSEGMENT_RIGHTBOTTOM (GE_CM_ARCSEGMENT::RIGHTBOTTOM)
#define GE_CM_ARCSEGMENT_LEFTBOTTOM (GE_CM_ARCSEGMENT::LEFTBOTTOM)
#define GE_CM_ARCSEGMENT_LEFTTOP (GE_CM_ARCSEGMENT::LEFTTOP)

// enum class GE_CM_FONTSORT from "lib_clipmap.h" line 80
#define GE_CM_FONTSORT_FLAT (GE_CM_FONTSORT::FLAT)
#define GE_CM_FONTSORT_HIERARCHICAL (GE_CM_FONTSORT::HIERARCHICAL)

// enum class SWATCH_CATEGORY from "lib_colorchooser.h" line 26
#define SWATCH_CATEGORY_GLOBAL (SWATCH_CATEGORY::GLOBAL)
#define SWATCH_CATEGORY_DOCUMENT (SWATCH_CATEGORY::DOCUMENT)

// enum class CUSTOMDATATAG_MODE from "lib_customdatatag.h" line 30
#define CUSTOMDATATAG_MODE_VERTEX (CUSTOMDATATAG_MODE::VERTEX)
#define CUSTOMDATATAG_MODE_POLYVERTEX (CUSTOMDATATAG_MODE::POLYVERTEX)

// enum class DATETIMEPARSERMODE from "lib_datetimeparser.h" line 27
#define DATETIMEPARSERMODE_DATE (DATETIMEPARSERMODE::DATE)
#define DATETIMEPARSERMODE_TIME (DATETIMEPARSERMODE::TIME)

// enum class HAIR_MSG_DATA_FLAG from "lib_hair.h" line 1495
#define HAIR_MSG_DATA_FLAG_TEXTURETAG (HAIR_MSG_DATA_FLAG::TEXTURETAG)
#define HAIR_MSG_DATA_FLAG_NONE (HAIR_MSG_DATA_FLAG::NONE)
#define HAIR_MSG_DATA_FLAG_0 (HAIR_MSG_DATA_FLAG::NONE)

// enum class HAIR_MSG_DATA_TYPE from "lib_hair.h" line 1507
#define HAIR_MSG_DATA_TYPE_GETMATERIAL (HAIR_MSG_DATA_TYPE::GETMATERIAL)
#define HAIR_MSG_DATA_TYPE_ADDOBJECT (HAIR_MSG_DATA_TYPE::ADDOBJECT)
#define HAIR_MSG_DATA_TYPE_INIT (HAIR_MSG_DATA_TYPE::INIT)
#define HAIR_MSG_DATA_TYPE_INITRENDER (HAIR_MSG_DATA_TYPE::INITRENDER)
#define HAIR_MSG_DATA_TYPE_FREERENDER (HAIR_MSG_DATA_TYPE::FREERENDER)
#define HAIR_MSG_DATA_TYPE_NONE (HAIR_MSG_DATA_TYPE::NONE)
#define HAIR_MSG_DATA_TYPE_0 (HAIR_MSG_DATA_TYPE::NONE)

// enum class ICONFLAG from "lib_iconcollection.h" line 19
#define ICONFLAG_NONE (ICONFLAG::NONE)
#define ICONFLAG_0 (ICONFLAG::NONE)
#define ICONFLAG_COPY (ICONFLAG::COPY)
#define ICONFLAG_OVERWRITE (ICONFLAG::OVERWRITE)
#define ICONFLAG_DOUBLESIZE (ICONFLAG::DOUBLESIZE)

// enum class INTERSECTTYPE from "lib_intersect.h" line 25
#define INTERSECTTYPE_BVH (INTERSECTTYPE::BVH)

// enum class OUTPUTLOCATION from "lib_net.h" line 262
#define OUTPUTLOCATION_BETA (OUTPUTLOCATION::BETA)
#define OUTPUTLOCATION_C4D (OUTPUTLOCATION::C4D)
#define OUTPUTLOCATION_NET (OUTPUTLOCATION::NET)
#define OUTPUTLOCATION_ALL (OUTPUTLOCATION::ALL)

// enum class TASKSTATE from "lib_net.h" line 272
#define TASKSTATE_NEW (TASKSTATE::NEW)
#define TASKSTATE_ASSIGNED (TASKSTATE::ASSIGNED)
#define TASKSTATE_TRANSFERED (TASKSTATE::TRANSFERED)
#define TASKSTATE_ASSEMBLED (TASKSTATE::ASSEMBLED)
#define TASKSTATE_SKIPPED (TASKSTATE::SKIPPED)

// enum class STEREOTYPE from "lib_pictureviewer.h" line 45
#define STEREOTYPE_REGULAR (STEREOTYPE::REGULAR)
#define STEREOTYPE_STREAM (STEREOTYPE::STREAM)
#define STEREOTYPE_COMBINED (STEREOTYPE::COMBINED)

// enum class PVFRAME_FINISH from "lib_pictureviewer.h" line 52
#define PVFRAME_FINISH_DESTROY_NODE (PVFRAME_FINISH::DESTROY_NODE)
#define PVFRAME_FINISH_KEEP_NODE_AND_COPYBMP (PVFRAME_FINISH::KEEP_NODE_AND_COPYBMP)
#define PVFRAME_FINISH_KEEP_NODE_AND_USEBMP (PVFRAME_FINISH::KEEP_NODE_AND_USEBMP)

// enum class PYFN_FLAGS from "lib_py.h" line 49
#define PYFN_FLAGS_VARARGS (PYFN_FLAGS::VARARGS)
#define PYFN_FLAGS_KEYWORDS (PYFN_FLAGS::KEYWORDS)
#define PYFN_FLAGS_NOARGS (PYFN_FLAGS::NOARGS)
#define PYFN_FLAGS_STATIC (PYFN_FLAGS::STATIC)
#define PYFN_FLAGS_NONE (PYFN_FLAGS::NONE)
#define PYFN_FLAGS_0 (PYFN_FLAGS::NONE)
#define PYFN_FLAGS_ARGS_KEYWORDS (PYFN_FLAGS::ARGS_KEYWORDS)

// enum class XPYCOMPILERINPUT from "lib_py.h" line 61
#define XPYCOMPILERINPUT_SINGLE (XPYCOMPILERINPUT::SINGLE)
#define XPYCOMPILERINPUT_FILE (XPYCOMPILERINPUT::FILE)
#define XPYCOMPILERINPUT_EVAL (XPYCOMPILERINPUT::EVAL)

// enum class REGPARSEMODE from "lib_regexpr.h" line 24
#define REGPARSEMODE_MATCH (REGPARSEMODE::MATCH)
#define REGPARSEMODE_CONTAINS (REGPARSEMODE::CONTAINS)
#define REGPARSEMODE_STARTS (REGPARSEMODE::STARTS)
#define REGPARSEMODE_ENDS (REGPARSEMODE::ENDS)

// enum class SCULPTBRUSHID from "lib_sculptbrush.h" line 42
#define SCULPTBRUSHID_SMOOTH (SCULPTBRUSHID::SMOOTH)
#define SCULPTBRUSHID_PULL (SCULPTBRUSHID::PULL)
#define SCULPTBRUSHID_FLATTEN (SCULPTBRUSHID::FLATTEN)
#define SCULPTBRUSHID_PINCH (SCULPTBRUSHID::PINCH)
#define SCULPTBRUSHID_ERASE (SCULPTBRUSHID::ERASE)
#define SCULPTBRUSHID_GRAB (SCULPTBRUSHID::GRAB)
#define SCULPTBRUSHID_MASK (SCULPTBRUSHID::MASK)
#define SCULPTBRUSHID_KNIFE (SCULPTBRUSHID::KNIFE)
#define SCULPTBRUSHID_WAX (SCULPTBRUSHID::WAX)
#define SCULPTBRUSHID_INFLATE (SCULPTBRUSHID::INFLATE)
#define SCULPTBRUSHID_FILL (SCULPTBRUSHID::FILL)
#define SCULPTBRUSHID_SCRAPE (SCULPTBRUSHID::SCRAPE)
#define SCULPTBRUSHID_REPEAT (SCULPTBRUSHID::REPEAT)
#define SCULPTBRUSHID_AMPLIFY (SCULPTBRUSHID::AMPLIFY)
#define SCULPTBRUSHID_SELECT (SCULPTBRUSHID::SELECT)

// enum class FIRSTHITPPOINTTYPE from "lib_sculptbrush.h" line 66
#define FIRSTHITPPOINTTYPE_SELECTED (FIRSTHITPPOINTTYPE::SELECTED)
#define FIRSTHITPPOINTTYPE_AVERAGE (FIRSTHITPPOINTTYPE::AVERAGE)

// enum class SCULPTBRUSHMODE from "lib_sculptbrush.h" line 77
#define SCULPTBRUSHMODE_NORMAL (SCULPTBRUSHMODE::NORMAL)
#define SCULPTBRUSHMODE_GRAB (SCULPTBRUSHMODE::GRAB)

// enum class SCULPTBRUSHDATATYPE from "lib_sculptbrush.h" line 90
#define SCULPTBRUSHDATATYPE_NONE (SCULPTBRUSHDATATYPE::NONE)
#define SCULPTBRUSHDATATYPE_0 (SCULPTBRUSHDATATYPE::NONE)
#define SCULPTBRUSHDATATYPE_POINT (SCULPTBRUSHDATATYPE::POINT)
#define SCULPTBRUSHDATATYPE_MASK (SCULPTBRUSHDATATYPE::MASK)
#define SCULPTBRUSHDATATYPE_COLOR (SCULPTBRUSHDATATYPE::COLOR)
#define SCULPTBRUSHDATATYPE_DIRTYPOINTS (SCULPTBRUSHDATATYPE::DIRTYPOINTS)

// enum class OVERRIDE from "lib_sculptbrush.h" line 104
#define OVERRIDE_NONE (OVERRIDE::NONE)
#define OVERRIDE_0 (OVERRIDE::NONE)
#define OVERRIDE_INVERT (OVERRIDE::INVERT)
#define OVERRIDE_SMOOTH (OVERRIDE::SMOOTH)
#define OVERRIDE_SMOOTHTOOL (OVERRIDE::SMOOTHTOOL)

// enum class SAMPLEMODE from "lib_sculptbrush.h" line 119
#define SAMPLEMODE_TAKEONEPIXEL (SAMPLEMODE::TAKEONEPIXEL)

// enum class SCULPTOFFSETFLAGS from "lib_sculptbrush.h" line 129
#define SCULPTOFFSETFLAGS_NONE (SCULPTOFFSETFLAGS::NONE)
#define SCULPTOFFSETFLAGS_0 (SCULPTOFFSETFLAGS::NONE)
#define SCULPTOFFSETFLAGS_RESPECTSTRENGTH (SCULPTOFFSETFLAGS::RESPECTSTRENGTH)
#define SCULPTOFFSETFLAGS_IGNOREMASK (SCULPTOFFSETFLAGS::IGNOREMASK)

// enum class SPLINEHELPFLAGS from "lib_splinehelp.h" line 28
#define SPLINEHELPFLAGS_NONE (SPLINEHELPFLAGS::NONE)
#define SPLINEHELPFLAGS_0 (SPLINEHELPFLAGS::NONE)
#define SPLINEHELPFLAGS_USERDEFORMERS (SPLINEHELPFLAGS::USERDEFORMERS)
#define SPLINEHELPFLAGS_GLOBALSPACE (SPLINEHELPFLAGS::GLOBALSPACE)
#define SPLINEHELPFLAGS_TARGETRAIL (SPLINEHELPFLAGS::TARGETRAIL)
#define SPLINEHELPFLAGS_CONTINUECURVE (SPLINEHELPFLAGS::CONTINUECURVE)
#define SPLINEHELPFLAGS_FORCEUPDATE (SPLINEHELPFLAGS::FORCEUPDATE)
#define SPLINEHELPFLAGS_RETAINLINEOBJECT (SPLINEHELPFLAGS::RETAINLINEOBJECT)

// enum class SUBSTANCE_MATERIAL_MODE from "lib_substance.h" line 248
#define SUBSTANCE_MATERIAL_MODE_STANDARD (SUBSTANCE_MATERIAL_MODE::STANDARD)
#define SUBSTANCE_MATERIAL_MODE_METALLIC (SUBSTANCE_MATERIAL_MODE::METALLIC)
#define SUBSTANCE_MATERIAL_MODE_GLOSSY (SUBSTANCE_MATERIAL_MODE::GLOSSY)
#define SUBSTANCE_MATERIAL_MODE_AUTO (SUBSTANCE_MATERIAL_MODE::AUTO)
#define SUBSTANCE_MATERIAL_MODE_NONE (SUBSTANCE_MATERIAL_MODE::NONE)
#define SUBSTANCE_MATERIAL_MODE_0 (SUBSTANCE_MATERIAL_MODE::NONE)

// enum class SUBSTANCE_IMPORT_RESULT from "lib_substance.h" line 262
#define SUBSTANCE_IMPORT_RESULT_SUCCESS (SUBSTANCE_IMPORT_RESULT::SUCCESS)
#define SUBSTANCE_IMPORT_RESULT_DOESNOTEXIST (SUBSTANCE_IMPORT_RESULT::DOESNOTEXIST)
#define SUBSTANCE_IMPORT_RESULT_NOTANASSET (SUBSTANCE_IMPORT_RESULT::NOTANASSET)
#define SUBSTANCE_IMPORT_RESULT_UNKNOWNERROR (SUBSTANCE_IMPORT_RESULT::UNKNOWNERROR)

// enum class SUBSTANCE_IMPORT_COPY from "lib_substance.h" line 276
#define SUBSTANCE_IMPORT_COPY_YES (SUBSTANCE_IMPORT_COPY::YES)
#define SUBSTANCE_IMPORT_COPY_NO (SUBSTANCE_IMPORT_COPY::NO)
#define SUBSTANCE_IMPORT_COPY_ASK (SUBSTANCE_IMPORT_COPY::ASK)

// enum class SUBSTANCE_INPUT_TYPE from "lib_substance.h" line 288
#define SUBSTANCE_INPUT_TYPE_INTEGER (SUBSTANCE_INPUT_TYPE::INTEGER)
#define SUBSTANCE_INPUT_TYPE_INTEGER_2 (SUBSTANCE_INPUT_TYPE::INTEGER_2)
#define SUBSTANCE_INPUT_TYPE_INTEGER_3 (SUBSTANCE_INPUT_TYPE::INTEGER_3)
#define SUBSTANCE_INPUT_TYPE_INTEGER_4 (SUBSTANCE_INPUT_TYPE::INTEGER_4)
#define SUBSTANCE_INPUT_TYPE_BOOL (SUBSTANCE_INPUT_TYPE::BOOL)
#define SUBSTANCE_INPUT_TYPE_FLOAT (SUBSTANCE_INPUT_TYPE::FLOAT)
#define SUBSTANCE_INPUT_TYPE_FLOAT_2 (SUBSTANCE_INPUT_TYPE::FLOAT_2)
#define SUBSTANCE_INPUT_TYPE_FLOAT_3 (SUBSTANCE_INPUT_TYPE::FLOAT_3)
#define SUBSTANCE_INPUT_TYPE_FLOAT_4 (SUBSTANCE_INPUT_TYPE::FLOAT_4)
#define SUBSTANCE_INPUT_TYPE_IMAGE (SUBSTANCE_INPUT_TYPE::IMAGE)
#define SUBSTANCE_INPUT_TYPE_STRING (SUBSTANCE_INPUT_TYPE::STRING)
#define SUBSTANCE_INPUT_TYPE_COLOR_RGB (SUBSTANCE_INPUT_TYPE::COLOR_RGB)
#define SUBSTANCE_INPUT_TYPE_COLOR_RGBA (SUBSTANCE_INPUT_TYPE::COLOR_RGBA)
#define SUBSTANCE_INPUT_TYPE_RESOLUTION (SUBSTANCE_INPUT_TYPE::RESOLUTION)

// enum class SUBSTANCE_OUTPUT_TYPE from "lib_substance.h" line 311
#define SUBSTANCE_OUTPUT_TYPE_DIFFUSE (SUBSTANCE_OUTPUT_TYPE::DIFFUSE)
#define SUBSTANCE_OUTPUT_TYPE_BASECOLOR (SUBSTANCE_OUTPUT_TYPE::BASECOLOR)
#define SUBSTANCE_OUTPUT_TYPE_OPACITY (SUBSTANCE_OUTPUT_TYPE::OPACITY)
#define SUBSTANCE_OUTPUT_TYPE_EMISSIVE (SUBSTANCE_OUTPUT_TYPE::EMISSIVE)
#define SUBSTANCE_OUTPUT_TYPE_AMBIENT (SUBSTANCE_OUTPUT_TYPE::AMBIENT)
#define SUBSTANCE_OUTPUT_TYPE_AMBIENTOCCLUSION (SUBSTANCE_OUTPUT_TYPE::AMBIENTOCCLUSION)
#define SUBSTANCE_OUTPUT_TYPE_MASK (SUBSTANCE_OUTPUT_TYPE::MASK)
#define SUBSTANCE_OUTPUT_TYPE_NORMAL (SUBSTANCE_OUTPUT_TYPE::NORMAL)
#define SUBSTANCE_OUTPUT_TYPE_BUMP (SUBSTANCE_OUTPUT_TYPE::BUMP)
#define SUBSTANCE_OUTPUT_TYPE_HEIGHT (SUBSTANCE_OUTPUT_TYPE::HEIGHT)
#define SUBSTANCE_OUTPUT_TYPE_DISPLACEMENT (SUBSTANCE_OUTPUT_TYPE::DISPLACEMENT)
#define SUBSTANCE_OUTPUT_TYPE_SPECULAR (SUBSTANCE_OUTPUT_TYPE::SPECULAR)
#define SUBSTANCE_OUTPUT_TYPE_SPECULARLEVEL (SUBSTANCE_OUTPUT_TYPE::SPECULARLEVEL)
#define SUBSTANCE_OUTPUT_TYPE_SPECULARCOLOR (SUBSTANCE_OUTPUT_TYPE::SPECULARCOLOR)
#define SUBSTANCE_OUTPUT_TYPE_GLOSSINESS (SUBSTANCE_OUTPUT_TYPE::GLOSSINESS)
#define SUBSTANCE_OUTPUT_TYPE_ROUGHNESS (SUBSTANCE_OUTPUT_TYPE::ROUGHNESS)
#define SUBSTANCE_OUTPUT_TYPE_ANISOTROPYLEVEL (SUBSTANCE_OUTPUT_TYPE::ANISOTROPYLEVEL)
#define SUBSTANCE_OUTPUT_TYPE_ANISOTROPYANGLE (SUBSTANCE_OUTPUT_TYPE::ANISOTROPYANGLE)
#define SUBSTANCE_OUTPUT_TYPE_TRANSMISSIVE (SUBSTANCE_OUTPUT_TYPE::TRANSMISSIVE)
#define SUBSTANCE_OUTPUT_TYPE_REFLECTION (SUBSTANCE_OUTPUT_TYPE::REFLECTION)
#define SUBSTANCE_OUTPUT_TYPE_REFRACTION (SUBSTANCE_OUTPUT_TYPE::REFRACTION)
#define SUBSTANCE_OUTPUT_TYPE_ENVIRONMENT (SUBSTANCE_OUTPUT_TYPE::ENVIRONMENT)
#define SUBSTANCE_OUTPUT_TYPE_IOR (SUBSTANCE_OUTPUT_TYPE::IOR)
#define SUBSTANCE_OUTPUT_TYPE_SCATTERING0 (SUBSTANCE_OUTPUT_TYPE::SCATTERING0)
#define SUBSTANCE_OUTPUT_TYPE_SCATTERING1 (SUBSTANCE_OUTPUT_TYPE::SCATTERING1)
#define SUBSTANCE_OUTPUT_TYPE_SCATTERING2 (SUBSTANCE_OUTPUT_TYPE::SCATTERING2)
#define SUBSTANCE_OUTPUT_TYPE_SCATTERING3 (SUBSTANCE_OUTPUT_TYPE::SCATTERING3)
#define SUBSTANCE_OUTPUT_TYPE_METALLIC (SUBSTANCE_OUTPUT_TYPE::METALLIC)
#define SUBSTANCE_OUTPUT_TYPE_ANY (SUBSTANCE_OUTPUT_TYPE::ANY)
#define SUBSTANCE_OUTPUT_TYPE_UNKNOWN (SUBSTANCE_OUTPUT_TYPE::UNKNOWN)
#define SUBSTANCE_OUTPUT_TYPE_INTERNAL_COUNT (SUBSTANCE_OUTPUT_TYPE::INTERNAL_COUNT)

// enum class TAKE_MODE from "lib_takesystem.h" line 41
#define TAKE_MODE_MANUAL (TAKE_MODE::MANUAL)
#define TAKE_MODE_AUTO (TAKE_MODE::AUTO)

// enum class OVERRIDEENABLING from "lib_takesystem.h" line 51
#define OVERRIDEENABLING_NONE (OVERRIDEENABLING::NONE)
#define OVERRIDEENABLING_0 (OVERRIDEENABLING::NONE)
#define OVERRIDEENABLING_OBJECT (OVERRIDEENABLING::OBJECT)
#define OVERRIDEENABLING_TAG (OVERRIDEENABLING::TAG)
#define OVERRIDEENABLING_MATERIAL (OVERRIDEENABLING::MATERIAL)
#define OVERRIDEENABLING_SHADER (OVERRIDEENABLING::SHADER)
#define OVERRIDEENABLING_LAYER (OVERRIDEENABLING::LAYER)
#define OVERRIDEENABLING_OTHER (OVERRIDEENABLING::OTHER)
#define OVERRIDEENABLING_GLOBAL (OVERRIDEENABLING::GLOBAL)
#define OVERRIDEENABLING_ENABLING (OVERRIDEENABLING::ENABLING)
#define OVERRIDEENABLING_TRANSFOM (OVERRIDEENABLING::TRANSFOM)
#define OVERRIDEENABLING_CAMERA (OVERRIDEENABLING::CAMERA)
#define OVERRIDEENABLING_RS (OVERRIDEENABLING::RS)
#define OVERRIDEENABLING_PARAM (OVERRIDEENABLING::PARAM)

// enum class VIEWHUD_FLAG from "lib_viewport.h" line 150
#define VIEWHUD_FLAG_NOUPDATE (VIEWHUD_FLAG::NOUPDATE)
#define VIEWHUD_FLAG_NONE (VIEWHUD_FLAG::NONE)
#define VIEWHUD_FLAG_0 (VIEWHUD_FLAG::NONE)

#endif  // if API_VERSION >= 20000
